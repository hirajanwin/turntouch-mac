//
//  ReceiptValidation.h
//  Turn Touch Remote
//
//  Created by Samuel Clay on 6/3/16.
//  Copyright Â© 2016 Turn Touch. All rights reserved.
//

#ifndef ReceiptValidation_h
#define ReceiptValidation_h
//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : OSX
// CFBundleIdentifier         : com.turntouch.Turn-Touch-Remote
// CFBundleShortVersionString : 0.9.8.3
// Prefix                     : ReceiptValidation
// Success Behavior           : RunApplication
// Failure Behavior           : ExitWith173
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <CoreFoundation/CoreFoundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __ReceiptValidation_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __ReceiptValidation_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __ReceiptValidation_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __ReceiptValidation_RECEIPT_LOG(...)
#endif
    
    // Otherwise specified, check the entitlements
#ifndef RECEIGEN_CHECK_ENTITLEMENTS
#define RECEIGEN_CHECK_ENTITLEMENTS 1
#endif
    
    // Function pointer for string decryption
    typedef void (*ReceiptValidation_decrypt)(const char *, char *, int, int);
    
    // Keys for each receipt attribute
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        ReceiptValidation_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        ReceiptValidation_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        ReceiptValidation_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        ReceiptValidation_StoreNone = 2375,
        // Bundle identifier
        ReceiptValidation_StoreReceiptAttributeTypeBundleId = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleIdData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Application version
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
        ReceiptValidation_StoreReceiptAttributeTypeBundleVersionData = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2) + 1,
        // Opaque value
        ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
        // Hash value
        ReceiptValidation_StoreReceiptAttributeTypeHash = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
        // In-app purchase receipt
        ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
        // Original Application Version
        ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion << 2),
        // Receipt Expiration Date
        ReceiptValidation_StoreReceiptAttributeTypeExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_ReceiptAttributeTypeExpirationDate << 2),
        // Quantity
        ReceiptValidation_StoreInAppAttributeTypeQuantity = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeQuantity << 2),
        // Product identifier
        ReceiptValidation_StoreInAppAttributeTypeProductIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeProductIdentifer << 2),
        // Transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeTransactionIdentifer << 2),
        // Purchase date
        ReceiptValidation_StoreInAppAttributeTypePurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypePurchaseDate << 2),
        // Original transaction identifier
        ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer << 2),
        // Original purchase date
        ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate << 2),
        // Subscription Expiration Date
        ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate << 2),
        // Web Order Line Item ID
        ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeWebOrderLineItemId << 2),
        // Cancellation Date
        ReceiptValidation_StoreInAppAttributeTypeCancellationDate = ReceiptValidation_StoreNone + (ReceiptValidation_InAppAttributeTypeCancellationDate << 2)
        
    } ReceiptValidation_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleId]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeBundleVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define ReceiptValidation_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:ReceiptValidation_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeQuantity]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeProductIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypePurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeOriginalPurchaseDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeWebOrderLineItemId]
#define ReceiptValidation_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:ReceiptValidation_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _ReceiptValidation_CheckingContext {
        CFTypeRef dummy000A;
        CFTypeRef dummy0008;
        CFTypeRef dummy0005;
        CFTypeRef dummy0004;
        CFTypeRef dummy0007;
        CFTypeRef dummy000C;
        CFTypeRef main_bundle;
        CFTypeRef ca_data;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0009;
        CFTypeRef receipt_data;
        const char ** argv;
        CFTypeRef dummy0006;
        CFTypeRef dummy000D;
        CFTypeRef dummy0000;
        CFTypeRef dummy000E;
        CFTypeRef dummy0001;
        long argc;
        CFTypeRef dummy000B;
        CFTypeRef dummy0003;
        CFTypeRef guid_data;
        CFTypeRef dummy0002;
    } ReceiptValidation_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _ReceiptValidation_ParsingContext {
        CFTypeRef dummy000C;
        CFTypeRef dummy0004;
        CFTypeRef dummy0007;
        CFTypeRef dummy0006;
        struct _ReceiptValidation_ParsingContext * parent;
        CFTypeRef dummy0005;
        CFTypeRef dummy0008;
        CFTypeRef dictionary;
        CFTypeRef dummy0002;
        CFTypeRef dummy0009;
        CFTypeRef dummy000A;
        const unsigned char * ptr;
        CFTypeRef dummy000B;
        CFTypeRef dummy0001;
        CFTypeRef dummy000E;
        const unsigned char * end;
        CFTypeRef dummy0000;
        CFTypeRef dummy000D;
        CFTypeRef dummy0003;
    } ReceiptValidation_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__ReceiptValidation_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__ReceiptValidation_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__ReceiptValidation_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__ReceiptValidation_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__ReceiptValidation_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__ReceiptValidation_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__ReceiptValidation_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__ReceiptValidation_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__ReceiptValidation_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__ReceiptValidation_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__ReceiptValidation_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__ReceiptValidation_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__ReceiptValidation_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__ReceiptValidation_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__ReceiptValidation_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__ReceiptValidation_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__ReceiptValidation_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__ReceiptValidation_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleCopyBundleURL
    typedef CFURLRef (*__ReceiptValidation_CFBundleCopyBundleURL)(CFBundleRef bundle);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__ReceiptValidation_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__ReceiptValidation_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__ReceiptValidation_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__ReceiptValidation_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__ReceiptValidation_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__ReceiptValidation_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__ReceiptValidation_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__ReceiptValidation_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__ReceiptValidation_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__ReceiptValidation_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__ReceiptValidation_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__ReceiptValidation_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__ReceiptValidation_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__ReceiptValidation_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__ReceiptValidation_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__ReceiptValidation_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__ReceiptValidation_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__ReceiptValidation_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__ReceiptValidation_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__ReceiptValidation_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__ReceiptValidation_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__ReceiptValidation_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__ReceiptValidation_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__ReceiptValidation_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__ReceiptValidation_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__ReceiptValidation_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFStringGetFileSystemRepresentation
    typedef Boolean (*__ReceiptValidation_CFStringGetFileSystemRepresentation)(CFStringRef string, char *buffer, CFIndex maxBufLen);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol CFURLCreateCopyAppendingPathComponent
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateCopyAppendingPathComponent)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
    // Symbol CFURLCreateFromFileSystemRepresentation
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateFromFileSystemRepresentation)(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
    // Symbol CFURLCreateWithFileSystemPathRelativeToBase
    typedef CFURLRef (*__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__ReceiptValidation_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__ReceiptValidation_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__ReceiptValidation_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__ReceiptValidation_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__ReceiptValidation_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__ReceiptValidation_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__ReceiptValidation_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__ReceiptValidation_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__ReceiptValidation_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__ReceiptValidation_exit)(int status);
    // Symbol glob
    typedef int (*__ReceiptValidation_glob)(const char * __restrict, int, int (*)(const char *, int), glob_t * __restrict);
    // Symbol glob_b
    typedef int (*__ReceiptValidation_glob_b)(const char * __restrict, int, int (^)(const char *, int), glob_t * __restrict);
    // Symbol globfree
    typedef void (*__ReceiptValidation_globfree)(glob_t *);
    // Symbol IOBSDNameMatching
    typedef CFMutableDictionaryRef (*__ReceiptValidation_IOBSDNameMatching)(mach_port_t masterPort, uint32_t options, const char * bsdName);
    // Symbol IOIteratorNext
    typedef io_object_t (*__ReceiptValidation_IOIteratorNext)(io_iterator_t iterator);
    // Symbol IOMasterPort
    typedef kern_return_t (*__ReceiptValidation_IOMasterPort)(mach_port_t bootstrapPort, mach_port_t *masterPort);
    // Symbol IOObjectRelease
    typedef kern_return_t (*__ReceiptValidation_IOObjectRelease)(io_object_t object);
    // Symbol IORegistryEntryCreateCFProperty
    typedef CFTypeRef (*__ReceiptValidation_IORegistryEntryCreateCFProperty)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
    // Symbol IORegistryEntryGetParentEntry
    typedef kern_return_t (*__ReceiptValidation_IORegistryEntryGetParentEntry)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
    // Symbol IOServiceGetMatchingServices
    typedef kern_return_t (*__ReceiptValidation_IOServiceGetMatchingServices)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__ReceiptValidation_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__ReceiptValidation_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__ReceiptValidation_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__ReceiptValidation_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__ReceiptValidation_kCFTypeDictionaryValueCallBacks;
    // Symbol kSecClass
    typedef const CFTypeRef *__ReceiptValidation_kSecClass;
    // Symbol kSecClassCertificate
    typedef const CFTypeRef *__ReceiptValidation_kSecClassCertificate;
    // Symbol kSecMatchLimit
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimit;
    // Symbol kSecMatchLimitAll
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchLimitAll;
    // Symbol kSecMatchSearchList
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSearchList;
    // Symbol kSecMatchSubjectContains
    typedef const CFTypeRef *__ReceiptValidation_kSecMatchSubjectContains;
    // Symbol kSecReturnRef
    typedef const CFTypeRef *__ReceiptValidation_kSecReturnRef;
    // Symbol longjmp
    typedef void (*__ReceiptValidation_longjmp)(jmp_buf buf, int ret);
    // Symbol NSApplicationMain
    typedef int (*__ReceiptValidation_NSApplicationMain)(int argc, const char *argv[]);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__ReceiptValidation_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__ReceiptValidation_objc_getClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__ReceiptValidation_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__ReceiptValidation_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__ReceiptValidation_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__ReceiptValidation_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__ReceiptValidation_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol SecCertificateCopyData
    typedef CFDataRef (*__ReceiptValidation_SecCertificateCopyData)(SecCertificateRef certificate);
    // Symbol SecItemCopyMatching
    typedef OSStatus (*__ReceiptValidation_SecItemCopyMatching)(CFDictionaryRef query, CFTypeRef *result);
    // Symbol SecKeychainOpen
    typedef OSStatus (*__ReceiptValidation_SecKeychainOpen)(const char *pathName, SecKeychainRef *keychain);
    // Symbol SecKeychainSearchCopyNext
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCopyNext)(SecKeychainSearchRef searchRef, SecKeychainItemRef *itemRef);
    // Symbol SecKeychainSearchCreateFromAttributes
    typedef OSStatus (*__ReceiptValidation_SecKeychainSearchCreateFromAttributes)(CFTypeRef keychainOrArray, SecItemClass itemClass, const SecKeychainAttributeList *attrList, SecKeychainSearchRef *searchRef);
    // Symbol sel_registerName
    typedef SEL (*__ReceiptValidation_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__ReceiptValidation_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__ReceiptValidation_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__ReceiptValidation_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__ReceiptValidation_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__ReceiptValidation_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__ReceiptValidation_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__ReceiptValidation_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__ReceiptValidation_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__ReceiptValidation_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__ReceiptValidation_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__ReceiptValidation_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__ReceiptValidation_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__ReceiptValidation_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__ReceiptValidation_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__ReceiptValidation_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__ReceiptValidation_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__ReceiptValidation_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *ReceiptValidation_Strings[608] = {
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor3) / S(12) / L(50)
        "\x10\x6c\x46\x4c\x4b\x5a\x52\x10\x73\x56\x5d\x4d\x5e\x4d\x46\x10\x79\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x4c\x10\x7e\x4f\x4f\x74\x56\x4b\x11\x59\x4d\x5e\x52\x5a\x48\x50\x4d\x54\x10\x7e\x4f\x4f\x74\x56\x4b\x3f",
        // "longjmp" / M(Xor1) / S(243) / L(7)
        "\x9f\x9c\x9d\x94\x99\x9e\x83\xf3\xf8\x7d\x72\xbf\x40\x0d\x7d\x2b",
        // "" / M(None) / S(0) / L(0)
        "\x06\x6c\x6f\x07\x7f\x4a\xe8\x9b\xe8\x1a\xac\x9a\xc0\x00\x92\xa3\x4b\x72\x33\x24\xb9\xbe\x85\xfa\x60\xe0\x2d\x9f\x90\x80\x53\xf7",
        // "EVP_get_digestbyname" / M(Xor1) / S(252) / L(20)
        "\xb9\xaa\xac\xa3\x9b\x99\x88\xa3\x98\x95\x9b\x99\x8f\x88\x9e\x85\x92\x9d\x91\x99\xfc",
        // "alloc" / M(Xor2) / S(151) / L(5)
        "\xe6\xeb\xeb\xe8\xe4\x87\x55\x67\x16\x02\x36\x57\xb6\x17\x34\x62",
        // "CFArrayAppendValue" / M(Xor2) / S(98) / L(18)
        "\x32\x37\x30\x03\x03\x10\x08\x30\x01\x01\x14\x1f\x15\x27\x10\x1d\x04\x14\x71",
        // "sel_registerName" / M(Xor2) / S(24) / L(16)
        "\x7a\x6c\x65\x56\x7b\x6c\x6e\x60\x7a\x7d\x6c\x7b\x47\x68\x64\x6c\x09",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(202) / L(36)
        "\x71\x74\x70\x47\x5c\x56\x5e\x57\x75\x57\x46\x64\x53\x5e\x47\x57\x74\x5d\x40\x7b\x5c\x54\x5d\x76\x5b\x51\x46\x5b\x5d\x5c\x53\x40\x4b\x79\x57\x4b\x32",
        // "com.turntouch.Turn-Touch-Remote" / M(Xor3) / S(191) / L(31)
        "\xbc\xb0\xb2\xf1\xab\xaa\xad\xb1\xab\xb0\xaa\xbc\xb7\xf1\x8b\xaa\xad\xb1\xf2\x8b\xb0\xaa\xbc\xb7\xf2\x8d\xba\xb2\xb0\xab\xba\xdf",
        // "sk_num" / M(Xor2) / S(240) / L(6)
        "\x93\x8b\xbf\x8e\x95\x8d\xe0\x4d\xa6\x58\xe9\x7e\x6a\xe6\xd9\x42",
        // "X509_free" / M(Xor3) / S(236) / L(9)
        "\xa4\xc9\xcc\xc5\xa3\x9a\x8e\x99\x99\xfc\xa5\xad\x55\x63\x76\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x91\x10\xc1\x19\x7d\x27\x2a\x5a\x0f\xc6\x69\xda\xf2\x85\x69\x8e\xec\x5f\xd4\xfb\xa7\x09\x78\x92\xe3\xa5\xb5\xe8\x44\x76\x91\xbe",
        // "CFDataAppendBytes" / M(Xor3) / S(178) / L(17)
        "\x87\x82\x80\xa5\xb0\xa5\x85\xb4\xb4\xa1\xaa\xa0\x86\xbd\xb0\xa1\xb7\xc4",
        // "glob_b" / M(Xor3) / S(212) / L(6)
        "\x83\x88\x8b\x86\xbb\x86\xe4\xc4\x37\xfa\x96\x56\x3a\xbf\xbd\xb3",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(180) / L(57)
        "\xd9\xa5\x8f\x85\x82\x93\x9b\xd9\xba\x9f\x94\x84\x97\x84\x8f\xd9\xbd\x93\x8f\x95\x9e\x97\x9f\x98\x85\xd9\xa5\x8f\x85\x82\x93\x9b\xa4\x99\x99\x82\xb5\x93\x84\x82\x9f\x90\x9f\x95\x97\x82\x93\x85\xd8\x9d\x93\x8f\x95\x9e\x97\x9f\x98\xf6\xfd\xca\x86\xa2\x39\x97\xa8\x33",
        // "strlen" / M(Rot) / S(157) / L(6)
        "\x10\x11\x0f\x09\x02\x0b\x9d\x5a\x2d\x97\xe4\xaf\x11\xa1\xa7\x64",
        // "CFArrayGetCount" / M(Rot) / S(91) / L(15)
        "\x9e\xa1\x9c\xcd\xcd\xbc\xd4\xa2\xc0\xcf\x9e\xca\xd0\xc9\xcf\x5b",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x7d\x69\xd1\xb3\x03\xdd\xf9\xac\xa5\xb0\xeb\xac\xa8\x15\xd7\x31\xf9\x26\xc7\x1b\x65\x0a\x5e\x7e\x07\xec\x32\xa1\x04\xd5\x9a",
        // "" / M(None) / S(0) / L(0)
        "\xb2\x60\x5f\x1f\x58\x1e\x67\x7d\xf5\x33\x77\x6c\x12\xc5\xc0\xc9\x02\xd3\x49\xf0\x2d\x33\xcf\xbe\x09\x8a\x5d\xd2\xec\xda\x74\xc2",
        // "BIO_new" / M(Xor1) / S(68) / L(7)
        "\x06\x0d\x0b\x1b\x2a\x21\x33\x44\x2d\xa8\x7b\xc8\x26\x4b\xd1\x1e",
        // "SHA1_Final" / M(Xor2) / S(158) / L(10)
        "\xdd\xc6\xcf\xbf\xd1\xc8\xe7\xe0\xef\xe2\x8e\x33\x30\x7a\x6f\xd8",
        // "strlen" / M(Xor3) / S(1) / L(6)
        "\x62\x65\x63\x7d\x74\x7f\x11\x7b\x3d\x9b\xc1\xbe\x2a\xdc\x9a\x02",
        // "SecItemCopyMatching" / M(Xor3) / S(181) / L(19)
        "\x9a\xac\xaa\x80\xbd\xac\xa4\x8a\xa6\xb9\xb0\x84\xa8\xbd\xaa\xa1\xa0\xa7\xae\xc9",
        // "setDelegate:" / M(Xor4) / S(205) / L(12)
        "\xa3\xb5\xa4\x94\xb5\xbc\xb5\xb7\xb1\xa4\xb5\xea\xd0\xcc\x73\xa5",
        // "%02X" / M(Xor3) / S(40) / L(4)
        "\x1d\x08\x0a\x60\x38\xdb\xef\x70\xe5\xa2\x05\x1e\x5a\x68\xaf\xbb",
        // "EVP_MD_CTX_init" / M(Xor4) / S(240) / L(15)
        "\x45\x56\x50\x5f\x4d\x44\x5f\x43\x54\x58\x5f\x69\x6e\x69\x74\x00",
        // "ASN1_get_object" / M(Xor3) / S(49) / L(15)
        "\x00\x12\x0f\x70\x1e\x26\x24\x35\x1e\x2e\x23\x2b\x24\x22\x35\x41",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(136) / L(14)
        "\xca\xcc\xd4\xdc\xc7\xd5\xd9\xd1\xd6\xc7\xd7\xd6\xd4\xc1\x98\x25",
        // "PKCS7_verify" / M(Xor2) / S(70) / L(12)
        "\x06\x1d\x15\x05\x61\x09\x20\x33\x24\x3f\x30\x2f\x56\xff\xac\x9a",
        // "X509_digest" / M(Xor2) / S(220) / L(11)
        "\x94\xf9\xfc\xf5\x93\xa8\xa5\xab\xa9\xbf\xb8\xcc\xf9\x0f\xcc\x68",
        // "SecCertificateCopyData" / M(Xor3) / S(88) / L(22)
        "\x3c\x0a\x0c\x2c\x0a\x1d\x1b\x06\x09\x06\x0c\x0e\x1b\x0a\x2c\x00\x1f\x16\x2b\x0e\x1b\x0e\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x63\xe9\x57\xf1\xc8\x00\x50\x17\x08\x7e\x51\xc5\x9f\x53\x43\x62\xa2\x7a\x39\x85\xab\xa8\x24\x3f\xe3\x0e\x9b\x53\xba\xa6\x55\x8d",
        // "_MASReceipt/receipt" / M(Xor4) / S(112) / L(19)
        "\x9f\x8d\x81\x93\x92\xa5\xa3\xa5\xa9\xb0\xb4\xef\xb2\xa5\xa3\xa5\xa9\xb0\xb4\xc0",
        // "X509_STORE_add_cert" / M(Xor4) / S(227) / L(19)
        "\xe4\x89\x8c\x85\xe3\xef\xe8\xf3\xee\xf9\xe3\xdd\xd8\xd8\xe3\xdf\xd9\xce\xc8\xbc",
        // "" / M(None) / S(0) / L(0)
        "\x51\x7b\x73\x8d\x6e\x20\xdf\xf8\xd2\x65\xda\x37\x76\xee\x3f\x98\x14\x4c\x10\xbf\xc4\x7b\x69\xb4\xd6\x1a\xb1\x1d\x08\xe2\x43\x45",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(43) / L(24)
        "\x0f\x0a\x0e\x39\x22\x28\x20\x29\x19\x22\x20\x23\x2d\x28\x09\x34\x29\x2f\x39\x38\x2d\x2e\x20\x29\x4c\x49\xb2\x43\x6d\x83\x30\x03\xe3",
        // "CFBundleIdentifier" / M(Xor2) / S(161) / L(18)
        "\xf1\xf4\xf0\xc7\xdc\xd6\xde\xd7\xfb\xd6\xd7\xdc\xc6\xdb\xd4\xdb\xd7\xc0\xb2",
        // "CFStringCreateWithBytes" / M(Xor2) / S(22) / L(23)
        "\x75\x70\x65\x42\x44\x5f\x58\x51\x75\x44\x53\x57\x42\x53\x61\x5f\x42\x5e\x74\x4f\x42\x53\x45\x36\xc0\x01\x8c\x08\x18\xa8\xd6\x62",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x3f\x0d\xc1\x35\x9d\xd0\xfb\x1c\xfd\x97\xe6\xb5\xc6\xa1\xb9\x8a\x2d\x76\x1e\x09\xb3\x24\xbc\x58\xea\x3e\x4c\xe9\x5c\xa9\xee",
        // "sha1" / M(Rot) / S(174) / L(4)
        "\x21\x16\x0f\xdf\xae\x58\xdd\xd4\xe3\xe4\xdf\xcd\x57\x92\xb7\xde",
        // "CFDictionarySetValue" / M(Xor3) / S(27) / L(20)
        "\x73\x76\x74\x59\x53\x44\x59\x5f\x5e\x51\x42\x49\x63\x55\x44\x66\x51\x5c\x45\x55\x30",
        // "CC_SHA1_Init" / M(Xor1) / S(59) / L(12)
        "\x78\x78\x64\x68\x73\x7a\x0a\x64\x72\x55\x52\x4f\x3b\x1d\xc4\x2d",
        // "CFDateCreate" / M(Xor2) / S(52) / L(12)
        "\x67\x62\x60\x45\x50\x41\x67\x56\x41\x45\x50\x41\x24\xab\xdb\x1b",
        // "CFDateFormatterSetFormat" / M(Xor2) / S(173) / L(24)
        "\xcf\xca\xc8\xed\xf8\xe9\xca\xe3\xfe\xe1\xed\xf8\xf8\xe9\xfe\xdf\xe9\xf8\xca\xe3\xfe\xe1\xed\xf8\x8c\x23\xac\x98\x82\x82\xbf\x88\x78",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(233) / L(23)
        "\xa6\x99\x8c\x87\xba\xba\xa5\xb6\x88\x8d\x8d\xb6\x88\x85\x85\xb6\x8d\x80\x8e\x8c\x9a\x9d\x9a\xe9\x16\x06\x2c\xb2\xef\xc8\x15\x16",
        // "Apple Root CA" / M(Xor1) / S(212) / L(13)
        "\x95\xa4\xa4\xb8\xb1\xf4\x86\xbb\xbb\xa0\xf4\x97\x95\xd4\x3c\x41",
        // "CFDataCreate" / M(Rot) / S(65) / L(12)
        "\x84\x87\x85\xa2\xb5\xa2\x84\xb3\xa6\xa2\xb5\xa6\x41\xd1\x9f\x59",
        // "IOMACAddress" / M(Xor3) / S(223) / L(12)
        "\xa6\xa0\xa2\xae\xac\xae\x8b\x8b\x9d\x8a\x9c\x9c\xef\x5d\x31\xc6",
        // "SHA1" / M(Xor2) / S(50) / L(4)
        "\x71\x6a\x63\x13\x22\xb4\x3b\x70\xf9\xfd\xee\xcb\xcd\x52\xee\x29",
        // "kSecMatchLimit" / M(Xor2) / S(95) / L(14)
        "\x24\x1c\x2a\x2c\x02\x2e\x3b\x2c\x27\x03\x26\x22\x26\x3b\x4f\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x27\xee\x9e\x22\x58\xde\x89\xa6\xb4\x95\xa1\x77\x19\xd0\x56\x54\x46\x0d\x20\xce\x0f\x5f\x0e\x48\x5f\x5a\x83\x26\x74\x64\x11\xef",
        // "PKCS7_verify" / M(Xor1) / S(213) / L(12)
        "\x85\x9e\x96\x86\xe2\x8a\xa3\xb0\xa7\xbc\xb3\xac\xd5\xad\x88\x9c",
        // "ASN1_INTEGER_get" / M(Rot) / S(119) / L(16)
        "\xb8\xca\xc5\xa8\xd6\xc0\xc5\xcb\xbc\xbe\xbc\xc9\xd6\xde\xdc\xeb\x77",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(187) / L(40)
        "\xfd\xfa\xfa\x8e\xfe\x89\xfd\xfd\xf9\x88\xfe\xf2\xf8\x8a\xfb\xf3\x8d\x8d\xfe\xf3\x8f\xfa\xff\x8a\x8e\xf9\xf9\xff\xfe\xf9\x8f\xfa\xf2\xf3\x8f\x8d\xfd\x88\xfd\xfb\xcb\xc4\x03\xd3\xdc\x79\x1c\x68\x2b",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(191) / L(29)
        "\x31\x19\x1c\x0e\x23\x2a\x3f\x1e\x33\x39\x2e\x33\x35\x34\x3b\x28\x23\x11\x3f\x23\x19\x3b\x36\x36\x18\x3b\x39\x31\x29\x5a\xef\xac\x68\xaf\xde\x7f\x09\x2c",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor4) / S(33) / L(37)
        "\xb5\x83\x85\xad\x83\x9f\x85\x8e\x87\x8f\x88\xb5\x83\x87\x94\x85\x8e\xa5\x94\x83\x87\x92\x83\xa0\x94\x89\x8b\xa7\x92\x92\x94\x8f\x84\x93\x92\x83\x95\xe6",
        // "CFStringCreateWithCString" / M(Xor2) / S(24) / L(25)
        "\x79\x7c\x69\x4e\x48\x53\x54\x5d\x79\x48\x5f\x5b\x4e\x5f\x6d\x53\x4e\x52\x79\x69\x4e\x48\x53\x54\x5d\x3a\xbf\x0c\x71\x00\x06\xb6\x30\xdc",
        // "SKReceiptRefreshRequest" / M(Xor1) / S(202) / L(23)
        "\x99\x81\x98\xaf\xa9\xaf\xa3\xba\xbe\x98\xaf\xac\xb8\xaf\xb9\xa2\x98\xaf\xbb\xbf\xaf\xb9\xbe\xca\x62\x20\xc9\x0f\xd7\x51\xc4\xbc",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(191) / L(31)
        "\xf4\xdc\xd9\xcb\xe6\xef\xfa\xdb\xf6\xfc\xeb\xf6\xf0\xf1\xfe\xed\xe6\xc9\xfe\xf3\xea\xfa\xdc\xfe\xf3\xf3\xdd\xfe\xfc\xf4\xec\x9f",
        // "" / M(None) / S(0) / L(0)
        "\xad\xc7\x13\xdf\xe3\xc7\x09\xf7\x39\x93\xc5\xe2\xad\x05\xea\x67\xa1\x84\xad\x47\xc9\xff\xc1\x8f\xc2\x8f\x8d\x16\x1d\xe8\xd1\xd2",
        // "Contents/_MASReceipt/receipt" / M(Xor2) / S(163) / L(28)
        "\xc5\xe9\xe8\xf2\xe3\xe8\xf2\xf5\xa9\xd9\xcb\xc7\xd5\xd4\xe3\xe5\xe3\xef\xf6\xf2\xa9\xf4\xe3\xe5\xe3\xef\xf6\xf2\x86\x68\x10\xaa\x95\xb1\x9c\x75\x47",
        // "" / M(None) / S(0) / L(0)
        "\x8d\xf9\x95\x44\x59\x27\xd0\x64\x33\x4d\x2b\xad\x31\x42\x51\x7e\xbb\xf8\xc8\xee\x97\xba\xe0\x71\x31\x7e\x17\x61\x51\x4b\x88\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x55\x6d\x04\xfd\xbf\xeb\xfd\xb1\x51\x42\xdd\x37\xa7\x47\xe8\x0f\x76\xeb\x69\xc4\xb4\xc4\x97\xa1\x24\xc8\x4b\x69\x02\xa6\xbe\x15",
        // "ASN1_INTEGER_get" / M(Xor1) / S(32) / L(16)
        "\x61\x73\x6e\x11\x7f\x69\x6e\x74\x65\x67\x65\x72\x7f\x47\x45\x54\x20",
        // "CFStringCompare" / M(Xor1) / S(195) / L(15)
        "\x80\x85\x90\xb7\xb1\xaa\xad\xa4\x80\xac\xae\xb3\xa2\xb1\xa6\xc3",
        // "CFBundleGetIdentifier" / M(Xor4) / S(212) / L(21)
        "\x7b\x7e\x7a\x4d\x56\x5c\x54\x5d\x7f\x5d\x4c\x71\x5c\x5d\x56\x4c\x51\x5e\x51\x5d\x4a\x38",
        // "" / M(None) / S(0) / L(0)
        "\xe4\x62\x22\x9a\xa8\xb3\x85\x2c\x8f\xa7\xe6\xd9\xc1\xed\x13\xbf\xb1\xa8\x66\x16\xbd\x92\x11\x33\xdd\xb3\xc8\x1d\x92\xbd\xa9\xcb",
        // "glob" / M(Xor1) / S(20) / L(4)
        "\x73\x78\x7b\x76\x14\x94\xac\x8a\x51\xe9\xbe\x38\xb7\x95\x56\x08",
        // "CFDictionarySetValue" / M(Xor4) / S(117) / L(20)
        "\xda\xdf\xdd\xf0\xfa\xed\xf0\xf6\xf7\xf8\xeb\xe0\xca\xfc\xed\xcf\xf8\xf5\xec\xfc\x99",
        // "globfree" / M(Xor1) / S(43) / L(8)
        "\x4c\x47\x44\x49\x4d\x59\x4e\x4e\x2b\xbe\x13\xc9\x16\xe7\x0b\xb8",
        // "IOMasterPort" / M(Rot) / S(8) / L(12)
        "\x51\x57\x55\x69\x7b\x7c\x6d\x7a\x58\x77\x7a\x7c\x08\x24\xc0\xb6",
        // "strlen" / M(Xor4) / S(46) / L(6)
        "\x93\x94\x92\x8c\x85\x8e\xe0\x5f\x45\x57\x78\x14\x83\xb6\x6c\x27",
        // "CFDataGetBytePtr" / M(Xor2) / S(83) / L(16)
        "\x01\x04\x06\x23\x36\x23\x05\x27\x36\x00\x3b\x36\x27\x12\x36\x30\x42",
        // "CC_SHA1_Init" / M(Xor3) / S(52) / L(12)
        "\x07\x07\x1b\x17\x0c\x05\x75\x1b\x0d\x2a\x2d\x30\x44\x35\x34\xcb",
        // "exit" / M(Xor3) / S(176) / L(4)
        "\xa5\xb8\xa9\xb4\xc0\x4f\x7b\x42\x7b\x43\x34\xa0\x5c\xff\x5a\xf5",
        // "CFBundleCopyBundleURL" / M(Xor4) / S(175) / L(21)
        "\x49\x4c\x48\x7f\x64\x6e\x66\x6f\x49\x65\x7a\x73\x48\x7f\x64\x6e\x66\x6f\x5f\x58\x46\x0a",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(214) / L(59)
        "\x2c\x2b\x20\x2b\x7f\x20\x2f\x78\x20\x2c\x2c\x20\x28\x79\x20\x2f\x23\x20\x29\x7b\x20\x2a\x22\x20\x7c\x7c\x20\x2f\x22\x20\x7e\x2b\x20\x2e\x7b\x20\x7f\x28\x20\x28\x2e\x20\x2f\x28\x20\x7e\x2b\x20\x23\x22\x20\x7e\x7c\x20\x2c\x79\x20\x2c\x2a\x1a\x51\x4e\xab\x5d\x0d\xb2\xfd\xea",
        // "CFReadStreamRead" / M(Xor2) / S(15) / L(16)
        "\x5d\x58\x4c\x7b\x7f\x7a\x4d\x6a\x6c\x7b\x7f\x73\x4c\x7b\x7f\x7a\x1e",
        // "CFReadStreamClose" / M(Xor3) / S(123) / L(17)
        "\xce\xcb\xdf\xe8\xec\xe9\xde\xf9\xff\xe8\xec\xe0\xce\xe1\xe2\xfe\xe8\x8d",
        // "" / M(None) / S(0) / L(0)
        "\x17\x9d\xd2\x18\x56\xb4\x9e\x3d\x1b\x9c\x7d\x2f\xd0\xe9\x45\x59\x4a\xb5\x2f\x45\x26\x41\x37\x31\x03\xac\xf0\x23\xf9\xb7\xb0\xb7",
        // "" / M(None) / S(0) / L(0)
        "\xa3\xe3\x93\x7a\xe3\x32\xa6\xf4\xe0\x16\xd4\xce\xae\x72\x6c\x1d\x87\x4d\xe3\x34\xa0\xb3\x9d\x0e\x9c\x5d\xfb\xfc\x8e\xfe\x0d\xfb",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(17) / L(35)
        "\x54\x57\x55\x72\x85\x76\x57\x80\x83\x7e\x72\x85\x85\x76\x83\x54\x83\x76\x72\x85\x76\x55\x72\x85\x76\x57\x83\x80\x7e\x64\x85\x83\x7a\x7f\x78\x11",
        // "IOBSDNameMatching" / M(Rot) / S(76) / L(17)
        "\x95\x9b\x8e\x9f\x90\x9a\xad\xb9\xb1\x99\xad\xc0\xaf\xb4\xb5\xba\xb3\x4c",
        // "SecKeychainSearchCopyNext" / M(Rot) / S(152) / L(25)
        "\xeb\xfd\xfb\xe3\xfd\x11\xfb\x00\xf9\x01\x06\xeb\xfd\xf9\x0a\xfb\x00\xdb\x07\x08\x11\xe6\xfd\x10\x0c\x98\x1a\xf7\xcf\x40\xb0\xee\xca\x81",
        // "%02x:" / M(Xor4) / S(36) / L(5)
        "\x65\x70\x72\x38\x7a\x40\x0d\xbb\xde\x46\x92\xd2\xf2\xca\x53\xb4",
        // "ASN1_INTEGER_free" / M(Xor1) / S(98) / L(17)
        "\x23\x31\x2c\x53\x3d\x2b\x2c\x36\x27\x25\x27\x30\x3d\x04\x10\x07\x07\x62",
        // "CFStringGetFileSystemRepresentation" / M(Xor4) / S(242) / L(35)
        "\x4b\x4e\x5b\x7c\x7a\x61\x66\x6f\x4f\x6d\x7c\x4e\x61\x64\x6d\x5b\x71\x7b\x7c\x6d\x65\x5a\x6d\x78\x7a\x6d\x7b\x6d\x66\x7c\x69\x7c\x61\x67\x66\x08",
        // "EVP_DigestInit" / M(Xor3) / S(8) / L(14)
        "\x5d\x4e\x48\x47\x5c\x71\x7f\x7d\x6b\x6c\x51\x76\x71\x6c\x18\x21",
        // "SHA1_Init" / M(Xor4) / S(85) / L(9)
        "\x03\x18\x11\x61\x0f\x19\x3e\x39\x24\x50\x0a\x38\x0a\x94\x70\x15",
        // "kSecClassCertificate" / M(Xor1) / S(119) / L(20)
        "\x1c\x24\x12\x14\x34\x1b\x16\x04\x04\x34\x12\x05\x03\x1e\x11\x1e\x14\x16\x03\x12\x77",
        // "" / M(None) / S(0) / L(0)
        "\xce\xf3\xd7\xfc\x87\x9f\x8d\x82\x4b\x7a\xc4\x6d\x9c\x32\x00\xb7\x4f\xf1\x10\x87\x5a\xbb\xaf\xf3\xb2\x9f\x77\x81\x4b\x19\x1d\x46",
        // "" / M(None) / S(0) / L(0)
        "\x28\xdc\xfb\xc6\x70\x81\x06\x02\x9c\xc0\x10\xe4\x16\x31\x4d\x2e\x38\x33\x75\x38\x27\xe5\x52\xc2\x0e\xf2\xbb\xf1\x1b\xe4\x0d\x27",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(89) / L(31)
        "\x12\x3a\x3f\x2d\x00\x09\x1c\x3d\x10\x1a\x0d\x10\x16\x17\x18\x0b\x00\x2f\x18\x15\x0c\x1c\x3a\x18\x15\x15\x3b\x18\x1a\x12\x0a\x79",
        // "IOServiceGetMatchingServices" / M(Xor1) / S(120) / L(28)
        "\x31\x37\x2b\x1d\x0a\x0e\x11\x1b\x1d\x3f\x1d\x0c\x35\x19\x0c\x1b\x10\x11\x16\x1f\x2b\x1d\x0a\x0e\x11\x1b\x1d\x0b\x78\x64\x36\xe4\x45\x51\xd5\x1e\xaa",
        // "" / M(None) / S(0) / L(0)
        "\x2d\x0b\x44\x16\x73\x76\xc7\xf3\x39\xc1\xae\xb8\xfb\xfb\x19\x55\xf2\xa3\x88\xc6\x3b\x2c\x9e\xe8\xfa\xf3\xf6\x39\x18\xcc\x60\xdf",
        // "CFBundleCopyBundleURL" / M(Xor2) / S(244) / L(21)
        "\xa1\xa4\xa0\x97\x8c\x86\x8e\x87\xa1\x8d\x92\x9b\xa0\x97\x8c\x86\x8e\x87\xb7\xb0\xae\xe2",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(179) / L(14)
        "\xf1\xf7\xef\xe7\xfc\xee\xe2\xea\xed\xfc\xec\xed\xef\xfa\xa3\x4b",
        // "X509_STORE_add_cert" / M(Xor4) / S(125) / L(19)
        "\x9c\xf1\xf4\xfd\x9b\x97\x90\x8b\x96\x81\x9b\xa5\xa0\xa0\x9b\xa7\xa1\xb6\xb0\xc4",
        // "kSecReturnRef" / M(Xor4) / S(64) / L(13)
        "\x6b\x53\x65\x63\x52\x65\x74\x75\x72\x6e\x52\x65\x66\x00\x35\x29",
        // "CFArrayCreateMutable" / M(Xor3) / S(40) / L(20)
        "\x7e\x7b\x7c\x4f\x4f\x5c\x44\x7e\x4f\x58\x5c\x49\x58\x70\x48\x49\x5c\x5f\x51\x58\x3d",
        // "sk_free" / M(Xor2) / S(246) / L(7)
        "\x95\x8d\xb9\x80\x94\x83\x83\xe6\xe0\xbe\xf3\x02\x1d\x3c\x8d\x60",
        // "SecKeychainOpen" / M(Rot) / S(158) / L(15)
        "\xf1\x03\x01\xe9\x03\x17\x01\x06\xff\x07\x0c\xed\x0e\x03\x0c\x9e",
        // "CFEqual" / M(Xor3) / S(32) / L(7)
        "\x73\x76\x75\x41\x45\x51\x5c\x30\x87\x83\x28\x6f\x96\x2b\x63\x0a",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(25) / L(40)
        "\x1e\x19\x19\x6d\x1d\x6a\x1e\x1e\x1a\x6b\x1d\x11\x1b\x69\x18\x10\x6e\x6e\x1d\x10\x6c\x19\x1c\x69\x6d\x1a\x1a\x1c\x1d\x1a\x6c\x19\x11\x10\x6c\x6e\x1e\x6b\x1e\x18\x28\x04\x79\xc1\x01\x3d\xd5\xae\xb1",
        // "CFReadStreamOpen" / M(Rot) / S(155) / L(16)
        "\xde\xe1\xed\x00\xfc\xff\xee\x0f\x0d\x00\xfc\x08\xea\x0b\x00\x09\x9b",
        // "X509_NAME_get_text_by_NID" / M(Xor1) / S(83) / L(25)
        "\x0b\x66\x63\x6a\x0c\x1d\x12\x1e\x16\x0c\x34\x36\x27\x0c\x27\x36\x2b\x27\x0c\x31\x2a\x0c\x1d\x1a\x17\x53\x72\xab\x3c\xbd\x6a\x93\x2a\x32",
        // "" / M(None) / S(0) / L(0)
        "\xc8\xc6\x73\x28\xe6\x6f\xd3\x81\x58\x14\x14\xf7\xb7\x5a\x4c\xb5\x98\x5a\xa8\xdd\x93\xd4\x1f\x49\xf3\xa1\xfe\xb8\x7c\x42\x99\xc4",
        // "CFStringCreateWithCString" / M(Xor1) / S(70) / L(25)
        "\x05\x00\x15\x32\x34\x2f\x28\x21\x05\x34\x23\x27\x32\x23\x11\x2f\x32\x2e\x05\x15\x32\x34\x2f\x28\x21\x46\xcb\x98\xaa\xcc\xe2\x02\xa3\x67",
        // "dlopen" / M(Xor3) / S(89) / L(6)
        "\x0d\x05\x06\x19\x0c\x07\x69\xd0\x45\x13\x59\x1c\x0d\xd2\x84\x01",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(33) / L(35)
        "\x06\x03\x01\x24\x31\x20\x03\x2a\x37\x28\x24\x31\x31\x20\x37\x06\x37\x20\x24\x31\x20\x01\x24\x31\x20\x03\x37\x2a\x28\x16\x31\x37\x2c\x2b\x22\x45",
        // "IOMasterPort" / M(Rot) / S(179) / L(12)
        "\xfc\x02\x00\x14\x26\x27\x18\x25\x03\x22\x25\x27\xb3\x9b\xfc\xfa",
        // "" / M(None) / S(0) / L(0)
        "\x18\xb0\xbe\x0a\x92\xbd\x40\x67\x56\xf2\xe7\xb1\x06\x96\xaf\xe5\x8a\x80\x4c\x26\xae\xba\xd8\x73\xa0\x30\x16\xe3\x6c\x44\x02\x66",
        // "sk_free" / M(Xor1) / S(107) / L(7)
        "\x18\x00\x34\x0d\x19\x0e\x0e\x6b\x80\xf4\xd3\x7a\x3a\x0c\xa4\x22",
        // "receipt" / M(Xor1) / S(24) / L(7)
        "\x6a\x7d\x7b\x7d\x71\x68\x6c\x18\x07\xd4\x56\x5f\x0f\xc1\x44\x84",
        // "_MASReceipt" / M(Xor3) / S(98) / L(11)
        "\x2d\x3f\x33\x21\x20\x17\x11\x17\x1b\x02\x06\x72\x7e\x4f\x6f\x3c",
        // "%02X:" / M(Xor4) / S(210) / L(5)
        "\x05\x10\x12\x78\x1a\x20\x67\x11\x86\x2b\xa6\x3e\x16\x88\x9b\xd3",
        // "dlopen" / M(Xor3) / S(222) / L(6)
        "\x8a\x82\x81\x9e\x8b\x80\xee\x38\xbd\xc2\xa1\xcb\x03\x92\x9e\xc2",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(113) / L(24)
        "\x7f\x25\x23\x22\x7f\x3c\x39\x32\x7f\x3c\x39\x32\x03\x29\x23\x24\x35\x3d\x7e\x34\x29\x3c\x39\x32\x50\x11\xd0\xe7\x78\x38\x47\x85\x84",
        // "CFReadStreamOpen" / M(Xor3) / S(251) / L(16)
        "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x43\x7c\x69\x62\x0c",
        // "IOMACAddress" / M(Rot) / S(52) / L(12)
        "\x7d\x83\x81\x75\x77\x75\x98\x98\xa6\x99\xa7\xa7\x34\x4c\x60\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x17\x75\xd1\x25\x8a\xca\x47\xc5\xc1\x8d\x44\xb6\x36\x72\xa8\xf5\x64\x7e\xf2\xd3\xb5\x0a\x7d\xc4\xb5\x17\xf6\xa5\x8b\xb1\x4c\x02",
        // "" / M(None) / S(0) / L(0)
        "\x63\xb0\x5c\xd8\x96\x9e\x66\x37\x9d\xcd\x37\xa9\x20\x51\x74\xe8\x72\x09\x41\xe9\xf9\x9f\x73\xf7\xfc\xe1\xbf\x7f\x0a\x80\x88\xa9",
        // "start" / M(Rot) / S(215) / L(5)
        "\x4a\x4b\x38\x49\x4b\xd7\x80\x41\x9f\x71\xd3\x97\x8a\xcb\x04\xe1",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor4) / S(25) / L(43)
        "\x57\x52\x41\x46\x58\x57\x66\x71\x75\x60\x71\x43\x7d\x60\x7c\x52\x7d\x78\x71\x47\x6d\x67\x60\x71\x79\x44\x75\x60\x7c\x46\x71\x78\x75\x60\x7d\x62\x71\x40\x7b\x56\x75\x67\x71\x14\xd4\x78\xf2\xab\xdb\x83\xdd\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x03\x82\x49\xc7\x2e\x65\x63\x8e\x94\xb2\xdc\x1d\x9e\x5e\x5c\xab\x26\x75\xc1\x4c\x04\xb0\x64\x6d\x37\xd2\x77\xae\xdc\xf3\x1d\xc5",
        // "" / M(None) / S(0) / L(0)
        "\xcc\xd0\xb1\xc6\xfc\xd5\x0a\x2a\x4f\xcf\x48\x0e\x3b\x53\x58\x07\x3a\xee\x7e\x87\x06\x61\xc0\x44\xae\x65\x02\xc3\xb8\x45\xe7\x11",
        // "CFDataGetLength" / M(Rot) / S(125) / L(15)
        "\xc0\xc3\xc1\xde\xf1\xde\xc4\xe2\xf1\xc9\xe2\xeb\xe4\xf1\xe5\x7d",
        // "CFArrayGetCount" / M(Xor1) / S(156) / L(15)
        "\xdf\xda\xdd\xee\xee\xfd\xe5\xdb\xf9\xe8\xdf\xf3\xe9\xf2\xe8\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x3d\x15\xe4\x17\xdf\x32\x36\xb4\xb6\xee\xbc\x48\xbf\xa3\x2c\x29\xeb\x5c\x81\xfc\xf0\xf0\x1c\x15\xd9\x64\x23\xbb\xb8\x16\xad\x35",
        // "CFDateCreate" / M(Rot) / S(202) / L(12)
        "\x0d\x10\x0e\x2b\x3e\x2f\x0d\x3c\x2f\x2b\x3e\x2f\xca\x72\xb7\xb1",
        // "CFDictionaryCreateMutable" / M(Rot) / S(188) / L(25)
        "\xff\x02\x00\x25\x1f\x30\x25\x2b\x2a\x1d\x2e\x35\xff\x2e\x21\x1d\x30\x21\x09\x31\x30\x1d\x1e\x28\x21\xbc\xff\x7b\xaa\x3a\x41\x8c\x8b\x66",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(5) / L(26)
        "\x46\x43\x57\x60\x64\x61\x56\x71\x77\x60\x64\x68\x46\x77\x60\x64\x71\x60\x52\x6c\x71\x6d\x43\x6c\x69\x60\x05\xb4\x8c\x43\x75\xb0\x33\x5a\x74",
        // "IORegistryEntryCreateCFProperty" / M(Xor2) / S(186) / L(31)
        "\xd3\xd5\xc8\xff\xfd\xf3\xe9\xee\xe8\xe3\xdf\xf4\xee\xe8\xe3\xd9\xe8\xff\xfb\xee\xff\xd9\xdc\xca\xe8\xf5\xea\xff\xe8\xee\xe3\x9a",
        // "X509_STORE_free" / M(Xor4) / S(194) / L(15)
        "\x78\x15\x10\x19\x7f\x73\x74\x6f\x72\x65\x7f\x46\x52\x45\x45\x20",
        // "sk_free" / M(Xor1) / S(87) / L(7)
        "\x24\x3c\x08\x31\x25\x32\x32\x57\xe1\xe0\x8b\x21\x89\x81\xf9\xcb",
        // "Contents" / M(Xor1) / S(189) / L(8)
        "\xfe\xd2\xd3\xc9\xd8\xd3\xc9\xce\xbd\x24\x59\xca\xfc\x04\x51\xad",
        // "SKReceiptRefreshRequest" / M(Rot) / S(131) / L(23)
        "\xd6\xce\xd5\xe8\xe6\xe8\xec\xf3\xf7\xd5\xe8\xe9\xf5\xe8\xf6\xeb\xd5\xe8\xf4\xf8\xe8\xf6\xf7\x83\x24\xe1\xb3\x59\x0c\x61\x8c\x28",
        // "CC_SHA1_Final" / M(Xor3) / S(83) / L(13)
        "\x20\x20\x3c\x30\x2b\x22\x52\x3c\x25\x0a\x0d\x02\x0f\x63\xb5\xaf",
        // "setjmp" / M(Xor2) / S(135) / L(6)
        "\xe4\xf2\xe3\xfd\xfa\xe7\x97\x3f\xa5\x46\xaa\x2d\x71\xa0\xdb\x30",
        // "" / M(None) / S(0) / L(0)
        "\x88\x19\x3c\x22\x29\x70\xc5\xf2\x9a\x4d\xcb\x8e\x5b\x02\x7c\x2e\x5a\xba\xdc\x90\x31\x70\xed\x17\x8d\x28\xdc\xcc\x02\xb4\x9a\x9c",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(197) / L(66)
        "\xa9\xd5\xff\xf5\xf2\xe3\xeb\xa9\xca\xef\xe4\xf4\xe7\xf4\xff\xa9\xc0\xf4\xe7\xeb\xe3\xf1\xe9\xf4\xed\xf5\xa9\xc5\xe9\xf4\xe3\xc0\xe9\xf3\xe8\xe2\xe7\xf2\xef\xe9\xe8\xa8\xe0\xf4\xe7\xeb\xe3\xf1\xe9\xf4\xed\xa9\xc5\xe9\xf4\xe3\xc0\xe9\xf3\xe8\xe2\xe7\xf2\xef\xe9\xe8\x86",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(127) / L(21)
        "\xfe\xd6\xd3\xc1\xec\xe5\xf0\xd4\xe7\xe7\xf4\xec\xd6\xf4\xf9\xf9\xd7\xf4\xf6\xfe\xe6\x95",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(62) / L(59)
        "\x08\x0f\x04\x0f\x5b\x04\x0b\x5c\x04\x08\x08\x04\x0c\x5d\x04\x0b\x07\x04\x0d\x5f\x04\x0e\x06\x04\x58\x58\x04\x0b\x06\x04\x5a\x0f\x04\x0a\x5f\x04\x5b\x0c\x04\x0c\x0a\x04\x0b\x0c\x04\x5a\x0f\x04\x07\x06\x04\x5a\x58\x04\x08\x5d\x04\x08\x0e\x3e\xce\x66\xf1\x8c\x0b\xac\x42\x5a",
        // "c2i_ASN1_INTEGER" / M(Xor3) / S(110) / L(16)
        "\x1c\x4d\x16\x20\x3e\x2c\x31\x4e\x20\x36\x31\x2b\x3a\x38\x3a\x2d\x7f",
        // "objc_msgSend" / M(Xor2) / S(186) / L(12)
        "\xc5\xc8\xc0\xc9\xf5\xc7\xd9\xcd\xf9\xcf\xc4\xce\xaa\xc4\x90\x0d",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(111) / L(26)
        "\x0f\x0a\x1e\x29\x2d\x28\x1f\x38\x3e\x29\x2d\x21\x0f\x3e\x29\x2d\x38\x29\x1b\x25\x38\x24\x0a\x25\x20\x29\x4c\xdf\xeb\xcd\xfc\xea\xe2\x26\x43",
        // "strncmp" / M(Xor4) / S(194) / L(7)
        "\x53\x54\x52\x4e\x43\x4d\x50\x20\x91\xa0\x21\x4a\x4b\xe0\x8d\xe3",
        // "PKCS7_free" / M(Rot) / S(134) / L(10)
        "\xd6\xd1\xc9\xd9\xbd\xe5\xec\xf8\xeb\xeb\x86\x7e\xc3\x96\x36\x95",
        // "" / M(None) / S(0) / L(0)
        "\xa9\x21\x60\x42\x23\x40\x96\x57\x80\xcc\x3b\xe8\xc6\xf7\xd4\xed\x31\x35\x5b\x88\xeb\x37\xcf\xb5\x9a\xa6\x7c\x7b\x60\xbc\x53\x66",
        // "CFDataAppendBytes" / M(Xor2) / S(36) / L(17)
        "\x75\x70\x72\x57\x42\x57\x77\x46\x46\x53\x58\x52\x74\x4f\x42\x53\x45\x36",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(252) / L(37)
        "\x61\x64\x77\x70\x6e\x61\x50\x47\x43\x56\x47\x61\x4d\x52\x5b\x63\x52\x52\x47\x4c\x46\x4b\x4c\x45\x72\x43\x56\x4a\x61\x4d\x4f\x52\x4d\x4c\x47\x4c\x56\x22",
        // "d2i_PKCS7_bio" / M(Xor1) / S(245) / L(13)
        "\x91\xc7\x9c\xaa\xa5\xbe\xb6\xa6\xc2\xaa\x97\x9c\x9a\xf5\x2b\xa4",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Xor4) / S(88) / L(54)
        "\xc7\xbb\x91\x9b\x9c\x8d\x85\xc7\xa4\x81\x8a\x9a\x89\x9a\x91\xc7\xae\x9a\x89\x85\x8d\x9f\x87\x9a\x83\x9b\xc7\xbb\x8d\x8b\x9d\x9a\x81\x9c\x91\xc6\x8e\x9a\x89\x85\x8d\x9f\x87\x9a\x83\xc7\xbb\x8d\x8b\x9d\x9a\x81\x9c\x91\xe8",
        // "_MASReceipt/receipt" / M(Xor2) / S(116) / L(19)
        "\x3f\x2d\x21\x33\x32\x05\x03\x05\x09\x10\x14\x4f\x12\x05\x03\x05\x09\x10\x14\x60",
        // "" / M(None) / S(0) / L(0)
        "\x6b\xe4\x28\x68\x3c\xb2\x67\x6d\x5f\x7f\xbc\x6b\xc3\x10\xff\x0c\xa7\x83\x61\x5d\x15\x08\x06\xf2\x94\x44\x89\x86\x01\xb5\x34\xb9",
        // "" / M(None) / S(0) / L(0)
        "\x44\x51\x82\xd2\xaf\x79\xdb\x79\x98\x87\xa8\xd2\xc7\x3e\xb8\x33\x2a\x0c\xb5\x83\xed\x0f\x89\xc6\x48\xf0\xcd\xf1\x7f\x16\xf2\x58",
        // "" / M(None) / S(0) / L(0)
        "\x09\x04\xb2\x51\x41\xcd\x70\x04\x77\x69\xc3\xa0\x2d\x99\x9f\xde\x0c\x76\x72\x57\x11\x7d\x14\x08\xda\x91\xea\xdf\xc9\x3e\x1a\x34",
        // "CFReadStreamRead" / M(Rot) / S(208) / L(16)
        "\x13\x16\x22\x35\x31\x34\x23\x44\x42\x35\x31\x3d\x22\x35\x31\x34\xd0",
        // "CFDateCreate" / M(Xor1) / S(241) / L(12)
        "\xb2\xb7\xb5\x90\x85\x94\xb2\x83\x94\x90\x85\x94\xf1\xa4\x16\xd3",
        // "" / M(None) / S(0) / L(0)
        "\xdf\xf1\x7d\x49\xe0\x2e\x60\xc3\xa5\x69\x64\x39\xa8\x24\xcf\x8e\xa2\xae\x3b\x90\x09\x6f\xee\xcc\x3c\xcb\x0a\x5f\x71\x79\x1e\x55",
        // "" / M(None) / S(0) / L(0)
        "\xc5\x92\xa3\x09\xe7\x93\x33\x80\x2e\x6f\x8d\xa4\x5c\xa3\x36\xd2\xeb\x09\x37\x23\xd9\x6b\x0a\x0c\x17\x14\x8c\xc9\x4a\x99\x5d\x85",
        // "BIO_write" / M(Xor2) / S(123) / L(9)
        "\x29\x22\x24\x34\x1c\x19\x02\x1f\x0e\x6b\x1b\x5c\x86\x06\x08\x69",
        // "BIO_free" / M(Xor4) / S(130) / L(8)
        "\x62\x69\x6f\x7f\x46\x52\x45\x45\x20\x68\xa4\x02\x8b\xde\xbc\xb7",
        // "CFBundleUnloadExecutable" / M(Xor4) / S(51) / L(24)
        "\xd0\xd5\xd1\xe6\xfd\xf7\xff\xf6\xc6\xfd\xff\xfc\xf2\xf7\xd6\xeb\xf6\xf0\xe6\xe7\xf2\xf1\xff\xf6\x93\xd6\xf1\x52\x06\xc8\x2d\x5f\x40",
        // "CFStringCreateWithCString" / M(Rot) / S(163) / L(25)
        "\xe6\xe9\xf6\x17\x15\x0c\x11\x0a\xe6\x15\x08\x04\x17\x08\xfa\x0c\x17\x0b\xe6\xf6\x17\x15\x0c\x11\x0a\xa3\xb2\xd0\x47\xa0\x89\x4d\xc4\x09",
        // "kSecMatchSubjectContains" / M(Xor1) / S(67) / L(24)
        "\x28\x10\x26\x20\x0e\x22\x37\x20\x2b\x10\x36\x21\x29\x26\x20\x37\x00\x2c\x2d\x37\x22\x2a\x2d\x30\x43\x24\x8b\x0c\xa5\xf2\xea\xd7\x1a",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(129) / L(26)
        "\xe1\xe4\xf0\xc7\xc3\xc6\xf1\xd6\xd0\xc7\xc3\xcf\xe1\xd0\xc7\xc3\xd6\xc7\xf5\xcb\xd6\xca\xe4\xcb\xce\xc7\xa2\xb3\xa4\xb0\xd3\x00\xb3\xdf\x6f",
        // "CFDateCompare" / M(Xor1) / S(235) / L(13)
        "\xa8\xad\xaf\x8a\x9f\x8e\xa8\x84\x86\x9b\x8a\x99\x8e\xeb\x77\xe1",
        // "BIO_s_mem" / M(Rot) / S(160) / L(9)
        "\xe2\xe9\xef\xff\x13\xff\x0d\x05\x0d\xa0\xe3\x46\x2d\x81\x50\x26",
        // "" / M(None) / S(0) / L(0)
        "\x15\x10\x67\x10\x50\x0b\xce\xd0\xfd\x11\xd5\xb8\x66\x92\x4a\xe2\xfa\x17\xb5\xc7\x5b\xf6\xe2\x19\x73\x2c\xb4\xaa\xc1\xc9\x24\x15",
        // "" / M(None) / S(0) / L(0)
        "\xe9\xa6\xf7\xf5\x8d\x4b\xc2\xc3\xda\xd7\xa7\xf4\x8d\x2b\x51\xed\x8e\xc6\x19\x41\x73\x51\x7f\xe4\x88\x96\x46\xb3\xfa\xd0\x95\xb4",
        // "" / M(None) / S(0) / L(0)
        "\x3b\x7b\x8a\xb1\x94\x79\x7c\x4f\x68\xf6\x06\x81\x05\x59\xf5\x71\xd1\xae\x4b\x44\x12\xd0\x5a\x47\x2c\xcb\x9c\xa9\x71\x09\x1c\x22",
        // "glob_b" / M(Xor2) / S(214) / L(6)
        "\xa1\xaa\xa9\xa4\x99\xa4\xc6\x76\xa6\x1f\x2a\xd6\x3c\x0f\xd1\x9f",
        // "exit" / M(Xor2) / S(31) / L(4)
        "\x6a\x77\x66\x7b\x0f\x83\x97\xbb\xc9\xf6\xb8\x86\x1c\xc8\x67\xbf",
        // "" / M(None) / S(0) / L(0)
        "\x14\x0b\x56\xeb\x7d\xde\x51\x2a\x9f\x19\x56\x16\x74\xcb\x8b\x63\x4a\x27\x78\xe1\xfb\x6a\xdc\x71\xd9\xb7\xbd\x0f\x9f\xbe\x43\xa5",
        // "sk_num" / M(Xor3) / S(234) / L(6)
        "\x89\x91\xa5\x94\x8f\x97\xfa\x7f\x68\xee\xc9\xdb\xc6\x20\x10\xe2",
        // "" / M(None) / S(0) / L(0)
        "\x22\x0f\xae\x61\x9d\xc8\x53\x21\x81\x0f\x0f\xb4\x83\x34\x42\x3f\xb5\xfe\x30\x18\xb8\x4c\x24\xae\x63\xa6\x3b\x10\xcd\x43\x8a\x33",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(187) / L(24)
        "\x70\x58\x5d\x5f\x7a\x6f\x7e\x5d\x74\x69\x76\x7a\x6f\x6f\x7e\x69\x4f\x72\x76\x7e\x41\x74\x75\x7e\x1b\x87\xc3\xa8\x82\x54\x58\xd5\x87",
        // "" / M(None) / S(0) / L(0)
        "\x49\xdf\x52\xe1\xeb\xf7\x00\x84\x56\xf0\x51\xef\xb2\x76\x03\xf2\x62\x0f\x01\x82\x5f\x72\xd8\x25\x3d\xbe\x25\x09\xeb\xd5\x26\x1b",
        // "en0" / M(Rot) / S(172) / L(3)
        "\x11\x1a\xdc\xac\xd0\x67\x16\xed\xb4\x11\x32\xe3\xb6\x9e\x41\x0c",
        // "X509_free" / M(Xor3) / S(166) / L(9)
        "\xee\x83\x86\x8f\xe9\xd0\xc4\xd3\xd3\xb6\x25\xb6\xaf\x77\x6f\x53",
        // "strncmp" / M(Xor4) / S(129) / L(7)
        "\x63\x64\x62\x7e\x73\x7d\x60\x10\x18\xd3\xa4\x92\xc1\x2e\x1a\x18",
        // "kSecReturnRef" / M(Xor2) / S(74) / L(13)
        "\x31\x09\x3f\x39\x08\x3f\x2e\x2f\x28\x34\x08\x3f\x3c\x5a\x2a\x30",
        // "SHA1_Update" / M(Xor3) / S(149) / L(11)
        "\xf6\xed\xe4\x94\xfa\xf0\xd5\xc1\xc4\xd1\xc0\xa5\x7e\x0e\xa3\x0d",
        // "" / M(None) / S(0) / L(0)
        "\xe9\x73\xeb\x8f\x72\x6b\x2d\x8f\x8b\x8f\x2d\x8f\xa5\x0f\x4c\xce\xde\x2b\x1a\x93\x8c\x2c\x57\x07\x14\x3a\x70\xe8\xa8\xb7\x49\x15",
        // "" / M(None) / S(0) / L(0)
        "\xb1\xa6\xd2\x91\x19\xa6\xc8\x8f\xbb\xb8\xad\x66\xc0\x1a\xab\x43\x39\xf6\xff\x4a\x1f\xa6\xf5\xe1\xd9\x1a\xeb\x6c\xef\xce\xeb\xcb",
        // "kSecClass" / M(Xor3) / S(79) / L(9)
        "\x34\x0c\x3a\x3c\x1c\x33\x3e\x2c\x2c\x5f\xc5\xcc\x1d\x3e\x1f\x70",
        // "CFEqual" / M(Xor4) / S(10) / L(7)
        "\xe3\xe6\xe5\xd1\xd5\xc1\xcc\xa0\x63\x1e\xa2\x78\x63\x96\xdf\xd5",
        // "" / M(None) / S(0) / L(0)
        "\xdc\xb2\x53\xc2\x53\xa2\xc0\x6b\x30\xfe\xda\x42\x69\xf1\x43\x00\x53\xf0\xeb\x8f\x18\xf6\xe0\xf2\x03\x41\x9c\x4a\xf2\x45\xd9\xfb",
        // "CFDataCreate" / M(Rot) / S(91) / L(12)
        "\x9e\xa1\x9f\xbc\xcf\xbc\x9e\xcd\xc0\xbc\xcf\xc0\x5b\xd8\x75\x12",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x99\x66\xcc\x14\xe8\x38\x5a\xd6\x04\xb8\xe5\x95\xd4\x49\x61\x56\x86\x6c\x37\xd0\x1e\x3e\x6c\x17\x71\xdd\x04\x38\xeb\xfa\x13",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(223) / L(59)
        "\xe9\xee\xe5\xee\xba\xe5\xea\xbd\xe5\xe9\xe9\xe5\xed\xbc\xe5\xea\xe6\xe5\xec\xbe\xe5\xef\xe7\xe5\xb9\xb9\xe5\xea\xe7\xe5\xbb\xee\xe5\xeb\xbe\xe5\xba\xed\xe5\xed\xeb\xe5\xea\xed\xe5\xbb\xee\xe5\xe6\xe7\xe5\xbb\xb9\xe5\xe9\xbc\xe5\xe9\xef\xdf\x9f\xe9\x3c\xb8\x5e\x67\x03\x9c",
        // "SHA1_Init" / M(Xor3) / S(149) / L(9)
        "\xf6\xed\xe4\x94\xfa\xec\xcb\xcc\xd1\xa5\x2b\x1d\xe7\x17\xe5\x28",
        // "kSecMatchSearchList" / M(Xor1) / S(240) / L(19)
        "\x9b\xa3\x95\x93\xbd\x91\x84\x93\x98\xa3\x95\x91\x82\x93\x98\xbc\x99\x83\x84\xf0",
        // "SHA1_Update" / M(Rot) / S(78) / L(11)
        "\xa1\x96\x8f\x7f\xad\xa3\xbe\xb2\xaf\xc2\xb3\x4e\x7f\x14\x2e\xb7",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(125) / L(26)
        "\x1d\x18\x1a\x3f\x2a\x3b\x18\x31\x2c\x33\x3f\x2a\x2a\x3b\x2c\x0d\x3b\x2a\x0e\x2c\x31\x2e\x3b\x2c\x2a\x27\x5e\x3d\x82\xf8\x96\x23\xeb\xd4\x07",
        // "X509_get_ext_by_OBJ" / M(Xor3) / S(52) / L(19)
        "\x10\x7d\x78\x71\x17\x2f\x2d\x3c\x17\x2d\x30\x3c\x17\x2a\x31\x17\x07\x0a\x02\x48",
        // "CFEqual" / M(Rot) / S(78) / L(7)
        "\x91\x94\x93\xbf\xc3\xaf\xba\x4e\x31\xfd\x18\xa4\x03\x16\x58\xda",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(94) / L(29)
        "\x35\x1d\x18\x0a\x27\x2e\x3b\x1a\x37\x3d\x2a\x37\x31\x30\x3f\x2c\x27\x15\x3b\x27\x1d\x3f\x32\x32\x1c\x3f\x3d\x35\x2d\x5e\x16\x4e\x9c\xcf\x77\x0d\xb3\x06",
        // "BIO_new" / M(Xor2) / S(43) / L(7)
        "\x79\x72\x74\x64\x55\x5e\x4c\x3b\x2a\x30\xbc\x48\xad\x3c\x8f\xaa",
        // "CFBundleVersion" / M(Xor3) / S(114) / L(15)
        "\xc1\xc4\xc0\xf7\xec\xe6\xee\xe7\xd4\xe7\xf0\xf1\xeb\xed\xec\x82",
        // "IOServiceGetMatchingServices" / M(Xor1) / S(255) / L(28)
        "\xb6\xb0\xac\x9a\x8d\x89\x96\x9c\x9a\xb8\x9a\x8b\xb2\x9e\x8b\x9c\x97\x96\x91\x98\xac\x9a\x8d\x89\x96\x9c\x9a\x8c\xff\xce\x3b\xf4\xb8\x8f\x8c\xbf\x0e",
        // "" / M(None) / S(0) / L(0)
        "\x3b\xa4\x2a\x66\x4c\xb1\xe0\x74\x3e\xb0\x75\xc1\xaa\x4b\xf0\x1c\x88\xf4\x8c\x9e\x50\x65\x4f\x94\x98\x13\x7d\x0b\xbb\x19\xb6\xc2",
        // "kCFBundleIdentifierKey" / M(Rot) / S(188) / L(22)
        "\x27\xff\x02\xfe\x31\x2a\x20\x28\x21\x05\x20\x21\x2a\x30\x25\x22\x25\x21\x2e\x07\x21\x35\xbc",
        // "CC_SHA1_Update" / M(Xor4) / S(61) / L(14)
        "\x93\x93\x8f\x83\x98\x91\xe1\x8f\x85\xa0\xb4\xb1\xa4\xb5\xd0\xcf",
        // "start" / M(Xor4) / S(67) / L(5)
        "\x43\x44\x51\x42\x44\x30\x70\xd8\xb9\xa7\xed\x6f\x8d\xd1\xff\x34",
        // "CC_SHA1_Init" / M(Rot) / S(191) / L(12)
        "\x02\x02\x1e\x12\x07\x00\xf0\x1e\x08\x2d\x28\x33\xbf\xd3\xfc\x74",
        // "sel_registerName" / M(Rot) / S(96) / L(16)
        "\xd3\xc5\xcc\xbf\xd2\xc5\xc7\xc9\xd3\xd4\xc5\xd2\xae\xc1\xcd\xc5\x60",
        // "CFStringCreateWithBytes" / M(Xor3) / S(254) / L(23)
        "\x5d\x58\x4d\x6a\x6c\x77\x70\x79\x5d\x6c\x7b\x7f\x6a\x7b\x49\x77\x6a\x76\x5c\x67\x6a\x7b\x6d\x1e\x57\x09\x41\xe2\x15\xc0\x7e\xa3",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(63) / L(39)
        "\x2c\x29\x3b\x06\x02\x0a\x35\x00\x01\x0a\x2c\x1d\x0a\x0e\x1b\x0a\x38\x06\x1b\x07\x3b\x06\x02\x0a\x26\x01\x1b\x0a\x1d\x19\x0e\x03\x29\x1d\x00\x02\x28\x22\x3b\x6f\x41\xa6\x89\x24\x46\xa3\x25\x5b",
        // "CFArrayAppendValue" / M(Xor2) / S(203) / L(18)
        "\x9b\x9e\x99\xaa\xaa\xb9\xa1\x99\xa8\xa8\xbd\xb6\xbc\x8e\xb9\xb4\xad\xbd\xd8",
        // "globfree" / M(Xor1) / S(49) / L(8)
        "\x56\x5d\x5e\x53\x57\x43\x54\x54\x31\x22\xbe\xad\xe3\x6c\xcc\xec",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(69) / L(59)
        "\x62\x65\x6e\x65\x11\x6e\x61\x16\x6e\x62\x62\x6e\x66\x17\x6e\x61\x6d\x6e\x67\x15\x6e\x64\x6c\x6e\x12\x12\x6e\x61\x6c\x6e\x10\x65\x6e\x60\x15\x6e\x11\x66\x6e\x66\x60\x6e\x61\x66\x6e\x10\x65\x6e\x6d\x6c\x6e\x10\x12\x6e\x62\x17\x6e\x62\x64\x54\x3f\xef\x01\xca\x95\x45\x3e\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x75\x67\x28\xc4\x3d\xa6\x3b\xf4\xca\xef\xf8\x8e\x59\xc5\xd3\x3d\xa2\xdd\x62\x41\xbd\x9b\xf9\x10\x3d\xe5\x18\xfd\x6b\x77\x56\x6a",
        // "" / M(None) / S(0) / L(0)
        "\x9f\xe6\x41\x0c\x0d\xfb\x70\x29\xb0\xbb\xbb\xa8\xf1\x4a\xa1\xd8\xf5\x63\x8f\xa5\xfd\x22\x80\x18\x5b\x24\x87\x55\x6a\x3b\xdb\xf0",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(118) / L(16)
        "\x15\x44\x1f\x29\x37\x25\x38\x47\x29\x3f\x38\x22\x33\x31\x33\x24\x76",
        // "" / M(None) / S(0) / L(0)
        "\x77\xbb\x0a\x34\xeb\x4c\x94\xbb\x69\x6a\xf3\x90\x90\x68\xf2\x30\x5f\xa0\x30\x98\x19\x20\x6a\x2e\xdd\x81\xa4\x97\xff\xfb\xe7\x21",
        // "kSecMatchLimit" / M(Xor2) / S(37) / L(14)
        "\x5e\x66\x50\x56\x78\x54\x41\x56\x5d\x79\x5c\x58\x5c\x41\x35\x93",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x6c\xf3\x0d\xe2\x67\x68\xb0\xff\x4c\xbf\x51\x31\x6f\x12\xd0\xa2\x72\x66\x30\x6d\x4f\x97\x2e\x2f\x25\xfa\xdf\x71\x97\x2f\x93",
        // "" / M(None) / S(0) / L(0)
        "\x52\xd0\xfb\x0f\xe7\x6f\x91\x12\x56\xb5\xc1\x69\x8a\xb7\x19\x9a\x75\x7f\x0d\x69\x92\x8e\x92\x64\xcf\xc4\x99\xd4\x5b\x92\x75\x6d",
        // "CFDataCreateMutable" / M(Xor1) / S(10) / L(19)
        "\x49\x4c\x4e\x6b\x7e\x6b\x49\x78\x6f\x6b\x7e\x6f\x47\x7f\x7e\x6b\x68\x66\x6f\x0a",
        // "Contents/_MASReceipt" / M(Xor4) / S(126) / L(20)
        "\x15\x39\x38\x22\x33\x38\x22\x25\x79\x09\x1b\x17\x05\x04\x33\x35\x33\x3f\x26\x22\x56",
        // "CFDictionaryAddValue" / M(Rot) / S(196) / L(20)
        "\x07\x0a\x08\x2d\x27\x38\x2d\x33\x32\x25\x36\x3d\x05\x28\x28\x1a\x25\x30\x39\x29\xc4",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(99) / L(66)
        "\xc6\xba\x90\x9a\x9d\x8c\x84\xc6\xa5\x80\x8b\x9b\x88\x9b\x90\xc6\xaf\x9b\x88\x84\x8c\x9e\x86\x9b\x82\x9a\xc6\xaa\x86\x9b\x8c\xaf\x86\x9c\x87\x8d\x88\x9d\x80\x86\x87\xc7\x8f\x9b\x88\x84\x8c\x9e\x86\x9b\x82\xc6\xaa\x86\x9b\x8c\xaf\x86\x9c\x87\x8d\x88\x9d\x80\x86\x87\xe9",
        // "" / M(None) / S(0) / L(0)
        "\x14\x25\xd4\x2e\x60\x74\x02\x98\xec\x1c\x65\xed\x88\x12\x52\xce\x8b\xa1\x75\xfe\x26\xa5\x4f\xfc\x7a\x11\x86\x87\x80\xb8\xc6\x2f",
        // "X509_STORE_add_cert" / M(Xor1) / S(29) / L(19)
        "\x45\x28\x2d\x24\x42\x4e\x49\x52\x4f\x58\x42\x7c\x79\x79\x42\x7e\x78\x6f\x69\x1d",
        // "CFAbsoluteTimeGetCurrent" / M(Rot) / S(157) / L(24)
        "\xe0\xe3\xde\xff\x10\x0c\x09\x12\x11\x02\xf1\x06\x0a\x02\xe4\x02\x11\xe0\x12\x0f\x0f\x02\x0b\x11\x9d\xdc\xe6\x75\xba\xdc\x78\xb8\x33",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(152) / L(24)
        "\xfa\xff\xf8\xdb\xca\xd6\xd5\xcc\xcd\xdc\xed\xd0\xd4\xdc\xfe\xdc\xcd\xfa\xcc\xcb\xcb\xdc\xd7\xcd\xb9\xc1\x0a\x15\x58\x30\x2a\x47\x5a",
        // "NSApplicationMain" / M(Xor2) / S(209) / L(17)
        "\x8d\x90\x82\xb3\xb3\xaf\xaa\xa0\xa2\xb7\xaa\xac\xad\x8e\xa2\xaa\xad\xc3",
        // "%02x" / M(Xor3) / S(161) / L(4)
        "\x94\x81\x83\xc9\xb1\xc0\xaf\xd3\x93\x59\x10\x28\xb3\xc5\xfd\x20",
        // "%02x" / M(Rot) / S(86) / L(4)
        "\x7b\x86\x88\xce\x56\xf2\x19\x44\x82\x96\x34\x0e\x79\x36\xe4\x69",
        // "%02X" / M(Xor3) / S(12) / L(4)
        "\x39\x2c\x2e\x44\x1c\x5b\xcc\x1c\xa1\x98\x2f\x80\xf0\x4e\x9a\xe8",
        // "IOIteratorNext" / M(Xor3) / S(71) / L(14)
        "\x1e\x18\x1e\x23\x32\x25\x36\x23\x38\x25\x19\x32\x2f\x23\x57\xa5",
        // "CFBundleGetMainBundle" / M(Rot) / S(214) / L(21)
        "\x19\x1c\x18\x4b\x44\x3a\x42\x3b\x1d\x3b\x4a\x23\x37\x3f\x44\x18\x4b\x44\x3a\x42\x3b\xd6",
        // "X509_digest" / M(Xor2) / S(131) / L(11)
        "\xcb\xa6\xa3\xaa\xcc\xf7\xfa\xf4\xf6\xe0\xe7\x93\xaf\xf2\x3a\x9e",
        // "CC_SHA1" / M(Xor2) / S(112) / L(7)
        "\x23\x23\x3f\x33\x28\x21\x51\x60\x61\xd8\x57\x09\x23\xbc\x03\x61",
        // "IOMACAddress" / M(Xor3) / S(221) / L(12)
        "\xa4\xa2\xa0\xac\xae\xac\x89\x89\x9f\x88\x9e\x9e\xed\xe6\x95\x09",
        // "Contents/_MASReceipt" / M(Xor1) / S(128) / L(20)
        "\xc3\xef\xee\xf4\xe5\xee\xf4\xf3\xaf\xdf\xcd\xc1\xd3\xd2\xe5\xe3\xe5\xe9\xf0\xf4\x80",
        // "SHA1_Final" / M(Rot) / S(103) / L(10)
        "\xba\xaf\xa8\x98\xc6\xad\xd0\xd5\xc8\xd3\x67\x14\x0b\xa3\x89\x69",
        // "SHA1" / M(Xor4) / S(255) / L(4)
        "\xa3\xb8\xb1\xc1\xf0\xb0\x40\x4d\xa7\xe0\x1e\xce\xef\xba\x87\xa7",
        // "CFBundleShortVersionString" / M(Xor4) / S(100) / L(26)
        "\xef\xea\xee\xd9\xc2\xc8\xc0\xc9\xff\xc4\xc3\xde\xd8\xfa\xc9\xde\xdf\xc5\xc3\xc2\xff\xd8\xde\xc5\xc2\xcb\xac\x63\x1b\xbd\xcf\xa4\xb7\xca\x3f",
        // "X509_STORE_new" / M(Xor2) / S(81) / L(14)
        "\x19\x74\x71\x78\x1e\x12\x15\x0e\x13\x04\x1e\x2f\x24\x36\x41\x95",
        // "CFRelease" / M(Xor3) / S(92) / L(9)
        "\x2f\x2a\x3e\x09\x00\x09\x0d\x1f\x09\x6c\xb5\x8a\x83\xdc\x3a\x07",
        // "SecKeychainSearchCopyNext" / M(Xor1) / S(114) / L(25)
        "\x21\x17\x11\x39\x17\x0b\x11\x1a\x13\x1b\x1c\x21\x17\x13\x00\x11\x1a\x31\x1d\x02\x0b\x3c\x17\x0a\x06\x72\xfe\x8c\x3b\x8b\x8d\x2c\xfc\x40",
        // "EVP_get_digestbyname" / M(Xor2) / S(71) / L(20)
        "\x17\x04\x02\x0d\x35\x37\x26\x0d\x36\x3b\x35\x37\x21\x26\x30\x2b\x3c\x33\x3f\x37\x52",
        // "IOIteratorNext" / M(Xor2) / S(117) / L(14)
        "\x2c\x2a\x2c\x11\x00\x17\x04\x11\x0a\x17\x2b\x00\x1d\x11\x65\x86",
        // "EVP_DigestUpdate" / M(Rot) / S(109) / L(16)
        "\xb2\xc3\xbd\xcc\xb1\xd6\xd4\xd2\xe0\xe1\xc2\xdd\xd1\xce\xe1\xd2\x6d",
        // "0.9.8.3" / M(Xor1) / S(59) / L(7)
        "\x0b\x15\x02\x15\x03\x15\x08\x3b\xa4\xa0\x7e\x1a\x82\x4b\x6b\xa6",
        // "CC_SHA1_Final" / M(Xor4) / S(27) / L(13)
        "\xf3\xf3\xef\xe3\xf8\xf1\x81\xef\xf6\xd9\xde\xd1\xdc\xb0\x3c\xc4",
        // "%02x" / M(Xor2) / S(246) / L(4)
        "\xc3\xd6\xd4\x9e\xe6\x7b\xc4\x1c\xbc\xf1\x76\x29\x3d\x87\xdc\xf4",
        // "CFBundleShortVersionString" / M(Xor1) / S(3) / L(26)
        "\x40\x45\x41\x76\x6d\x67\x6f\x66\x50\x6b\x6c\x71\x77\x55\x66\x71\x70\x6a\x6c\x6d\x50\x77\x71\x6a\x6d\x64\x03\xa9\xa4\xee\xa2\xd1\x39\x23\x48",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(214) / L(54)
        "\x05\x29\x4f\x49\x4a\x3b\x43\x05\x22\x3f\x38\x48\x37\x48\x4f\x05\x1c\x48\x37\x43\x3b\x4d\x45\x48\x41\x49\x05\x29\x3b\x39\x4b\x48\x3f\x4a\x4f\x04\x3c\x48\x37\x43\x3b\x4d\x45\x48\x41\x05\x29\x3b\x39\x4b\x48\x3f\x4a\x4f\xd6",
        // "%02X:" / M(Xor4) / S(191) / L(5)
        "\xd5\xc0\xc2\xa8\xca\xf0\x58\x29\x57\x87\xa3\xc3\x64\xc2\x4b\x6e",
        // "glob" / M(Xor2) / S(13) / L(4)
        "\x7a\x71\x72\x7f\x1d\xb9\x5d\x74\xa2\x5d\x7e\x97\x9f\x34\x09\x33",
        // "%02X" / M(Rot) / S(68) / L(4)
        "\x69\x74\x76\x9c\x44\x22\x74\x86\xdb\x06\x9a\x0a\x6d\x37\x4f\xb1",
        // "" / M(None) / S(0) / L(0)
        "\xc2\x3e\xd5\x8e\x60\x3f\xf2\x85\x24\x9c\x53\x14\x59\x5c\x22\x28\x49\xb7\x42\x8e\xc8\xfd\x70\xcd\x3e\x10\x8e\x2b\xa9\x16\x8a\x0a",
        // "" / M(None) / S(0) / L(0)
        "\x05\x36\x56\x98\x04\x30\x09\xbd\xf2\x46\xca\xcc\x57\x6e\x05\x05\xd1\x8e\x77\xe5\x74\x8b\x60\x91\xbc\x85\x86\x02\x80\xe9\x02\x60",
        // "sel_registerName" / M(Xor1) / S(156) / L(16)
        "\xef\xf9\xf0\xc3\xee\xf9\xfb\xf5\xef\xe8\xf9\xee\xd2\xfd\xf1\xf9\x9c",
        // "" / M(None) / S(0) / L(0)
        "\xb3\x8b\xa4\x12\x40\x88\xc4\xbe\xd6\xbf\x9a\x79\x25\x00\x75\xeb\x2a\x08\x5e\xb1\x46\x17\xe0\x64\x9b\x33\x30\xd5\x82\x8a\xad\x18",
        // "X509_free" / M(Xor3) / S(174) / L(9)
        "\xe6\x8b\x8e\x87\xe1\xd8\xcc\xdb\xdb\xbe\x59\xc9\xac\x71\x86\xec",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(94) / L(21)
        "\x35\x1d\x18\x0a\x27\x2e\x3b\x1f\x2c\x2c\x3f\x27\x1d\x3f\x32\x32\x1c\x3f\x3d\x35\x2d\x5e",
        // "receipt" / M(Rot) / S(231) / L(7)
        "\x59\x4c\x4a\x4c\x50\x57\x5b\xe7\xd8\x5b\xa6\xb1\xe4\xde\x4e\xe9",
        // "IOObjectRelease" / M(Xor2) / S(41) / L(15)
        "\x70\x76\x76\x5b\x53\x5c\x5a\x4d\x6b\x5c\x55\x5c\x58\x4a\x5c\x39",
        // "SecItemCopyMatching" / M(Xor1) / S(136) / L(19)
        "\xdb\xed\xeb\xc1\xfc\xed\xe5\xcb\xe7\xf8\xf1\xc5\xe9\xfc\xeb\xe0\xe1\xe6\xef\x88",
        // "kSecMatchLimitAll" / M(Xor1) / S(180) / L(17)
        "\xdf\xe7\xd1\xd7\xf9\xd5\xc0\xd7\xdc\xf8\xdd\xd9\xdd\xc0\xf5\xd8\xd8\xb4",
        // "" / M(None) / S(0) / L(0)
        "\xf8\x01\x1c\x64\x6c\x75\xf9\xb2\x4b\x39\xfb\x40\xbc\x86\xf5\x07\xfc\xe0\x65\xc6\x79\x6d\x65\x72\xd3\xce\x6d\x2e\x4e\x7c\x2d\x6f",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x43\x9e\xb8\x9b\x1c\x26\x35\x67\xfd\x5c\x44\x2a\x12\x51\x3c\x62\xe8\x3d\x10\x6d\x50\x5a\x15\x48\x10\xb1\x19\xdd\xde\xf9\xdd",
        // "CFBundleIdentifier" / M(Xor4) / S(145) / L(18)
        "\x80\x85\x81\xb6\xad\xa7\xaf\xa6\x8a\xa7\xa6\xad\xb7\xaa\xa5\xaa\xa6\xb1\xc3",
        // "sk_value" / M(Xor2) / S(204) / L(8)
        "\xaf\xb7\x83\xaa\xbd\xb0\xa9\xb9\xdc\x5c\x86\xf4\xf0\x3e\x98\x4c",
        // "strncmp" / M(Xor2) / S(43) / L(7)
        "\x48\x4f\x49\x55\x58\x56\x4b\x3b\xd8\x7d\x35\x76\x88\xcf\xe3\x9d",
        // "" / M(None) / S(0) / L(0)
        "\x9a\x6f\x97\xf6\xeb\x13\x1a\x4d\x75\xcd\x89\xca\xb4\x25\xe9\x15\xcb\x87\x9b\xb7\x27\x35\x23\x01\xf4\xc9\x10\x6c\xdf\x4a\x5b\xe4",
        // "IORegistryEntryCreateCFProperty" / M(Xor1) / S(213) / L(31)
        "\x9c\x9a\x87\xb0\xb2\xbc\xa6\xa1\xa7\xac\x90\xbb\xa1\xa7\xac\x96\xa7\xb0\xb4\xa1\xb0\x96\x93\x85\xa7\xba\xa5\xb0\xa7\xa1\xac\xd5",
        // "CFDateCompare" / M(Xor1) / S(180) / L(13)
        "\xf7\xf2\xf0\xd5\xc0\xd1\xf7\xdb\xd9\xc4\xd5\xc6\xd1\xb4\x9a\xe4",
        // "CFDictionaryAddValue" / M(Xor3) / S(149) / L(20)
        "\xe9\xec\xee\xc3\xc9\xde\xc3\xc5\xc4\xcb\xd8\xd3\xeb\xce\xce\xfc\xcb\xc6\xdf\xcf\xaa",
        // "" / M(None) / S(0) / L(0)
        "\x46\x08\x08\xb2\xc5\x74\xcb\x95\x10\xf8\x14\xef\xbb\xff\xef\x6d\x2e\xfa\x69\x21\xae\x72\x94\xa0\x3c\x69\x4c\x40\xa6\x94\x89\xfd",
        // "/usr/lib/libSystem.dylib" / M(Xor4) / S(125) / L(24)
        "\x32\x68\x6e\x6f\x32\x71\x74\x7f\x32\x71\x74\x7f\x4e\x64\x6e\x69\x78\x70\x33\x79\x64\x71\x74\x7f\x1d\x68\x58\x4d\x1d\x06\x90\x96\x88",
        // "CFDataGetBytePtr" / M(Xor4) / S(219) / L(16)
        "\xc8\xcd\xcf\xea\xff\xea\xcc\xee\xff\xc9\xf2\xff\xee\xdb\xff\xf9\x8b",
        // "" / M(None) / S(0) / L(0)
        "\x43\x82\x9f\x6f\x37\x0c\xf5\xcd\x86\x37\xf5\x8f\x13\xa9\xc0\x63\x08\xc7\x3c\xb0\x7f\x48\x92\xd8\xb6\xed\x30\x8d\x77\x28\x71\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x7a\x31\xdb\xd0\xb0\x79\xdc\x50\x4f\xb4\xad\x6b\x22\x07\xf6\xa4\xda\xdb\x32\xf8\xa2\x51\x12\xfb\x7a\x81\xf9\xd1\xbd\x73\x5c\x8d",
        // "" / M(None) / S(0) / L(0)
        "\x22\xc5\x3d\x5e\x52\x2f\xbe\x69\x96\xff\x64\xaf\x3b\x91\x23\xb2\x8c\x1b\x9a\x8a\xbc\x4d\xf9\xa9\x13\x2a\xe6\xde\x5a\x26\x2a\x41",
        // "sk_value" / M(Xor4) / S(74) / L(8)
        "\xd3\xcb\xff\xd6\xc1\xcc\xd5\xc5\xa0\x1e\xf4\x43\x4b\xc2\xa6\xea",
        // "kSecClass" / M(Xor3) / S(187) / L(9)
        "\xa0\x98\xae\xa8\x88\xa7\xaa\xb8\xb8\xcb\x16\x34\x7b\xb1\x83\x0f",
        // "CFDataCreateMutable" / M(Xor1) / S(31) / L(19)
        "\x5c\x59\x5b\x7e\x6b\x7e\x5c\x6d\x7a\x7e\x6b\x7a\x52\x6a\x6b\x7e\x7d\x73\x7a\x1f",
        // "CFBundleVersion" / M(Rot) / S(10) / L(15)
        "\x4d\x50\x4c\x7f\x78\x6e\x76\x6f\x60\x6f\x7c\x7d\x73\x79\x78\x0a",
        // "CFBundleGetMainBundle" / M(Rot) / S(125) / L(21)
        "\xc0\xc3\xbf\xf2\xeb\xe1\xe9\xe2\xc4\xe2\xf1\xca\xde\xe6\xeb\xbf\xf2\xeb\xe1\xe9\xe2\x7d",
        // "" / M(None) / S(0) / L(0)
        "\x5e\xe6\xe8\x9d\xb9\x66\x8f\xad\x19\x52\x28\x19\xa2\x57\xbb\x58\x34\x88\x22\x27\xe8\x2e\xa0\xce\x11\x4d\xce\x0a\x3b\x04\x83\x85",
        // "CFDataCreateMutable" / M(Xor4) / S(67) / L(19)
        "\x7f\x7a\x78\x5d\x48\x5d\x7f\x4e\x59\x5d\x48\x59\x71\x49\x48\x5d\x5e\x50\x59\x3c",
        // "glob" / M(Xor1) / S(215) / L(4)
        "\xb0\xbb\xb8\xb5\xd7\xb8\xec\x25\xe2\x63\x80\xbe\x19\x74\x83\x1a",
        // "" / M(None) / S(0) / L(0)
        "\x30\x0a\x41\x4e\x40\xd7\x34\x36\xf2\xcc\x9e\x6e\x02\xca\x83\xe9\x04\x02\x84\xc7\x0f\x88\x6b\x71\x1c\x3f\x6a\x56\x4c\x78\x7a\x04",
        // "CFStringCompare" / M(Rot) / S(75) / L(15)
        "\x8e\x91\x9e\xbf\xbd\xb4\xb9\xb2\x8e\xba\xb8\xbb\xac\xbd\xb0\x4b",
        // "PKCS7_free" / M(Xor4) / S(235) / L(10)
        "\xe0\xfb\xf3\xe3\x87\xef\xd6\xc2\xd5\xd5\xb0\x09\x4c\x81\xf2\x17",
        // "CFArrayAppendValue" / M(Xor3) / S(89) / L(18)
        "\x2f\x2a\x2d\x1e\x1e\x0d\x15\x2d\x1c\x1c\x09\x02\x08\x3a\x0d\x00\x19\x09\x6c",
        // "" / M(None) / S(0) / L(0)
        "\xaf\x9f\xbb\xa3\x20\x10\x58\x91\x00\xe9\xf3\x12\xf5\x76\xf6\xfa\x47\x7d\x90\x4c\x3e\x52\xb1\x9d\x6d\x88\x2e\x04\x7c\xc2\x43\x60",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(106) / L(36)
        "\xcc\xc9\xcd\xfa\xe1\xeb\xe3\xea\xc8\xea\xfb\xd9\xee\xe3\xfa\xea\xc9\xe0\xfd\xc6\xe1\xe9\xe0\xcb\xe6\xec\xfb\xe6\xe0\xe1\xee\xfd\xf6\xc4\xea\xf6\x8f",
        // "/System/Library/Frameworks/Security.framework/Security" / M(Rot) / S(254) / L(54)
        "\x2d\x51\x77\x71\x72\x63\x6b\x2d\x4a\x67\x60\x70\x5f\x70\x77\x2d\x44\x70\x5f\x6b\x63\x75\x6d\x70\x69\x71\x2d\x51\x63\x61\x73\x70\x67\x72\x77\x2c\x64\x70\x5f\x6b\x63\x75\x6d\x70\x69\x2d\x51\x63\x61\x73\x70\x67\x72\x77\xfe",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Xor4) / S(90) / L(50)
        "\xc1\xbd\x97\x9d\x9a\x8b\x83\xc1\xa2\x87\x8c\x9c\x8f\x9c\x97\xc1\xa8\x9c\x8f\x83\x8b\x99\x81\x9c\x85\x9d\xc1\xaf\x9e\x9e\xa5\x87\x9a\xc0\x88\x9c\x8f\x83\x8b\x99\x81\x9c\x85\xc1\xaf\x9e\x9e\xa5\x87\x9a\xee",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(117) / L(25)
        "\x0f\x62\x67\x6e\x08\x19\x16\x1a\x12\x08\x30\x32\x23\x08\x23\x32\x2f\x23\x08\x35\x2e\x08\x19\x1e\x13\x57\xa6\xa2\x36\x2f\x9a\xf4\xee\xa9",
        // "objc_getClass" / M(Xor4) / S(116) / L(13)
        "\x2f\x22\x2a\x23\x1f\x27\x25\x34\x03\x2c\x21\x33\x33\x40\x0c\x9c",
        // "_MASReceipt" / M(Xor1) / S(60) / L(11)
        "\x63\x71\x7d\x6f\x6e\x59\x5f\x59\x55\x4c\x48\x3c\xa3\xa4\xd6\x5e",
        // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(76) / L(25)
        "\x5f\x40\x5c\x40\x56\x5a\x5e\x40\x5f\x5f\x5d\x58\x5d\x5b\x40\x5f\x5e\x5e\x40\x58\x40\x5f\x5f\x40\x5f\x6e\x7a\x6e\x41\x14\x7e\xd5\x8b\x1c",
        // "" / M(None) / S(0) / L(0)
        "\x83\xf5\x5f\xd6\xd3\xeb\xca\xae\xf1\xa9\xc4\x0f\xe1\x9c\x7a\x94\x52\xe2\x53\xcd\xee\x6b\x9c\xdb\x3c\xdf\x47\xd5\x2b\xa1\x09\x5b",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(124) / L(32)
        "\x05\x05\x05\x05\x5b\x51\x5b\x31\x31\x5b\x51\x5b\x18\x18\x5b\x28\x5b\x34\x34\x5b\x46\x5b\x11\x11\x5b\x46\x5b\x0f\x0f\x5b\x26\x5b\x7c",
        // "CFStringCompare" / M(Rot) / S(140) / L(15)
        "\xcf\xd2\xdf\x00\xfe\xf5\xfa\xf3\xcf\xfb\xf9\xfc\xed\xfe\xf1\x8c",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor1) / S(7) / L(39)
        "\x44\x41\x52\x55\x4b\x44\x75\x62\x66\x73\x62\x41\x75\x68\x6a\x41\x6e\x6b\x62\x54\x7e\x74\x73\x62\x6a\x55\x62\x77\x75\x62\x74\x62\x69\x73\x66\x73\x6e\x68\x69\x07\x72\x52\xad\x5d\xef\x55\x3c\x80",
        // "" / M(None) / S(0) / L(0)
        "\x73\xaa\xd6\x02\xf4\xaa\xbf\xf7\x35\x05\x94\x6f\x1b\x9e\xfa\x36\xca\x42\x5f\x19\x7a\xa7\xe7\x8c\x68\x8c\x6c\x07\x52\x4c\xaf\x53",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(53) / L(29)
        "\x78\x50\x55\x47\x6a\x63\x76\x57\x7a\x70\x67\x7a\x7c\x7d\x72\x61\x6a\x58\x76\x6a\x50\x72\x7f\x7f\x51\x72\x70\x78\x60\x13\xf7\xb7\x46\x9f\x97\xf2\x2e\xb5",
        // "" / M(None) / S(0) / L(0)
        "\xe5\x86\x84\x6c\xeb\x11\x25\x45\x99\x3b\xfb\x43\x11\xc0\x79\xd7\x1e\xfa\x0b\xa6\x64\xbc\xdb\x36\x33\xa7\x8f\x06\xa4\xdf\xff\x4f",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(241) / L(24)
        "\xb2\xb7\xb5\x90\x85\x94\xb7\x9e\x83\x9c\x90\x85\x85\x94\x83\xa2\x94\x85\xb7\x9e\x83\x9c\x90\x85\xf1\x82\xa1\x8a\x33\x8c\xd5\x75\x39",
        // "" / M(None) / S(0) / L(0)
        "\xc1\xe8\xac\xd8\xdf\x23\x86\x4c\x4b\x73\x5c\x94\x6d\x42\x3b\xe5\x76\x37\x14\x31\xb0\x3c\x82\xfd\xef\x46\x17\xdd\xc5\x36\xfe\xa6",
        // "CFDictionaryCreateMutable" / M(Xor2) / S(112) / L(25)
        "\x11\x14\x16\x3b\x31\x26\x3b\x3d\x3c\x33\x20\x2b\x11\x20\x37\x33\x26\x37\x1f\x27\x26\x33\x30\x3e\x37\x52\xa0\x89\xd5\x37\xfa\x06\xfa\xda",
        // "" / M(None) / S(0) / L(0)
        "\x44\x0d\xc4\xcc\x52\xb6\xf5\x86\xf0\xd3\xb5\xcb\xc9\x39\x69\xb9\x90\xcc\x4c\x71\x79\xb0\x52\x73\x57\xf1\x9f\x57\xba\xf9\xf6\xbb",
        // "NSApplicationMain" / M(Xor4) / S(134) / L(17)
        "\x22\x3f\x2d\x1c\x1c\x00\x05\x0f\x0d\x18\x05\x03\x02\x21\x0d\x05\x02\x6c",
        // "CFDataGetLength" / M(Xor4) / S(161) / L(15)
        "\x53\x56\x54\x71\x64\x71\x57\x75\x64\x5c\x75\x7e\x77\x64\x78\x10",
        // "objc_getClass" / M(Xor2) / S(131) / L(13)
        "\xfc\xf1\xf9\xf0\xcc\xf4\xf6\xe7\xd0\xff\xf2\xe0\xe0\x93\x02\x47",
        // "" / M(None) / S(0) / L(0)
        "\xdb\x6f\x44\xa2\x4b\x64\x14\xbd\xed\x3a\x73\xd8\x0e\xbb\xc8\x2a\xbd\x4e\x9b\xe5\xcd\x67\x9a\xfb\x6a\x45\x58\x2f\xd0\xb5\x04\x34",
        // "BIO_free" / M(Xor2) / S(79) / L(8)
        "\x1d\x16\x10\x00\x39\x2d\x3a\x3a\x5f\xe8\x41\x2b\x82\x7e\xfc\x1f",
        // "CFDictionaryCreateMutable" / M(Xor1) / S(238) / L(25)
        "\xad\xa8\xaa\x87\x8d\x9a\x87\x81\x80\x8f\x9c\x97\xad\x9c\x8b\x8f\x9a\x8b\xa3\x9b\x9a\x8f\x8c\x82\x8b\xee\x78\x4c\x23\x38\xe2\x09\x42\x09",
        // "" / M(None) / S(0) / L(0)
        "\x23\xba\xf4\xa8\x6b\x57\xa7\xe2\x09\xef\x73\xf7\xb2\xd0\xe9\xde\x82\x18\xa5\xcc\x83\x8d\xc4\x16\x79\x6c\xb7\x69\x97\xd7\x9e\x7f",
        // "d2i_X509_bio" / M(Xor2) / S(176) / L(12)
        "\xc4\x92\xc9\xff\xf8\x95\x90\x99\xff\xc2\xc9\xcf\xa0\x75\x4b\xdc",
        // "EVP_DigestInit" / M(Rot) / S(243) / L(14)
        "\x38\x49\x43\x52\x37\x5c\x5a\x58\x66\x67\x3c\x61\x5c\x67\xf3\xb1",
        // "OBJ_txt2obj" / M(Rot) / S(219) / L(11)
        "\x2a\x1d\x25\x3a\x4f\x53\x4f\x0d\x4a\x3d\x45\xdb\xb4\x06\x31\x2b",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x95\xd0\x98\xc7\x19\xc7\x4d\x63\xc1\xd3\x7d\x0b\xa1\x35\x26\xe0\xa4\xa6\xdd\xed\x51\xd4\xfe\xb6\xdb\x3a\x9e\x9a\x12\xd3\x3d",
        // "" / M(None) / S(0) / L(0)
        "\x12\xe1\x72\x83\xfb\xef\x48\x45\xec\x01\x4e\xeb\x17\xc2\x6f\x29\x91\x89\xac\x0a\xc7\x40\x56\xac\x4f\xb4\xf4\xfd\xd0\x1e\xf3\x92",
        // "" / M(None) / S(0) / L(0)
        "\x04\x32\x33\x1e\x05\xc6\x3d\xd9\x43\xad\x27\x8b\xfb\x26\x5f\xc9\x6b\xf5\xbc\x7d\xef\x60\xf0\x59\x0b\xdf\x6d\x69\xbf\xb7\xfa\x96",
        // "" / M(None) / S(0) / L(0)
        "\xda\x2c\x94\x8e\x36\x96\xf7\x20\x70\x68\x2d\xca\x03\xdb\x5c\x7c\xc0\x18\x55\x54\x98\x56\x3e\x4b\x86\x82\x6a\xec\x20\x68\x5d\xe3",
        // "kSecMatchLimit" / M(Xor2) / S(84) / L(14)
        "\x2f\x17\x21\x27\x09\x25\x30\x27\x2c\x08\x2d\x29\x2d\x30\x44\x53",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(105) / L(22)
        "\x40\x1a\x1c\x1d\x40\x03\x06\x0d\x40\x03\x06\x0d\x00\x0d\x05\x0c\x41\x0b\x16\x03\x06\x0d\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x3c\x54\xd0\x47\x0f\x15\x4d\x79\x45\x65\x2e\x06\xa1\x0f\x6d\xa5\xb4\xfc\x6c\xb9\xb3\x1e\x17\x56\x33\xa5\xe1\x9c\xcc\x13\x70\x10",
        // "" / M(None) / S(0) / L(0)
        "\x48\x3b\x45\x77\xef\xc0\x09\xe4\xa3\x78\x4e\x0a\xce\xb5\x6f\x73\x5e\x5e\x35\x92\xed\x86\x59\x4d\xf7\x24\x21\xc6\x04\x6f\x01\x4c",
        // "" / M(None) / S(0) / L(0)
        "\x92\xf2\xfe\x8b\x7d\x3e\x75\x6f\xa2\xad\x88\xf2\x99\x7f\x43\xc7\x8b\x71\x61\xb9\xe7\x51\xff\x0c\x94\x24\xaa\x84\xa3\x92\xe2\x70",
        // "CFBundleGetIdentifier" / M(Xor2) / S(74) / L(21)
        "\x1f\x1a\x1e\x29\x32\x38\x30\x39\x1b\x39\x28\x15\x38\x39\x32\x28\x35\x3a\x35\x39\x2e\x5c",
        // "" / M(None) / S(0) / L(0)
        "\x2f\xf9\x9b\xe6\x2a\xe9\x7a\xa8\x21\x4b\xf9\xdc\xe0\x1e\x64\xc1\x28\x82\xe2\x6f\x2f\xaa\x4a\x6c\x77\xee\xaa\x51\x4f\x79\xf2\x24",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" / M(Rot) / S(157) / L(50)
        "\xcc\xf0\x16\x10\x11\x02\x0a\xcc\xe9\x06\xff\x0f\xfe\x0f\x16\xcc\xe3\x0f\xfe\x0a\x02\x14\x0c\x0f\x08\x10\xcc\xde\x0d\x0d\xe8\x06\x11\xcb\x03\x0f\xfe\x0a\x02\x14\x0c\x0f\x08\xcc\xde\x0d\x0d\xe8\x06\x11\x9d",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(55) / L(24)
        "\x18\x42\x44\x45\x18\x5b\x5e\x55\x18\x5b\x5e\x55\x64\x4e\x44\x43\x52\x5a\x19\x53\x4e\x5b\x5e\x55\x37\xe0\x22\xc1\x1f\x10\xba\x16\xc5",
        // "" / M(None) / S(0) / L(0)
        "\xff\x20\xa0\xf3\xd4\x59\xde\x32\xe6\xdf\xd3\xe6\xab\x4d\x5a\x3e\x69\x5c\xc2\x04\xe0\xa5\xdb\x5c\x2d\xd3\xcb\x1c\x9a\x63\x30\x58",
        // "IOBSDNameMatching" / M(Xor1) / S(141) / L(17)
        "\xc4\xc2\xcf\xde\xc9\xc3\xec\xe0\xe8\xc0\xec\xf9\xee\xe5\xe4\xe3\xea\x8d",
        // "" / M(None) / S(0) / L(0)
        "\x7c\xc8\x2d\x75\x13\x5a\x67\x50\x1a\x12\x3a\xae\xff\xc0\xed\xf6\x48\xab\xc5\x49\xc0\xfa\xb7\x94\x38\x9c\xd3\x4b\xed\x9b\xc0\x0e",
        // "CFReadStreamRead" / M(Xor1) / S(42) / L(16)
        "\x69\x6c\x78\x4f\x4b\x4e\x79\x5e\x58\x4f\x4b\x47\x78\x4f\x4b\x4e\x2a",
        // "kCFBundleIdentifierKey" / M(Xor1) / S(184) / L(22)
        "\xd3\xfb\xfe\xfa\xcd\xd6\xdc\xd4\xdd\xf1\xdc\xdd\xd6\xcc\xd1\xde\xd1\xdd\xca\xf3\xdd\xc1\xb8",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(120) / L(59)
        "\xae\xa9\xb2\xa9\xbd\xb2\xad\xba\xb2\xae\xae\xb2\xaa\xbb\xb2\xad\xb1\xb2\xab\xb9\xb2\xa8\xb0\xb2\xbe\xbe\xb2\xad\xb0\xb2\xbc\xa9\xb2\xac\xb9\xb2\xbd\xaa\xb2\xaa\xac\xb2\xad\xaa\xb2\xbc\xa9\xb2\xb1\xb0\xb2\xbc\xbe\xb2\xae\xbb\xb2\xae\xa8\x78\x06\x3b\xc1\x82\x79\x57\x68\xfc",
        // "X509_STORE_free" / M(Xor3) / S(17) / L(15)
        "\x79\x14\x11\x18\x7e\x72\x75\x6e\x73\x64\x7e\x47\x53\x44\x44\x21",
        // "CFDateFormatterCreate" / M(Xor4) / S(216) / L(21)
        "\xd3\xd6\xd4\xf1\xe4\xf5\xd6\xff\xe2\xfd\xf1\xe4\xe4\xf5\xe2\xd3\xe2\xf5\xf1\xe4\xf5\x90",
        // "objc_getClass" / M(Xor3) / S(0) / L(13)
        "\x7f\x72\x7a\x73\x4f\x77\x75\x64\x53\x7c\x71\x63\x63\x10\x1d\x0f",
        // "X509_digest" / M(Xor3) / S(184) / L(11)
        "\x90\xfd\xf8\xf1\x97\xac\xa1\xaf\xad\xbb\xbc\xc8\x91\x1b\xa4\x11",
        // "SecCertificateCopyData" / M(Xor4) / S(183) / L(22)
        "\x22\x14\x12\x32\x14\x03\x05\x18\x17\x18\x12\x10\x05\x14\x32\x1e\x01\x08\x35\x10\x05\x10\x71",
        // "SHA1_Final" / M(Xor3) / S(7) / L(10)
        "\x44\x5f\x56\x26\x48\x51\x7e\x79\x76\x7b\x17\xd1\xb2\x10\x7a\x88",
        // "%02x:" / M(Xor4) / S(212) / L(5)
        "\x65\x70\x72\x38\x7a\x40\x7d\xb2\x70\xfe\xb4\x29\xb4\x3d\x89\xbf",
        // "" / M(None) / S(0) / L(0)
        "\xba\x24\x95\xeb\x51\x5c\x5a\x18\xf8\x5e\x44\x9a\x34\x60\xc4\xfb\x63\xff\x8b\x77\x10\xca\xa8\xa5\xe0\xde\xcb\x70\x9c\xcb\xbf\xc3",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor3) / S(165) / L(37)
        "\x88\x8d\x9e\x99\x87\x88\xb9\xae\xaa\xbf\xae\x88\xa4\xbb\xb2\x8a\xbb\xbb\xae\xa5\xaf\xa2\xa5\xac\x9b\xaa\xbf\xa3\x88\xa4\xa6\xbb\xa4\xa5\xae\xa5\xbf\xcb",
        // "Contents/_MASReceipt/receipt" / M(Xor2) / S(36) / L(28)
        "\x42\x6e\x6f\x75\x64\x6f\x75\x72\x2e\x5e\x4c\x40\x52\x53\x64\x62\x64\x68\x71\x75\x2e\x73\x64\x62\x64\x68\x71\x75\x01\xaa\x3a\xda\x7d\x14\x7e\x1f\xf1",
        // "alloc" / M(Xor1) / S(24) / L(5)
        "\x79\x74\x74\x77\x7b\x18\x9f\xa3\x0b\xe5\xb1\xb6\xc1\x92\xc4\xfd",
        // "PKCS7_get0_signers" / M(Rot) / S(227) / L(18)
        "\x33\x2e\x26\x36\x1a\x42\x4a\x48\x57\x13\x42\x56\x4c\x4a\x51\x48\x55\x56\xe3",
        // "objc_msgSend" / M(Xor2) / S(182) / L(12)
        "\xc9\xc4\xcc\xc5\xf9\xcb\xd5\xc1\xf5\xc3\xc8\xc2\xa6\xa8\x2d\xf9",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(95) / L(24)
        "\xeb\xc3\xc6\xc4\xe1\xf4\xe5\xc6\xef\xf2\xed\xe1\xf4\xf4\xe5\xf2\xd4\xe9\xed\xe5\xda\xef\xee\xe5\x80\xec\x39\xf6\x9a\xd0\xa0\x35\xa2",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x14\x1f\xa1\xb6\x28\xcc\xda\xd5\xae\xae\x0a\xe0\x4a\x93\x59\x7f\xcc\x98\xf5\x80\x83\x9d\x4a\x3b\x56\xbd\xc2\x18\xd9\xa6\xc8",
        // "0.9.8.3" / M(Xor1) / S(115) / L(7)
        "\x43\x5d\x4a\x5d\x4b\x5d\x40\x73\x6a\xd1\xb7\x9e\x32\x0d\x8d\x3d",
        // "longjmp" / M(Rot) / S(39) / L(7)
        "\x93\x96\x95\x8e\x91\x94\x97\x27\x74\x91\xbc\x26\xe9\x9a\xad\x72",
        // "CFDictionaryGetValue" / M(Rot) / S(86) / L(20)
        "\x99\x9c\x9a\xbf\xb9\xca\xbf\xc5\xc4\xb7\xc8\xcf\x9d\xbb\xca\xac\xb7\xc2\xcb\xbb\x56",
        // "" / M(None) / S(0) / L(0)
        "\x2c\x8d\x8b\x22\xd9\x93\x86\xad\xa7\xf8\x65\x4e\x49\x04\x1b\xb7\x44\x60\x56\x6c\x61\x61\x0b\x86\x8b\xd5\x64\x74\x53\x50\x5a\x8d",
        // "CFNumberCreate" / M(Xor2) / S(46) / L(14)
        "\x7d\x78\x70\x4b\x53\x5c\x5b\x4c\x7d\x4c\x5b\x5f\x4a\x5b\x3e\x5b",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(118) / L(19)
        "\x60\x0d\x08\x01\x67\x5f\x5d\x4c\x67\x5d\x40\x4c\x67\x5a\x41\x67\x77\x7a\x72\x38",
        // "NSApplicationMain" / M(Xor1) / S(125) / L(17)
        "\x33\x2e\x3c\x0d\x0d\x11\x14\x1e\x1c\x09\x14\x12\x13\x30\x1c\x14\x13\x7d",
        // "exit" / M(Xor4) / S(85) / L(4)
        "\x35\x28\x39\x24\x50\x74\xbb\xc9\xd3\xfc\x19\x88\x3b\x19\x95\x54",
        // "CFDateFormatterCreate" / M(Xor3) / S(147) / L(21)
        "\xea\xef\xed\xc8\xdd\xcc\xef\xc6\xdb\xc4\xc8\xdd\xdd\xcc\xdb\xea\xdb\xcc\xc8\xdd\xcc\xa9",
        // "d2i_PKCS7_bio" / M(Xor2) / S(203) / L(13)
        "\xbf\xe9\xb2\x84\x8b\x90\x98\x88\xec\x84\xb9\xb2\xb4\xdb\x5e\x81",
        // "EVP_DigestUpdate" / M(Xor2) / S(117) / L(16)
        "\x21\x32\x34\x3b\x20\x0d\x03\x01\x17\x10\x31\x14\x00\x05\x10\x01\x64",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x51\x32\x46\xf2\x2e\xef\x24\x8e\x9f\x33\x9b\x1f\x91\x2b\x4f\xf2\x3e\x87\x0c\x6c\x5d\x2d\xc8\xf5\x9c\xed\xd4\x8a\x0e\x4d\x67",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor3) / S(196) / L(48)
        "\xda\xa6\x8c\x86\x81\x90\x98\xda\xb9\x9c\x97\x87\x94\x87\x8c\xda\xb3\x87\x94\x98\x90\x82\x9a\x87\x9e\x86\xda\xbc\xba\xbe\x9c\x81\xdb\x93\x87\x94\x98\x90\x82\x9a\x87\x9e\xda\xbc\xba\xbe\x9c\x81\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x5a\x93\xed\x70\x0b\x77\x76\x84\xb2\xf4\x70\x5d\xa1\xad\x7f\x35\xe4\x26\x25\x59\xdb\xdf\x77\x61\x53\x21\x8b\x33\x76\x01\xcc\x7f",
        // "dlsym" / M(Xor3) / S(247) / L(5)
        "\x63\x6b\x74\x7e\x6a\x07\x21\xee\x66\x73\xc3\xda\xe6\x74\x2c\xb7",
        // "" / M(None) / S(0) / L(0)
        "\xb1\x99\x85\x33\x50\xca\x6f\x8c\x37\x63\x8c\x5c\xd6\xbf\x55\xb5\xb5\x14\xc5\x7a\xc5\xd3\x8f\xd8\x8c\xd7\xdd\xf5\x1f\x9c\xe7\x1a",
        // "CFBundleIdentifier" / M(Xor2) / S(29) / L(18)
        "\x4d\x48\x4c\x7b\x60\x6a\x62\x6b\x47\x6a\x6b\x60\x7a\x67\x68\x67\x6b\x7c\x0e",
        // "" / M(None) / S(0) / L(0)
        "\xab\xd4\x40\x15\xbe\x7c\x94\x62\xf0\xd4\x86\x8c\x2d\x8e\x4f\xe4\x4b\xab\x7e\x8e\x3a\x41\x68\xd3\x66\xf0\x47\xa4\xfd\xf8\x3f\x0a",
        // "OpenSSL_add_all_digests" / M(Xor2) / S(101) / L(23)
        "\x0a\x35\x20\x2b\x16\x16\x09\x1a\x24\x21\x21\x1a\x24\x29\x29\x1a\x21\x2c\x22\x20\x36\x31\x36\x45\x66\x14\x85\x17\xa6\x22\xe3\x9e",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(154) / L(40)
        "\x4c\x4b\x4b\x1f\x4f\x18\x4c\x4c\x48\x19\x4f\x43\x49\x1b\x4a\x42\x1c\x1c\x4f\x42\x1e\x4b\x4e\x1b\x1f\x48\x48\x4e\x4f\x48\x1e\x4b\x43\x42\x1e\x1c\x4c\x19\x4c\x4a\x7a\x7a\xa4\x6c\xbb\xb7\x95\x4b\xae",
        // "CFStringGetFileSystemRepresentation" / M(Xor3) / S(143) / L(35)
        "\xf0\xf5\xe0\xc7\xc1\xda\xdd\xd4\xf4\xd6\xc7\xf5\xda\xdf\xd6\xe0\xca\xc0\xc7\xd6\xde\xe1\xd6\xc3\xc1\xd6\xc0\xd6\xdd\xc7\xd2\xc7\xda\xdc\xdd\xb3",
        // "BIO_write" / M(Xor1) / S(39) / L(9)
        "\x65\x6e\x68\x78\x50\x55\x4e\x53\x42\x27\x6a\x14\x2e\x91\x4a\xee",
        // "setDelegate:" / M(Xor3) / S(46) / L(12)
        "\x4d\x5b\x4a\x7a\x5b\x52\x5b\x59\x5f\x4a\x5b\x04\x3e\x48\x13\xca",
        // "" / M(None) / S(0) / L(0)
        "\x0b\xf2\xce\x39\x00\xd8\x14\x5e\xae\xcf\x7e\x3b\x14\x7b\x70\xaa\x2a\xc9\x3f\x51\xe1\x7e\x33\x57\x16\x7d\xae\x24\x0f\x17\x93\x42",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(57) / L(23)
        "\x76\x49\x5c\x57\x6a\x6a\x75\x66\x58\x5d\x5d\x66\x58\x55\x55\x66\x5d\x50\x5e\x5c\x4a\x4d\x4a\x39\x65\x52\xee\xa2\xa3\x8e\x8b\xac",
        // "BIO_new" / M(Rot) / S(197) / L(7)
        "\x07\x0e\x14\x24\x33\x2a\x3c\xc5\x3e\x2a\xb1\x52\x36\x95\xa5\x79",
        // "CFBundleVersion" / M(Xor1) / S(239) / L(15)
        "\xac\xa9\xad\x9a\x81\x8b\x83\x8a\xb9\x8a\x9d\x9c\x86\x80\x81\xef",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor1) / S(218) / L(57)
        "\xf5\x89\xa3\xa9\xae\xbf\xb7\xf5\x96\xb3\xb8\xa8\xbb\xa8\xa3\xf5\x91\xbf\xa3\xb9\xb2\xbb\xb3\xb4\xa9\xf5\x89\xa3\xa9\xae\xbf\xb7\x88\xb5\xb5\xae\x99\xbf\xa8\xae\xb3\xbc\xb3\xb9\xbb\xae\xbf\xa9\xf4\xb1\xbf\xa3\xb9\xb2\xbb\xb3\xb4\xda\x81\x57\x52\xaa\xe5\x66\x83\xa3",
        // "" / M(None) / S(0) / L(0)
        "\x7e\xad\x24\xac\x6a\xd6\xda\x20\x97\x98\xc5\xb3\x72\xcf\x2d\x33\x06\xd7\x26\x56\xde\x65\x3a\x90\xe1\xdf\x01\x10\x34\x1c\xde\x34",
        // "CFURLCreateCopyAppendingPathComponent" / M(Xor4) / S(94) / L(37)
        "\xb7\xb2\xa1\xa6\xb8\xb7\x86\x91\x95\x80\x91\xb7\x9b\x84\x8d\xb5\x84\x84\x91\x9a\x90\x9d\x9a\x93\xa4\x95\x80\x9c\xb7\x9b\x99\x84\x9b\x9a\x91\x9a\x80\xf4",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(38) / L(36)
        "\x65\x60\x64\x53\x48\x42\x4a\x43\x61\x43\x52\x70\x47\x4a\x53\x43\x60\x49\x54\x6f\x48\x40\x49\x62\x4f\x45\x52\x4f\x49\x48\x47\x54\x5f\x6d\x43\x5f\x26",
        // "en0" / M(Xor2) / S(125) / L(3)
        "\x08\x03\x5d\x6d\xd2\xd7\x2a\x10\xce\x21\xbf\xef\xa5\x92\x46\xb3",
        // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(115) / L(25)
        "\x42\x5d\x41\x5d\x4b\x47\x43\x5d\x42\x42\x40\x45\x40\x46\x5d\x42\x43\x43\x5d\x45\x5d\x42\x42\x5d\x42\x73\xf8\xa2\x78\x3a\xcb\xc2\x55\x5e",
        // "CFBundleShortVersionString" / M(Xor3) / S(127) / L(26)
        "\xe1\xe4\xe0\xd7\xcc\xc6\xce\xc7\xf1\xca\xcd\xd0\xd6\xf4\xc7\xd0\xd1\xcb\xcd\xcc\xf1\xd6\xd0\xcb\xcc\xc5\xa2\x72\x91\x89\x50\x03\xee\xd1\xd3",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(94) / L(14)
        "\x3c\x3a\x22\x2a\x31\x23\x2f\x27\x20\x31\x21\x20\x22\x37\x6e\x21",
        // "globfree" / M(Rot) / S(114) / L(8)
        "\xd9\xde\xe1\xd4\xd8\xe4\xd7\xd7\x72\xb5\xcf\x08\x4a\x0a\x77\x36",
        // "CC_SHA1_Update" / M(Xor2) / S(160) / L(14)
        "\xf3\xf3\xef\xe3\xf8\xf1\x81\xef\xe5\xc0\xd4\xd1\xc4\xd5\xb0\xe8",
        // "CFBundleUnloadExecutable" / M(Xor4) / S(46) / L(24)
        "\xad\xa8\xac\x9b\x80\x8a\x82\x8b\xbb\x80\x82\x81\x8f\x8a\xab\x96\x8b\x8d\x9b\x9a\x8f\x8c\x82\x8b\xee\x90\xee\xff\x05\xf7\x14\x5d\x06",
        // "EVP_DigestFinal" / M(Xor2) / S(123) / L(15)
        "\x2e\x3d\x3b\x34\x2f\x02\x0c\x0e\x18\x1f\x2d\x02\x05\x0a\x07\x6b",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor3) / S(63) / L(43)
        "\x30\x35\x26\x21\x3f\x30\x01\x16\x12\x07\x16\x24\x1a\x07\x1b\x35\x1a\x1f\x16\x20\x0a\x00\x07\x16\x1e\x23\x12\x07\x1b\x21\x16\x1f\x12\x07\x1a\x05\x16\x27\x1c\x31\x12\x00\x16\x73\x30\xe9\xd6\x87\x76\x48\x46\x95",
        // "ASN1_INTEGER_free" / M(Xor2) / S(181) / L(17)
        "\xe6\xf4\xe9\x96\xf8\xee\xe9\xf3\xe2\xe0\xe2\xf5\xf8\xc1\xd5\xc2\xc2\xa7",
        // "kSecMatchSearchList" / M(Xor3) / S(120) / L(19)
        "\xe7\xdf\xe9\xef\xc1\xed\xf8\xef\xe4\xdf\xe9\xed\xfe\xef\xe4\xc0\xe5\xff\xf8\x8c",
        // "IORegistryEntryGetParentEntry" / M(Xor1) / S(79) / L(29)
        "\x06\x00\x1d\x2a\x28\x26\x3c\x3b\x3d\x36\x0a\x21\x3b\x3d\x36\x08\x2a\x3b\x1f\x2e\x3d\x2a\x21\x3b\x0a\x21\x3b\x3d\x36\x4f\x1b\x03\x2f\x2e\x69\x69\xd8\xf6",
        // "CFReadStreamOpen" / M(Xor2) / S(22) / L(16)
        "\x44\x41\x55\x62\x66\x63\x54\x73\x75\x62\x66\x6a\x48\x77\x62\x69\x07",
        // "." / M(Xor4) / S(255) / L(1)
        "\xde\xf0\xf5\x1a\xb9\xe5\x5c\x7f\x59\x35\xf2\x84\xb0\xae\x16\xfd",
        // "/System/Library/Keychains/SystemRootCertificates.keychain" / M(Xor3) / S(224) / L(57)
        "\x0d\x71\x5b\x51\x56\x47\x4f\x0d\x6e\x4b\x40\x50\x43\x50\x5b\x0d\x69\x47\x5b\x41\x4a\x43\x4b\x4c\x51\x0d\x71\x5b\x51\x56\x47\x4f\x70\x4d\x4d\x56\x61\x47\x50\x56\x4b\x44\x4b\x41\x43\x56\x47\x51\x0c\x49\x47\x5b\x41\x4a\x43\x4b\x4c\x22\xb6\x8c\x72\xc0\x56\x82\x70\x06",
        // "IOBSDNameMatching" / M(Rot) / S(144) / L(17)
        "\xd9\xdf\xd2\xe3\xd4\xde\xf1\xfd\xf5\xdd\xf1\x04\xf3\xf8\xf9\xfe\xf7\x90",
        // "Contents" / M(Xor4) / S(38) / L(8)
        "\x23\x0f\x0e\x14\x05\x0e\x14\x13\x60\x05\x00\x16\x87\xe8\xce\xff",
        // "d2i_PKCS7_bio" / M(Xor2) / S(173) / L(13)
        "\xd9\x8f\xd4\xe2\xed\xf6\xfe\xee\x8a\xe2\xdf\xd4\xd2\xbd\x20\x5b",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(128) / L(21)
        "\xfd\xd5\xd0\xc2\xef\xe6\xf3\xd7\xe4\xe4\xf7\xef\xd5\xf7\xfa\xfa\xd4\xf7\xf5\xfd\xe5\x96",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor4) / S(30) / L(31)
        "\xab\x83\x86\x94\xb9\xb0\xa5\x84\xa9\xa3\xb4\xa9\xaf\xae\xa1\xb2\xb9\x96\xa1\xac\xb5\xa5\x83\xa1\xac\xac\x82\xa1\xa3\xab\xb3\xc0",
        // "" / M(None) / S(0) / L(0)
        "\x94\x9b\x71\x54\xb5\xda\x5d\x6d\xe6\xe5\x32\xba\xdb\xcc\x91\x47\x9e\x22\x3f\x50\x59\x70\x4e\x37\xba\x39\x0d\x83\x3d\x64\xb2\xaf",
        // "" / M(None) / S(0) / L(0)
        "\x4a\xfc\xa7\x2f\xcc\x58\x74\x82\xd1\xc9\x45\x35\x05\x0d\x49\xa8\x94\xc2\x93\x00\x55\x56\xc5\x5c\x62\xaf\xdd\x35\x7b\x4a\x9a\xe3",
        // "" / M(None) / S(0) / L(0)
        "\x8b\x20\xbb\xd3\x3b\xff\xdc\x1a\x75\x14\xb0\xc6\x8c\x14\xae\x15\x99\x3e\x23\xe5\x87\xc1\x3d\x27\xac\xe3\x5f\x9d\x66\x7b\x34\x1d",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(194) / L(59)
        "\xb0\xb7\xbc\xb7\xc3\xbc\xb3\xc4\xbc\xb0\xb0\xbc\xb4\xc5\xbc\xb3\xbf\xbc\xb5\xc7\xbc\xb6\xbe\xbc\xc0\xc0\xbc\xb3\xbe\xbc\xc2\xb7\xbc\xb2\xc7\xbc\xc3\xb4\xbc\xb4\xb2\xbc\xb3\xb4\xbc\xc2\xb7\xbc\xbf\xbe\xbc\xc2\xc0\xbc\xb0\xc5\xbc\xb0\xb6\x86\x6c\xf5\xf5\x27\xd0\x56\xff\x90",
        // "" / M(None) / S(0) / L(0)
        "\x34\xf2\x40\x95\xd0\x44\x9e\x98\x2b\xc7\xf9\x01\xa8\x0b\xb2\x98\x17\xa3\x6b\xf1\x37\x7a\xe6\x9e\x7c\xdd\x23\xda\x58\x33\xc3\x26",
        // "kSecMatchLimitAll" / M(Xor3) / S(56) / L(17)
        "\x21\x19\x2f\x29\x07\x2b\x3e\x29\x22\x06\x23\x27\x23\x3e\x0b\x26\x26\x4a",
        // "BIO_s_mem" / M(Xor1) / S(10) / L(9)
        "\x48\x43\x45\x55\x79\x55\x67\x6f\x67\x0a\x3d\x14\xe3\x13\x70\xea",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(6) / L(35)
        "\x45\x40\x42\x67\x72\x63\x40\x69\x74\x6b\x67\x72\x72\x63\x74\x45\x74\x63\x67\x72\x63\x42\x67\x72\x63\x40\x74\x69\x6b\x55\x72\x74\x6f\x68\x61\x06",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(250) / L(25)
        "\x44\x29\x2c\x25\x43\x52\x5d\x51\x59\x43\x7b\x79\x68\x43\x68\x79\x64\x68\x43\x7e\x65\x43\x52\x55\x58\x1c\xfb\xf2\xc3\xc9\x6e\xb7\x5b\x15",
        // "CFNumberCreate" / M(Xor4) / S(188) / L(14)
        "\x83\x86\x8e\xb5\xad\xa2\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\xc0\xb5",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor4) / S(246) / L(39)
        "\x63\x66\x75\x72\x6c\x63\x52\x45\x41\x54\x45\x66\x52\x4f\x4d\x66\x49\x4c\x45\x73\x59\x53\x54\x45\x4d\x72\x45\x50\x52\x45\x53\x45\x4e\x54\x41\x54\x49\x4f\x4e\x20\x0e\x39\x39\xc6\x61\x4f\xf8\xd7",
        // "EVP_DigestUpdate" / M(Xor1) / S(231) / L(16)
        "\xa2\xb1\xb7\xb8\xa3\x8e\x80\x82\x94\x93\xb2\x97\x83\x86\x93\x82\xe7",
        // "CFArrayGetCount" / M(Xor1) / S(193) / L(15)
        "\x82\x87\x80\xb3\xb3\xa0\xb8\x86\xa4\xb5\x82\xae\xb4\xaf\xb5\xc1",
        // "receipt" / M(Rot) / S(137) / L(7)
        "\xfb\xee\xec\xee\xf2\xf9\xfd\x89\xc0\x2d\x85\x60\x30\xe6\x78\x03",
        // "init" / M(Rot) / S(195) / L(4)
        "\x2c\x31\x2c\x37\xc3\x3e\x62\x0a\xbe\xa9\xd8\xbe\x33\xa2\xaa\x28",
        // "." / M(Xor3) / S(6) / L(1)
        "\x38\x16\x6e\x16\x70\x34\x16\x99\xe2\x52\xf9\x2c\xaa\xbf\x1e\x96",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x41\xe2\x06\x5c\xad\xc3\x05\x59\xd8\x0c\x59\x24\xaa\xd0\xa5\xf3\xc7\xa8\xcd\x0d\x0f\xf5\xa5\x3d\x3b\xb8\xeb\xee\xe2\x2e\x26",
        // "CC_SHA1_Final" / M(Rot) / S(102) / L(13)
        "\xa9\xa9\xc5\xb9\xae\xa7\x97\xc5\xac\xcf\xd4\xc7\xd2\x66\x61\x2d",
        // "d2i_X509_bio" / M(Rot) / S(200) / L(12)
        "\x2c\xfa\x31\x27\x20\xfd\xf8\x01\x27\x2a\x31\x37\xc8\x2e\x8b\xfb",
        // "IOMasterPort" / M(Xor3) / S(30) / L(12)
        "\x67\x61\x63\x4f\x5d\x5a\x4b\x5c\x7e\x41\x5c\x5a\x2e\xfd\xce\x26",
        // "CFDictionarySetValue" / M(Xor2) / S(214) / L(20)
        "\x80\x85\x87\xaa\xa0\xb7\xaa\xac\xad\xa2\xb1\xba\x90\xa6\xb7\x95\xa2\xaf\xb6\xa6\xc3",
        // "com.turntouch.Turn-Touch-Remote" / M(Xor3) / S(251) / L(31)
        "\x78\x74\x76\x35\x6f\x6e\x69\x75\x6f\x74\x6e\x78\x73\x35\x4f\x6e\x69\x75\x36\x4f\x74\x6e\x78\x73\x36\x49\x7e\x76\x74\x6f\x7e\x1b",
        // "ASN1_get_object" / M(Xor3) / S(131) / L(15)
        "\xd2\xc0\xdd\xa2\xcc\xf4\xf6\xe7\xcc\xfc\xf1\xf9\xf6\xf0\xe7\x93",
        // "SHA1" / M(Xor1) / S(106) / L(4)
        "\x39\x22\x2b\x5b\x6a\xdd\xc5\xb0\x0b\x6d\xc8\x36\x00\xdb\x86\x03",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(11) / L(48)
        "\x34\x48\x62\x68\x6f\x7e\x76\x34\x57\x72\x79\x69\x7a\x69\x62\x34\x5d\x69\x7a\x76\x7e\x6c\x74\x69\x70\x68\x34\x52\x54\x50\x72\x6f\x35\x7d\x69\x7a\x76\x7e\x6c\x74\x69\x70\x34\x52\x54\x50\x72\x6f\x1b",
        // "" / M(None) / S(0) / L(0)
        "\x89\x41\xd1\x35\xee\x37\xc9\x43\x64\x72\x10\x89\xfa\x65\xdc\x56\xcc\x7c\x93\xab\x25\xac\x56\xbc\x22\xdc\x70\x76\x8e\x6d\xde\xeb",
        // "_MASReceipt/receipt" / M(Xor2) / S(244) / L(19)
        "\xbf\xad\xa1\xb3\xb2\x85\x83\x85\x89\x90\x94\xcf\x92\x85\x83\x85\x89\x90\x94\xe0",
        // "PKCS7_get0_signers" / M(Xor4) / S(11) / L(18)
        "\x81\x9a\x92\x82\xe6\x8e\xb6\xb4\xa5\xe1\x8e\xa2\xb8\xb6\xbf\xb4\xa3\xa2\xd1",
        // "" / M(None) / S(0) / L(0)
        "\xac\x24\xf4\xda\x68\x07\x4f\x5a\x0d\xad\xe8\xb2\x6d\xfe\xd4\xa6\x47\x06\xb3\x3b\x20\xbc\xfe\x23\x2a\x9a\xaf\x7c\x96\x31\xcd\x5c",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(144) / L(26)
        "\xf0\xf5\xf7\xd2\xc7\xd6\xf5\xdc\xc1\xde\xd2\xc7\xc7\xd6\xc1\xe0\xd6\xc7\xe3\xc1\xdc\xc3\xd6\xc1\xc7\xca\xb3\x11\x1e\xb4\x75\xe4\x1e\x38\xcb",
        // "Apple Root CA" / M(Xor4) / S(187) / L(13)
        "\xf1\xc0\xc0\xdc\xd5\x90\xe2\xdf\xdf\xc4\x90\xf3\xf1\xb0\x26\x96",
        // "glob_b" / M(Xor3) / S(67) / L(6)
        "\x34\x3f\x3c\x31\x0c\x31\x53\xa1\xfb\xc1\xa1\x9d\x26\x06\xbf\xe5",
        // "SHA1_Init" / M(Xor4) / S(153) / L(9)
        "\xc3\xd8\xd1\xa1\xcf\xd9\xfe\xf9\xe4\x90\xb2\x3c\x3f\xd9\x46\x46",
        // "CFRelease" / M(Xor4) / S(60) / L(9)
        "\x83\x86\x92\xa5\xac\xa5\xa1\xb3\xa5\xc0\xd1\xb4\xa8\x7a\x6d\x32",
        // "" / M(None) / S(0) / L(0)
        "\xef\x47\x70\x59\x74\x2e\x18\x01\xf0\x64\x49\xd2\x9c\x13\x96\x7c\x19\xcc\x03\x47\x7c\x84\x9c\x4f\xa9\x9d\x6d\xd8\x7b\x53\x8d\x5c",
        // "" / M(None) / S(0) / L(0)
        "\x9b\xbd\x9b\x8b\x3a\xb1\xce\xb5\xd2\x08\x09\xac\x9b\xc1\xe3\x75\x2c\x53\xaa\x6d\x94\x6d\x65\xf3\xe4\x06\x83\x72\xa3\x15\x8e\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x70\x96\x47\x22\xbd\x34\x6f\x75\xa5\xc0\x6e\x1e\xcb\x82\x51\x04\xc5\x3a\x84\x22\x08\x54\xcc\x9d\x64\x52\xd7\x40\xbe\x31\x57\xfb",
        // "setjmp" / M(Xor1) / S(236) / L(6)
        "\x9f\x89\x98\x86\x81\x9c\xec\xe2\x6c\xdf\x12\x10\x69\x54\x23\x64",
        // "PKCS7_get0_signers" / M(Rot) / S(145) / L(18)
        "\xe1\xdc\xd4\xe4\xc8\xf0\xf8\xf6\x05\xc1\xf0\x04\xfa\xf8\xff\xf6\x03\x04\x91",
        // "" / M(None) / S(0) / L(0)
        "\xa6\x25\x5c\x31\x20\xdd\xe8\x37\x86\xb7\x9f\xd7\xed\x2e\xda\xeb\x2f\xea\x6a\x40\xd2\xc7\xbb\x80\x2c\xf0\x12\x97\x56\xa3\xb6\x46",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(89) / L(24)
        "\x3b\x3e\x39\x1a\x0b\x17\x14\x0d\x0c\x1d\x2c\x11\x15\x1d\x3f\x1d\x0c\x3b\x0d\x0a\x0a\x1d\x16\x0c\x78\x9f\xb1\xf2\xd0\xef\x48\x16\xc8",
        // "start" / M(Xor2) / S(89) / L(5)
        "\x3a\x3d\x28\x3b\x3d\x49\x4d\x89\x39\x1e\x3e\x77\xcb\xf3\x78\x46",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(12) / L(26)
        "\x6c\x69\x6b\x4e\x5b\x4a\x69\x40\x5d\x42\x4e\x5b\x5b\x4a\x5d\x7c\x4a\x5b\x7f\x5d\x40\x5f\x4a\x5d\x5b\x56\x2f\xc7\xbd\x08\x73\xeb\xbe\x37\x80",
        // "CFDataAppendBytes" / M(Rot) / S(239) / L(17)
        "\x32\x35\x33\x50\x63\x50\x30\x5f\x5f\x54\x5d\x53\x31\x68\x63\x54\x62\xef",
        // "kSecMatchLimitAll" / M(Xor4) / S(158) / L(17)
        "\x77\x4f\x79\x7f\x51\x7d\x68\x7f\x74\x50\x75\x71\x75\x68\x5d\x70\x70\x1c",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(131) / L(32)
        "\xdb\xdb\xdb\xdb\x85\x8f\x85\xef\xef\x85\x8f\x85\xc6\xc6\x85\xf6\x85\xea\xea\x85\x98\x85\xcf\xcf\x85\x98\x85\xd1\xd1\x85\xf8\x85\xa2",
        // "sk_value" / M(Xor3) / S(188) / L(8)
        "\xbf\xa7\x93\xba\xad\xa0\xb9\xa9\xcc\xda\x9a\x40\x66\x10\xfa\xc5",
        // "alloc" / M(Xor2) / S(92) / L(5)
        "\x2d\x20\x20\x23\x2f\x4c\x98\x8c\x2c\xc9\x42\x0c\xdb\x41\x85\x6c",
        // "SecItemCopyMatching" / M(Rot) / S(113) / L(19)
        "\xc4\xd6\xd4\xba\xe5\xd6\xde\xb4\xe0\xe1\xea\xbe\xd2\xe5\xd4\xd9\xda\xdf\xd8\x71",
        // "" / M(None) / S(0) / L(0)
        "\x6c\x76\x78\x91\x76\x43\xcc\xb9\xbe\x98\xda\xac\xfb\xf9\x01\x01\xad\xbf\x6a\x70\x00\x9f\x02\x28\xce\xe0\x8e\x02\x21\x39\xd8\x13",
        // "SHA1_Update" / M(Xor4) / S(180) / L(11)
        "\x13\x08\x01\x71\x1f\x15\x30\x24\x21\x34\x25\x40\xab\x6f\x96\xff",
        // "Contents" / M(Xor4) / S(107) / L(8)
        "\xf3\xdf\xde\xc4\xd5\xde\xc4\xc3\xb0\x7f\x63\x0d\xf5\xd0\x3b\x39",
        // "CFRelease" / M(Xor4) / S(142) / L(9)
        "\xa3\xa6\xb2\x85\x8c\x85\x81\x93\x85\xe0\x09\x61\x1e\x84\x15\xd4",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" / M(Xor4) / S(6) / L(48)
        "\x09\x75\x5f\x55\x52\x43\x4b\x09\x6a\x4f\x44\x54\x47\x54\x5f\x09\x60\x54\x47\x4b\x43\x51\x49\x54\x4d\x55\x09\x6f\x69\x6d\x4f\x52\x08\x40\x54\x47\x4b\x43\x51\x49\x54\x4d\x09\x6f\x69\x6d\x4f\x52\x26",
        // "" / M(None) / S(0) / L(0)
        "\x67\x5c\xc4\x7f\x5e\x3f\xa9\x24\xa9\x4a\xe8\x7c\xdb\xdd\x56\x20\x69\x44\x77\x26\x9c\xd0\xb0\x01\x0e\x56\xfb\xe2\xd2\xae\x8c\x7d",
        // "_MASReceipt" / M(Xor4) / S(25) / L(11)
        "\xcf\xdd\xd1\xc3\xc2\xf5\xf3\xf5\xf9\xe0\xe4\x90\x48\xc5\xd8\x47",
        // "CFDataGetBytePtr" / M(Xor4) / S(176) / L(16)
        "\xf3\xf6\xf4\xd1\xc4\xd1\xf7\xd5\xc4\xf2\xc9\xc4\xd5\xe0\xc4\xc2\xb0",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(80) / L(37)
        "\x03\x35\x33\x1b\x35\x29\x33\x38\x31\x39\x3e\x03\x35\x31\x22\x33\x38\x13\x22\x35\x31\x24\x35\x16\x22\x3f\x3d\x11\x24\x24\x22\x39\x32\x25\x24\x35\x23\x50",
        // "X509_STORE_free" / M(Xor3) / S(144) / L(15)
        "\xf8\x95\x90\x99\xff\xf3\xf4\xef\xf2\xe5\xff\xc6\xd2\xc5\xc5\xa0",
        // "" / M(None) / S(0) / L(0)
        "\x4e\x28\xd6\xae\xa1\x97\x32\x7f\xc9\x4e\xc7\xe4\x49\xb8\xe7\x1b\xd1\xea\xb6\x8e\x57\x9e\xf6\x90\x45\xe6\xab\x67\xe6\x19\x3a\xbe",
        // "EVP_MD_CTX_init" / M(Xor3) / S(19) / L(15)
        "\x66\x75\x73\x7c\x6e\x67\x7c\x60\x77\x7b\x7c\x4a\x4d\x4a\x57\x23",
        // "%02x:" / M(Rot) / S(6) / L(5)
        "\x2b\x36\x38\x7e\x40\x06\x46\x9b\x93\xc7\xc7\x08\x4c\x10\xbd\x5f",
        // "" / M(None) / S(0) / L(0)
        "\x50\x13\x4a\x9d\x47\xcb\xa8\x87\xd9\x79\x17\xe7\x2e\x2a\x55\x1d\x2c\x76\xd1\xe1\xe4\x13\x05\xce\xe0\xef\x5c\xd4\x05\xd3\x96\x70",
        // "CFDictionaryAddValue" / M(Rot) / S(116) / L(20)
        "\xb7\xba\xb8\xdd\xd7\xe8\xdd\xe3\xe2\xd5\xe6\xed\xb5\xd8\xd8\xca\xd5\xe0\xe9\xd9\x74",
        // "BIO_s_mem" / M(Xor3) / S(166) / L(9)
        "\xf4\xff\xf9\xe9\xc5\xe9\xdb\xd3\xdb\xb6\x45\x43\x2e\xc9\xbe\xcc",
        // "CFArrayCreateMutable" / M(Xor1) / S(54) / L(20)
        "\x75\x70\x77\x44\x44\x57\x4f\x75\x44\x53\x57\x42\x53\x7b\x43\x42\x57\x54\x5a\x53\x36",
        // "" / M(None) / S(0) / L(0)
        "\x0c\xb2\xc9\xb7\xd0\xda\xdf\x53\xc0\xae\xf8\xb9\x64\x31\xe6\x0c\x2e\xe6\x42\x39\xe6\x87\xe6\x94\xe1\xba\x70\xb6\x1d\xf9\xdd\x9f",
        // "" / M(None) / S(0) / L(0)
        "\xe7\xfe\x04\x41\x6a\xbe\x43\xa4\xf0\x40\xc6\xe4\x19\x18\x50\x07\x37\xb1\x1f\xdf\x8d\x84\x4a\x2a\x46\xd0\x3a\xc4\x8c\xb8\x3a\xa6",
        // "ASN1_INTEGER_get" / M(Xor1) / S(151) / L(16)
        "\xd6\xc4\xd9\xa6\xc8\xde\xd9\xc3\xd2\xd0\xd2\xc5\xc8\xf0\xf2\xe3\x97",
        // "CFDateFormatterCreate" / M(Rot) / S(85) / L(21)
        "\x98\x9b\x99\xb6\xc9\xba\x9b\xc4\xc7\xc2\xb6\xc9\xc9\xba\xc7\x98\xc7\xba\xb6\xc9\xba\x55",
        // "X509_STORE_new" / M(Xor4) / S(19) / L(14)
        "\x68\x05\x00\x09\x6f\x63\x64\x7f\x62\x75\x6f\x5e\x55\x47\x30\x90",
        // "objc_msgSend" / M(Xor3) / S(119) / L(12)
        "\xe8\xe5\xed\xe4\xd8\xea\xf4\xe0\xd4\xe2\xe9\xe3\x87\x37\xb1\x66",
        // "BIO_free" / M(Xor4) / S(187) / L(8)
        "\xf2\xf9\xff\xef\xd6\xc2\xd5\xd5\xb0\xb5\x7b\x46\xd2\x12\xe2\x02",
        // "ASN1_OBJECT_free" / M(Xor3) / S(204) / L(16)
        "\x9c\x8e\x93\xec\x82\x92\x9f\x97\x98\x9e\x89\x82\xbb\xaf\xb8\xb8\xdd",
        // "IOServiceGetMatchingServices" / M(Xor4) / S(121) / L(28)
        "\x34\x32\x2e\x18\x0f\x0b\x14\x1e\x18\x3a\x18\x09\x30\x1c\x09\x1e\x15\x14\x13\x1a\x2e\x18\x0f\x0b\x14\x1e\x18\x0e\x7d\xd3\x67\xc6\x5f\x07\xbc\xe5\xba",
        // "IOIteratorNext" / M(Rot) / S(32) / L(14)
        "\x69\x6f\x69\x94\x85\x92\x81\x94\x8f\x92\x6e\x85\x98\x94\x20\xbf",
        // "BIO_write" / M(Xor2) / S(232) / L(9)
        "\xba\xb1\xb7\xa7\x8f\x8a\x91\x8c\x9d\xf8\xfe\x2b\x1a\x34\xa5\x5a",
        // "ASN1_INTEGER_free" / M(Xor2) / S(93) / L(17)
        "\x0e\x1c\x01\x7e\x10\x06\x01\x1b\x0a\x08\x0a\x1d\x10\x29\x3d\x2a\x2a\x4f",
        // "CC_SHA1" / M(Rot) / S(12) / L(7)
        "\x4f\x4f\x6b\x5f\x54\x4d\x3d\x0c\x0c\x63\x17\xbf\x11\x83\x44\x1c",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(254) / L(32)
        "\xc7\xc7\xc7\xc7\x99\x93\x99\xf3\xf3\x99\x93\x99\xda\xda\x99\xea\x99\xf6\xf6\x99\x84\x99\xd3\xd3\x99\x84\x99\xcd\xcd\x99\xe4\x99\xbe",
        // "kSecMatchSubjectContains" / M(Xor3) / S(217) / L(24)
        "\x91\xa9\x9f\x99\xb7\x9b\x8e\x99\x92\xa9\x8f\x98\x90\x9f\x99\x8e\xb9\x95\x94\x8e\x9b\x93\x94\x89\xfa\x41\x5d\x42\x59\xa9\x54\xf4\x83",
        // "X509_get_ext_by_OBJ" / M(Rot) / S(136) / L(19)
        "\xe0\xbd\xb8\xc1\xe7\xef\xed\xfc\xe7\xed\x00\xfc\xe7\xea\x01\xe7\xd7\xca\xd2\x88",
        // "CFDictionaryGetValue" / M(Xor1) / S(70) / L(20)
        "\x05\x00\x02\x2f\x25\x32\x2f\x29\x28\x27\x34\x3f\x01\x23\x32\x10\x27\x2a\x33\x23\x46",
        // "sk_num" / M(Xor1) / S(47) / L(6)
        "\x5c\x44\x70\x41\x5a\x42\x2f\x4a\x8b\x61\x7d\xf5\xa9\xc6\xb0\x95",
        // "kSecClassCertificate" / M(Xor1) / S(232) / L(20)
        "\x83\xbb\x8d\x8b\xab\x84\x89\x9b\x9b\xab\x8d\x9a\x9c\x81\x8e\x81\x8b\x89\x9c\x8d\xe8",
        // "ASN1_OBJECT_free" / M(Xor2) / S(144) / L(16)
        "\xc0\xd2\xcf\xb0\xde\xce\xc3\xcb\xc4\xc2\xd5\xde\xe7\xf3\xe4\xe4\x81",
        // "CFURLCreateFromFileSystemRepresentation" / M(Xor2) / S(234) / L(39)
        "\x99\x9c\x8f\x88\x96\x99\xa8\xbf\xbb\xae\xbf\x9c\xa8\xb5\xb7\x9c\xb3\xb6\xbf\x89\xa3\xa9\xae\xbf\xb7\x88\xbf\xaa\xa8\xbf\xa9\xbf\xb4\xae\xbb\xae\xb3\xb5\xb4\xda\x24\xd2\x66\x2a\xb2\x90\x56\x5d",
        // "PKCS7_free" / M(Rot) / S(187) / L(10)
        "\x0b\x06\xfe\x0e\xf2\x1a\x21\x2d\x20\x20\xbb\x1a\x86\xce\xb5\xae",
        // "kSecMatchSubjectContains" / M(Xor1) / S(23) / L(24)
        "\x7c\x44\x72\x74\x5a\x76\x63\x74\x7f\x44\x62\x75\x7d\x72\x74\x63\x54\x78\x79\x63\x76\x7e\x79\x64\x17\x6a\xd0\x8b\x87\x2c\x91\x45\x3e",
        // "CFStringCreateWithBytes" / M(Xor2) / S(67) / L(23)
        "\x20\x25\x30\x17\x11\x0a\x0d\x04\x20\x11\x06\x02\x17\x06\x34\x0a\x17\x0b\x21\x1a\x17\x06\x10\x63\x94\x9d\x1f\x75\xa4\xde\x29\x9e",
        // "CFBundleGetMainBundle" / M(Rot) / S(98) / L(21)
        "\xa5\xa8\xa4\xd7\xd0\xc6\xce\xc7\xa9\xc7\xd6\xaf\xc3\xcb\xd0\xa4\xd7\xd0\xc6\xce\xc7\x62",
        // "CFNumberCreate" / M(Rot) / S(79) / L(14)
        "\x92\x95\x9d\xc4\xbc\xb1\xb4\xc1\x92\xc1\xb4\xb0\xc3\xb4\x4f\xd9",
        // "%02X:" / M(Rot) / S(162) / L(5)
        "\xc7\xd2\xd4\xfa\xdc\xa2\x7f\x03\xe8\x16\xf0\x32\xa7\xd7\x6e\xf2",
        // "" / M(None) / S(0) / L(0)
        "\x28\x27\x31\xa1\x54\xfc\x84\x97\xaa\x58\x20\x2d\xb1\xb9\x90\xbd\xd8\xf1\x33\x84\xfd\xe5\x9e\xd9\xcf\xa1\x69\x5f\xd6\x5e\x67\x2c",
        // "" / M(None) / S(0) / L(0)
        "\xf1\x5c\xc9\x5d\xb1\xb2\x69\x04\x9d\xd7\xf1\xbf\xcf\x86\x92\x4d\x4b\x00\xdd\x6c\x7d\xfc\xd2\x10\x6b\x49\xe1\x6d\xbe\x79\x4a\x63",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(22) / L(24)
        "\x81\x59\x5c\x5a\x77\x8a\x7b\x5c\x85\x88\x83\x77\x8a\x8a\x7b\x88\x6a\x7f\x83\x7b\x70\x85\x84\x7b\x16\x76\xc4\xb4\xc8\x83\x76\xb8\x3d",
        // "Apple Root CA" / M(Rot) / S(56) / L(13)
        "\x79\xa8\xa8\xa4\x9d\x58\x8a\xa7\xa7\xac\x58\x7b\x79\x38\xdc\x65",
        // "" / M(None) / S(0) / L(0)
        "\x28\xe1\x3d\x0f\x94\x7d\xe1\xf1\x4a\xa7\x23\xec\xfa\xec\x77\x3e\xad\xa4\x93\x2b\x28\xdb\xd2\x8b\x53\xa8\x6a\xc6\x39\x66\x8e\x45",
        // "CC_SHA1_Update" / M(Xor3) / S(20) / L(14)
        "\x67\x67\x7b\x77\x6c\x65\x15\x7b\x71\x54\x40\x45\x50\x41\x24\xbf",
        // "CFDateCompare" / M(Xor3) / S(0) / L(13)
        "\x53\x56\x54\x71\x64\x75\x53\x7f\x7d\x60\x71\x62\x75\x10\x10\xb1",
        // "CFReadStreamClose" / M(Xor2) / S(147) / L(17)
        "\xc2\xc7\xd3\xe4\xe0\xe5\xd2\xf5\xf3\xe4\xe0\xec\xc2\xed\xee\xf2\xe4\x81",
        // "EVP_MD_CTX_init" / M(Xor4) / S(224) / L(15)
        "\x45\x56\x50\x5f\x4d\x44\x5f\x43\x54\x58\x5f\x69\x6e\x69\x74\x00",
        // "CFArrayCreateMutable" / M(Xor2) / S(123) / L(20)
        "\x2d\x28\x2f\x1c\x1c\x0f\x17\x2d\x1c\x0b\x0f\x1a\x0b\x23\x1b\x1a\x0f\x0c\x02\x0b\x6e",
        // "CFStringGetFileSystemRepresentation" / M(Xor2) / S(21) / L(35)
        "\x72\x77\x62\x45\x43\x58\x5f\x56\x76\x54\x45\x77\x58\x5d\x54\x62\x48\x42\x45\x54\x5c\x63\x54\x41\x43\x54\x42\x54\x5f\x45\x50\x45\x58\x5e\x5f\x31",
        // "setjmp" / M(Xor4) / S(53) / L(6)
        "\x23\x35\x24\x3a\x3d\x20\x50\x90\x12\xb8\x64\x82\xf3\x6c\xad\x8e",
        // "PKCS7_verify" / M(Xor2) / S(253) / L(12)
        "\xbd\xa6\xae\xbe\xda\xb2\x9b\x88\x9f\x84\x8b\x94\xed\x81\x75\x7e",
        // "SecCertificateCopyData" / M(Xor4) / S(224) / L(22)
        "\x73\x45\x43\x63\x45\x52\x54\x49\x46\x49\x43\x41\x54\x45\x63\x4f\x50\x59\x64\x41\x54\x41\x20",
        // "init" / M(Xor4) / S(122) / L(4)
        "\xc9\xce\xc9\xd4\xa0\x47\x9a\x4a\x43\xc3\xcf\xae\x55\xc9\xee\xf8",
        // "" / M(None) / S(0) / L(0)
        "\xdb\x91\x57\x7e\x49\x48\x02\x0c\xdf\xdf\xc9\x7c\xe4\xa9\x4c\x44\x65\x03\x0c\x48\xb4\x52\x47\x65\xe8\x92\x09\x72\xfa\x93\xb4\x45",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x49\x61\x14\x4d\x7b\xbc\x68\xd5\xb1\x79\xd4\x66\x91\xee\xfc\x53\xf5\xfe\xb9\x58\x53\xaf\x0b\xec\xa6\x40\xe8\xca\xb6\x6b\x2b",
        // "IORegistryEntryGetParentEntry" / M(Rot) / S(115) / L(29)
        "\xbc\xc2\xc5\xd8\xda\xdc\xe6\xe7\xe5\xec\xb8\xe1\xe7\xe5\xec\xba\xd8\xe7\xc3\xd4\xe5\xd8\xe1\xe7\xb8\xe1\xe7\xe5\xec\x73\xbf\x03\xe3\xb1\x91\x96\x7e\x6f",
        // "CFArrayGetValueAtIndex" / M(Rot) / S(205) / L(22)
        "\x10\x13\x0e\x3f\x3f\x2e\x46\x14\x32\x41\x23\x2e\x39\x42\x32\x0e\x41\x16\x3b\x31\x32\x45\xcd",
        // "" / M(None) / S(0) / L(0)
        "\xc5\x85\xf6\xf6\x4d\xbf\x4b\x78\x89\x10\x1c\x12\x89\xf7\xfb\xb5\xb2\x3f\xb7\x23\x96\x85\xc2\x67\xe4\x45\x62\x70\xce\xc1\x8f\x1b",
        // "" / M(None) / S(0) / L(0)
        "\xda\x11\xcd\xdd\x47\x52\x48\x51\xbf\x2a\xf4\x9f\xf3\x1e\xa7\xea\x5f\xd1\xcc\xcb\x04\x36\x3a\x62\x31\xfe\x65\xde\xb6\x47\x6d\xce",
        // "" / M(None) / S(0) / L(0)
        "\x59\xe3\x0c\x28\xdb\x95\x44\x91\x1a\x75\x60\xf4\x50\x8a\x3c\x46\xe6\xda\xd6\x6a\x3d\x39\xad\x71\x02\xcb\xaf\x5a\xb9\x9f\x85\x9b",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(132) / L(22)
        "\xc7\xc2\xc5\xf6\xf6\xe5\xfd\xc3\xe1\xf0\xd2\xe5\xe8\xf1\xe1\xc5\xf0\xcd\xea\xe0\xe1\xfc\x84",
        // "IORegistryEntryCreateCFProperty" / M(Xor1) / S(13) / L(31)
        "\x44\x42\x5f\x68\x6a\x64\x7e\x79\x7f\x74\x48\x63\x79\x7f\x74\x4e\x7f\x68\x6c\x79\x68\x4e\x4b\x5d\x7f\x62\x7d\x68\x7f\x79\x74\x0d",
        // "IORegistryEntryGetParentEntry" / M(Xor2) / S(104) / L(29)
        "\x07\x01\x1c\x2b\x29\x27\x3d\x3a\x3c\x37\x0b\x20\x3a\x3c\x37\x09\x2b\x3a\x1e\x2f\x3c\x2b\x20\x3a\x0b\x20\x3a\x3c\x37\x4e\x40\xd4\x69\x91\xb4\x03\xa6\xea",
        // "" / M(None) / S(0) / L(0)
        "\x28\x27\x84\xec\x0e\xeb\xf4\xdb\x63\x39\x3e\x1f\x35\x47\xb3\x8f\xb8\xc7\x8e\xfc\xdf\x9c\xf9\x10\xe5\x2b\x16\xb0\x58\xf1\xa7\xde",
        // "" / M(None) / S(0) / L(0)
        "\x9a\xdc\x23\xa7\x35\x92\xb3\xb3\x40\x47\xc0\x6a\x8e\x04\x66\xda\x36\xa0\x7a\xcc\xb0\xd9\xdd\xe1\x5b\x8e\x49\xc9\xa4\xbf\x68\x25",
        // "CFDictionaryGetValue" / M(Xor1) / S(201) / L(20)
        "\x8a\x8f\x8d\xa0\xaa\xbd\xa0\xa6\xa7\xa8\xbb\xb0\x8e\xac\xbd\x9f\xa8\xa5\xbc\xac\xc9",
        // "EVP_DigestFinal" / M(Rot) / S(92) / L(15)
        "\xa1\xb2\xac\xbb\xa0\xc5\xc3\xc1\xcf\xd0\xa2\xc5\xca\xbd\xc8\x5c",
        // "" / M(None) / S(0) / L(0)
        "\xa4\xd6\x74\x15\x83\x5b\x84\x3c\x2a\x83\x72\x6b\xc7\x0d\xc3\x5f\x98\xf4\xa5\x97\xf3\x58\xe7\x78\x3c\x32\x43\xd1\x30\x30\x99\xcb",
        // "" / M(None) / S(0) / L(0)
        "\x14\x29\x00\x38\x25\xa2\xec\x44\x05\x8e\x63\x1c\x50\x4d\x3a\x71\x4f\xef\x75\x5f\xee\x89\x76\x1e\xac\x9a\x14\x3d\xa3\x39\xdb\x2e",
        // "EVP_get_digestbyname" / M(Xor1) / S(167) / L(20)
        "\xe2\xf1\xf7\xf8\xc0\xc2\xd3\xf8\xc3\xce\xc0\xc2\xd4\xd3\xc5\xde\xc9\xc6\xca\xc2\xa7",
        // "CFReadStreamClose" / M(Xor2) / S(119) / L(17)
        "\x26\x23\x37\x00\x04\x01\x36\x11\x17\x00\x04\x08\x26\x09\x0a\x16\x00\x65",
        // "" / M(None) / S(0) / L(0)
        "\x01\x65\x94\x09\x74\x02\xdb\x5b\xe6\x41\x1a\xde\xd6\xad\x85\xeb\x5a\x9f\x9f\x44\x80\x06\xa7\xb6\xed\xda\x0a\x63\x00\x51\xf2\xd5",
        // "ASN1_OBJECT_free" / M(Xor1) / S(148) / L(16)
        "\xd5\xc7\xda\xa5\xcb\xdb\xd6\xde\xd1\xd7\xc0\xcb\xf2\xe6\xf1\xf1\x94",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(121) / L(66)
        "\x93\xef\xc5\xcf\xc8\xd9\xd1\x93\xf0\xd5\xde\xce\xdd\xce\xc5\x93\xfa\xce\xdd\xd1\xd9\xcb\xd3\xce\xd7\xcf\x93\xff\xd3\xce\xd9\xfa\xd3\xc9\xd2\xd8\xdd\xc8\xd5\xd3\xd2\x92\xda\xce\xdd\xd1\xd9\xcb\xd3\xce\xd7\x93\xff\xd3\xce\xd9\xfa\xd3\xc9\xd2\xd8\xdd\xc8\xd5\xd3\xd2\xbc",
        // "CFDataCreate" / M(Xor1) / S(134) / L(12)
        "\xc5\xc0\xc2\xe7\xf2\xe7\xc5\xf4\xe3\xe7\xf2\xe3\x86\x11\x35\xdf",
        // "" / M(None) / S(0) / L(0)
        "\x2c\xa6\x67\xa9\x84\xbf\x92\x14\x68\x0f\xf8\xc9\xc4\x25\xf1\xdf\x9b\xd3\x17\x7e\xc3\x84\x2b\x46\xd9\x30\x00\xde\xfa\xd3\xad\x8e",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor2) / S(239) / L(39)
        "\x9c\x99\x8b\xb6\xb2\xba\x85\xb0\xb1\xba\x9c\xad\xba\xbe\xab\xba\x88\xb6\xab\xb7\x8b\xb6\xb2\xba\x96\xb1\xab\xba\xad\xa9\xbe\xb3\x99\xad\xb0\xb2\x98\x92\x8b\xdf\x91\xbe\xe3\xeb\x93\x2c\x00\xe8",
        // "kSecMatchSearchList" / M(Xor2) / S(49) / L(19)
        "\x4e\x76\x40\x46\x68\x44\x51\x46\x4d\x76\x40\x44\x57\x46\x4d\x69\x4c\x56\x51\x25",
        // "EVP_DigestFinal" / M(Xor3) / S(123) / L(15)
        "\xce\xdd\xdb\xd4\xcf\xe2\xec\xee\xf8\xff\xcd\xe2\xe5\xea\xe7\x8b",
        // "" / M(None) / S(0) / L(0)
        "\x4e\x00\x9c\xb4\xda\xf3\x77\xc9\x50\x4f\xc8\x5d\x51\x42\x28\x4a\xe6\xde\xfd\x68\x93\x2d\x20\x25\x00\x25\x02\x2c\xae\x0c\x32\x27",
        // "CFBundleCopyBundleURL" / M(Xor1) / S(231) / L(21)
        "\xa4\xa1\xa5\x92\x89\x83\x8b\x82\xa4\x88\x97\x9e\xa5\x92\x89\x83\x8b\x82\xb2\xb5\xab\xe7",
        // "setDelegate:" / M(Xor1) / S(245) / L(12)
        "\x86\x90\x81\xb1\x90\x99\x90\x92\x94\x81\x90\xcf\xf5\xad\xad\xc2",
        // "0.9.8.3" / M(Xor2) / S(58) / L(7)
        "\x1a\x04\x13\x04\x12\x04\x19\x2a\xfb\x9a\x36\x5f\x16\x3d\x69\x08",
        // "IOObjectRelease" / M(Xor4) / S(120) / L(15)
        "\xc9\xcf\xcf\xe2\xea\xe5\xe3\xf4\xd2\xe5\xec\xe5\xe1\xf3\xe5\x80",
        // "SecKeychainSearchCreateFromAttributes" / M(Xor1) / S(214) / L(37)
        "\x85\xb3\xb5\x9d\xb3\xaf\xb5\xbe\xb7\xbf\xb8\x85\xb3\xb7\xa4\xb5\xbe\x95\xa4\xb3\xb7\xa2\xb3\x90\xa4\xb9\xbb\x97\xa2\xa2\xa4\xbf\xb4\xa3\xa2\xb3\xa5\xd6",
        // "" / M(None) / S(0) / L(0)
        "\xd1\x5c\x86\x36\x2f\xac\x7d\x53\xa5\x2b\xd8\xe4\x16\x7a\xbc\x68\x73\x7b\xb1\xd6\xc1\x2c\xd8\xd3\x01\xc8\xa1\xd1\xfa\xab\xa8\x54",
        // "" / M(None) / S(0) / L(0)
        "\x03\x75\x28\x67\x73\xa0\x32\x3d\x21\xa9\xaf\x7e\x5e\xf1\xc3\xcb\x35\x61\x54\x2e\x69\x9f\x95\x7b\xea\x56\x3c\x31\x7a\x21\xa3\x9f",
        // "CFURLCreateWithFileSystemPathRelativeToBase" / M(Xor3) / S(166) / L(43)
        "\x99\x9c\x8f\x88\x96\x99\xa8\xbf\xbb\xae\xbf\x8d\xb3\xae\xb2\x9c\xb3\xb6\xbf\x89\xa3\xa9\xae\xbf\xb7\x8a\xbb\xae\xb2\x88\xbf\xb6\xbb\xae\xb3\xac\xbf\x8e\xb5\x98\xbb\xa9\xbf\xda\x94\x51\x65\x1a\xbc\x81\x0c\x03",
        // "sha1" / M(Xor3) / S(72) / L(4)
        "\x2b\x30\x39\x69\x58\xc3\x29\x7a\x21\x94\xd4\x21\xe3\x91\x78\x82",
        // "." / M(Xor2) / S(150) / L(1)
        "\xa8\x86\xc6\x45\xb0\x16\x24\xe0\x94\xf4\x63\xb4\xd2\x5c\x8a\x46",
        // "" / M(None) / S(0) / L(0)
        "\x45\x28\x59\xee\x35\xd5\x00\x85\x47\x40\x79\x36\xc1\x44\x4c\xc8\x62\xe9\x72\x99\xbc\x71\x1b\x53\x13\xf5\x8e\x53\x29\xaf\x2f\x29",
        // "" / M(None) / S(0) / L(0)
        "\x5a\xb8\x60\x23\x6d\x1f\xbd\x88\x22\x10\x0b\xd0\x3c\x0e\x44\xd8\x59\xc1\xa4\x78\x86\xe9\xb8\xb6\x00\x28\x37\x3e\xe3\x0f\xc3\x38",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(219) / L(40)
        "\xed\xea\xea\xbe\xee\xb9\xed\xed\xe9\xb8\xee\xe2\xe8\xba\xeb\xe3\xbd\xbd\xee\xe3\xbf\xea\xef\xba\xbe\xe9\xe9\xef\xee\xe9\xbf\xea\xe2\xe3\xbf\xbd\xed\xb8\xed\xeb\xdb\x73\xed\x31\xf2\xc2\x2d\xad\xd2",
        // "" / M(None) / S(0) / L(0)
        "\x0f\xde\xf2\xd5\x62\x4e\x0a\xad\xed\x13\x69\xf0\xc1\x78\x3b\x30\x18\x48\xf6\xd4\xea\xa6\x6f\xa8\x58\x28\x8a\xf4\xec\xfe\xe3\xf1",
        // "SecKeychainOpen" / M(Xor2) / S(19) / L(15)
        "\x50\x66\x60\x48\x66\x7a\x60\x6b\x62\x6a\x6d\x4c\x73\x66\x6d\x03",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor2) / S(23) / L(39)
        "\x64\x61\x73\x4e\x4a\x42\x7d\x48\x49\x42\x64\x55\x42\x46\x53\x42\x70\x4e\x53\x4f\x73\x4e\x4a\x42\x6e\x49\x53\x42\x55\x51\x46\x4b\x61\x55\x48\x4a\x60\x6a\x73\x27\x07\xb7\xc2\x72\x7e\x02\x92\xb5",
        // "com.turntouch.Turn-Touch-Remote" / M(Rot) / S(241) / L(31)
        "\x54\x60\x5e\x1f\x65\x66\x63\x5f\x65\x60\x66\x54\x59\x1f\x45\x66\x63\x5f\x1e\x45\x60\x66\x54\x59\x1e\x43\x56\x5e\x60\x65\x56\xf1",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(136) / L(22)
        "\xb7\xfd\xfb\xfa\xb7\xf4\xf1\xea\xb7\xf4\xf1\xea\xf7\xea\xf2\xeb\xb6\xec\x01\xf4\xf1\xea\x88",
        // "OBJ_txt2obj" / M(Xor1) / S(165) / L(11)
        "\xea\xe7\xef\xfa\xd1\xdd\xd1\x97\xca\xc7\xcf\xa5\xb2\xef\xac\x6c",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(165) / L(22)
        "\xd9\xf1\xf4\xf0\xc7\xdc\xd6\xde\xd7\xfb\xd6\xd7\xdc\xc6\xdb\xd4\xdb\xd7\xc0\xf9\xd7\xcb\xb2",
        // "" / M(None) / S(0) / L(0)
        "\x98\x43\x25\x6d\x66\xa5\x14\xd1\xe7\x18\x5d\x90\x57\x76\xff\xc4\x51\x26\x79\x07\xec\x4e\x05\xff\x69\x5b\x42\x3f\x72\xa0\xc4\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x1a\x3d\x31\xca\x9c\xe5\x0e\x4a\x3a\xac\xf2\x6c\xe5\x86\xcc\x14\x2c\xb8\x78\x94\x8e\x80\x3c\x0b\x46\x12\x50\x57\x26\x36\xc8\xe3",
        // "SKReceiptRefreshRequest" / M(Xor1) / S(76) / L(23)
        "\x1f\x07\x1e\x29\x2f\x29\x25\x3c\x38\x1e\x29\x2a\x3e\x29\x3f\x24\x1e\x29\x3d\x39\x29\x3f\x38\x4c\x40\x88\x73\xcb\x97\x30\xcf\xd2",
        // "" / M(None) / S(0) / L(0)
        "\xaf\xaf\x11\x12\x27\x7d\x8b\xb9\xd6\xa4\xb0\x85\x41\xe2\xb7\xf6\x2c\x5b\x43\x0a\xb3\x7b\xf8\xc8\xe6\xbc\x13\x03\xe4\xad\x53\x2d",
        // "SecKeychainSearchCopyNext" / M(Xor4) / S(33) / L(25)
        "\x31\x07\x01\x29\x07\x1b\x01\x0a\x03\x0b\x0c\x31\x07\x03\x10\x01\x0a\x21\x0d\x12\x1b\x2c\x07\x1a\x16\x62\x95\x51\x04\xd6\x27\xff\xa6\x55",
        // "kSecClassCertificate" / M(Xor1) / S(200) / L(20)
        "\xa3\x9b\xad\xab\x8b\xa4\xa9\xbb\xbb\x8b\xad\xba\xbc\xa1\xae\xa1\xab\xa9\xbc\xad\xc8",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x05\xfe\x8d\x42\x8e\x6e\x25\x09\x86\xd4\xe1\xbb\x15\x2a\xf8\x68\x0c\x60\x22\xe1\xdd\x77\x19\x9c\xed\x61\xad\xfd\x6b\x19\x51",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(253) / L(24)
        "\x5d\x58\x5a\x7f\x6a\x7b\x58\x71\x6c\x73\x7f\x6a\x6a\x7b\x6c\x4d\x7b\x6a\x58\x71\x6c\x73\x7f\x6a\x1e\xd3\x41\xcf\x75\xcc\x6e\x82\x0a",
        // "" / M(None) / S(0) / L(0)
        "\xf6\xbf\xd3\x32\x98\x24\x14\x26\xfc\x2b\x51\xf7\x5a\x37\x2c\x6a\xaf\x80\x97\xc1\xa0\x47\xc1\xac\x86\x22\x8d\x7a\x24\xcf\x0f\x31",
        // "IOObjectRelease" / M(Xor4) / S(208) / L(15)
        "\x49\x4f\x4f\x62\x6a\x65\x63\x74\x52\x65\x6c\x65\x61\x73\x65\x00",
        // "CC_SHA1" / M(Xor3) / S(70) / L(7)
        "\x15\x15\x09\x05\x1e\x17\x67\x56\x86\xf2\x14\xfe\x55\x1a\xea\x45",
        // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(127) / L(25)
        "\x4e\x51\x4d\x51\x47\x4b\x4f\x51\x4e\x4e\x4c\x49\x4c\x4a\x51\x4e\x4f\x4f\x51\x49\x51\x4e\x4e\x51\x4e\x7f\x46\x52\xb9\x40\x16\x57\x48\x4a",
        // "" / M(None) / S(0) / L(0)
        "\x76\x35\x93\x68\x76\xdc\x6a\x65\xe3\x84\x1d\x4c\xe7\xa9\x6d\xe7\xb1\xd1\x1b\x5b\x9b\xf3\xa1\x3c\x10\x27\xcc\x4b\xc7\xb0\x1c\x72",
        // "dlopen" / M(Rot) / S(212) / L(6)
        "\x38\x40\x43\x44\x39\x42\xd4\xe9\x67\x4e\xa1\x40\xb6\x75\x75\xa8",
        // "" / M(None) / S(0) / L(0)
        "\xb6\xf4\x23\x9e\xf9\x56\xb6\x05\x04\x3f\xe2\x6a\x43\xc9\x7b\xd0\x18\x95\xe6\xc3\x66\x1f\x6d\xd7\x76\x3b\xdc\x1c\xd3\x6d\xa7\x5b",
        // "" / M(None) / S(0) / L(0)
        "\x44\x3d\xc7\xab\xba\x06\x07\x9e\x6c\x66\x85\x7f\xa6\xe8\x7e\x23\x3c\xfb\x70\x16\x02\x7d\x0c\x08\x64\x06\x5a\x57\x93\xda\xa8\x12",
        // "CFDataGetLength" / M(Rot) / S(201) / L(15)
        "\x0c\x0f\x0d\x2a\x3d\x2a\x10\x2e\x3d\x15\x2e\x37\x30\x3d\x31\xc9",
        // "d2i_X509_bio" / M(Xor2) / S(26) / L(12)
        "\x6e\x38\x63\x55\x52\x3f\x3a\x33\x55\x68\x63\x65\x0a\x70\x70\xb1",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(78) / L(16)
        "\x4d\x1c\x47\x71\x6f\x7d\x60\x1f\x71\x67\x60\x7a\x6b\x69\x6b\x7c\x2e",
        // "sha1" / M(Xor2) / S(59) / L(4)
        "\x58\x43\x4a\x1a\x2b\x60\xcc\x2f\x49\x53\xa4\x78\x6c\x88\xc8\x1b",
        // "kSecReturnRef" / M(Xor2) / S(61) / L(13)
        "\x46\x7e\x48\x4e\x7f\x48\x59\x58\x5f\x43\x7f\x48\x4b\x2d\xf7\x14",
        // "SecKeychainOpen" / M(Xor4) / S(207) / L(15)
        "\xa3\x95\x93\xbb\x95\x89\x93\x98\x91\x99\x9e\xbf\x80\x95\x9e\xf0",
        // "ASN1_get_object" / M(Xor4) / S(10) / L(15)
        "\xe1\xf3\xee\x91\xff\xc7\xc5\xd4\xff\xcf\xc2\xca\xc5\xc3\xd4\xa0",
        // "dlsym" / M(Xor2) / S(183) / L(5)
        "\xc3\xcb\xd4\xde\xca\xa7\x84\x32\x0d\x15\x0a\x2e\xc3\xf2\xb9\x68",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(233) / L(40)
        "\xdf\xd8\xd8\x8c\xdc\x8b\xdf\xdf\xdb\x8a\xdc\xd0\xda\x88\xd9\xd1\x8f\x8f\xdc\xd1\x8d\xd8\xdd\x88\x8c\xdb\xdb\xdd\xdc\xdb\x8d\xd8\xd0\xd1\x8d\x8f\xdf\x8a\xdf\xd9\xe9\xf6\xec\x35\x78\xcf\xa3\xa6\xd0",
        // "EVP_DigestInit" / M(Xor1) / S(131) / L(14)
        "\xc6\xd5\xd3\xdc\xc7\xea\xe4\xe6\xf0\xf7\xca\xed\xea\xf7\x83\x78",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(206) / L(22)
        "\xc1\xc4\xc3\xf0\xf0\xe3\xfb\xc5\xe7\xf6\xd4\xe3\xee\xf7\xe7\xc3\xf6\xcb\xec\xe6\xe7\xfa\x82",
        // "" / M(None) / S(0) / L(0)
        "\xfd\x1b\x50\x5a\x13\x74\x25\xd2\x1c\x35\xb3\x8d\x5c\x48\x03\x7a\xe2\x57\x53\x25\xca\xc3\x51\x89\x00\x59\x7b\x4d\xcc\x5a\x0f\x8c",
        // "CFBundleGetIdentifier" / M(Xor3) / S(21) / L(21)
        "\x68\x6d\x69\x5e\x45\x4f\x47\x4e\x6c\x4e\x5f\x62\x4f\x4e\x45\x5f\x42\x4d\x42\x4e\x59\x2b",
        // "" / M(None) / S(0) / L(0)
        "\x13\x0e\x43\x74\x0e\x18\x54\x87\x79\x57\xb1\x6a\x03\x01\x8b\x54\xa8\x2a\xf3\xec\xa5\x89\x0a\xc0\x92\x13\xfc\x99\x4e\x46\x83\xf4",
        // "OBJ_txt2obj" / M(Xor4) / S(189) / L(11)
        "\x9f\x92\x9a\x8f\xa4\xa8\xa4\xe2\xbf\xb2\xba\xd0\xd3\x62\x52\x79",
        // "" / M(None) / S(0) / L(0)
        "\x35\xe4\x68\x34\xe3\xd5\x1e\x78\x2b\x31\x98\xfb\x36\x6a\x85\xb5\xc6\x24\xe6\xa7\x0e\x33\xb4\xb9\xe1\x0c\x0e\x0a\x64\x1c\x52\xda",
        // "init" / M(Xor2) / S(15) / L(4)
        "\x76\x71\x76\x6b\x1f\xd9\xeb\x05\x70\xef\x59\x93\x0e\xc9\x4e\x7c",
        // "longjmp" / M(Xor4) / S(229) / L(7)
        "\x3c\x3f\x3e\x37\x3a\x3d\x20\x50\x91\x30\x81\xbd\x48\xa7\x9f\xe7",
        // "Contents/_MASReceipt" / M(Rot) / S(25) / L(20)
        "\x5c\x88\x87\x8d\x7e\x87\x8d\x8c\x48\x78\x66\x5a\x6c\x6b\x7e\x7c\x7e\x82\x89\x8d\x19",
        // "" / M(None) / S(0) / L(0)
        "\xb0\x3a\x50\x5a\x57\xc9\xaa\xa8\xfb\xc1\xbb\x5e\xb3\x1d\xa8\xbe\x66\x91\xc9\x4a\xde\x95\x95\xcd\x5b\xaf\xcc\x19\x3c\x1d\x1f\xd2",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x82\xd3\x80\x05\x8e\xb1\xbf\x87\xe2\xf0\xf0\xe7\x34\xdb\x27\x0d\x85\x13\x79\x9b\xda\x36\x93\x16\x68\x02\xcd\x8d\xa5\xeb\x53",
        // "X509_STORE_new" / M(Xor1) / S(234) / L(14)
        "\xb2\xdf\xda\xd3\xb5\xb9\xbe\xa5\xb8\xaf\xb5\x84\x8f\x9d\xea\x62",
        // "Contents/_MASReceipt/receipt" / M(Xor2) / S(211) / L(28)
        "\xb5\x99\x98\x82\x93\x98\x82\x85\xd9\xa9\xbb\xb7\xa5\xa4\x93\x95\x93\x9f\x86\x82\xd9\x84\x93\x95\x93\x9f\x86\x82\xf6\xe5\x7c\x86\xb6\xb0\xf8\x2d\x98",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(115) / L(40)
        "\xa9\xa4\xa4\xb8\xa8\xb5\xa9\xa9\xa5\xb6\xa8\xac\xa6\xb4\xa3\xab\xb9\xb9\xa8\xab\xb7\xa4\xa7\xb4\xb8\xa5\xa5\xa7\xa8\xa5\xb7\xa4\xac\xab\xb7\xb9\xa9\xb6\xa9\xa3\x73\xc0\x0a\xd4\x1d\x36\xfb\x14\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x6d\xfe\x58\x58\xdd\x2e\xe6\x93\x53\x45\xcf\xcb\xd7\x9a\x9f\x13\x53\xca\x9a\x4f\x86\xef\x7e\x6e\xfe\x32\x3c\x2d\x1b\x72\x26\x13",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(34) / L(22)
        "\x16\x4c\x4a\x4b\x16\x55\x50\x5b\x16\x55\x50\x5b\x56\x5b\x53\x5a\x17\x5d\x40\x55\x50\x5b\x39",
        // "kSecClass" / M(Xor1) / S(74) / L(9)
        "\x21\x19\x2f\x29\x09\x26\x2b\x39\x39\x4a\x41\x72\x8e\xb1\x5f\xed",
        // "en0" / M(Xor4) / S(107) / L(3)
        "\xd5\xde\x80\xb0\xbe\x70\xdf\x44\x0f\x53\xa4\xd2\x85\xc8\xc0\xda",
        // "dlsym" / M(Xor3) / S(160) / L(5)
        "\xd4\xdc\xc3\xc9\xdd\xb0\x64\x59\xcd\x9a\xb1\xd4\x5c\x1f\x2d\x11",
        // "" / M(None) / S(0) / L(0)
        "\x63\xce\xcb\xb1\x37\x48\x5c\x38\xda\xd2\xcd\x79\x96\xcf\xbd\xad\x56\x1f\xfb\x82\x1c\x6a\xca\x11\x4a\x11\xc0\x21\x6a\xfb\x89\x85",
        // "" / M(None) / S(0) / L(0)
        "\xe0\xd5\xa8\x7b\x51\xb1\xea\x37\xa0\x83\x41\x1a\x6d\xd0\xab\x6c\x84\x90\xb4\x8c\x6f\x1d\x60\x3e\x6a\xb9\x26\x04\xfd\x22\x35\x2b",
    };
    
    // Table for storing pointers
    static void *ReceiptValidation_Pointers[608] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) SHA1_Final),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) ASN1_get_object),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) PKCS7_verify),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) EVP_DigestInit),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) globfree),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) glob_b),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int ReceiptValidation_BZKYWAYUGQBA __unused;
    static int ReceiptValidation_QZHZSDTCXRVO __unused;
    static int ReceiptValidation_JGNLWSNFMWVB __unused;
    static int ReceiptValidation_YXONPMRORYTN __unused;
    static int ReceiptValidation_THYJXLPRMQMR __unused;
    static int ReceiptValidation_BECRJHYNZMBT __unused;
    static int ReceiptValidation_TLAAETLOQTDB __unused;
    static int ReceiptValidation_MIICEDDWGAZW __unused;
    
    
#define ReceiptValidation_ASN1_get_object_001B001A ((__ReceiptValidation_ASN1_get_object) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction00A, 26, 49, 16))
#define ReceiptValidation_ASN1_INTEGER_free_01850055 ((__ReceiptValidation_ASN1_INTEGER_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction005, 85, 98, 18))
#define ReceiptValidation_ASN1_INTEGER_get_0185003F ((__ReceiptValidation_ASN1_INTEGER_get) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction005, 63, 32, 17))
#define ReceiptValidation_ASN1_OBJECT_free_006001EB ((__ReceiptValidation_ASN1_OBJECT_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction007, 491, 144, 17))
#define ReceiptValidation_BIO_free_018500A2 ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction00C, 162, 130, 16))
#define ReceiptValidation_BIO_free_018501DE ((__ReceiptValidation_BIO_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction00B, 478, 187, 16))
#define ReceiptValidation_BIO_new_001B0013 ((__ReceiptValidation_BIO_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction006, 19, 68, 16))
#define ReceiptValidation_BIO_s_mem_001B00A8 ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction003, 168, 160, 16))
#define ReceiptValidation_BIO_s_mem_0060019C ((__ReceiptValidation_BIO_s_mem) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction006, 412, 10, 16))
#define ReceiptValidation_BIO_write_001B0178 ((__ReceiptValidation_BIO_write) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction005, 376, 39, 16))
#define ReceiptValidation_c2i_ASN1_INTEGER_01850243 ((__ReceiptValidation_c2i_ASN1_INTEGER) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction00B, 579, 78, 17))
#define ReceiptValidation_CC_SHA1_Init_014D0029 ((__ReceiptValidation_CC_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction005, 41, 59, 16))
#define ReceiptValidation_CFArrayAppendValue_021600D2 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction007, 210, 203, 19))
#define ReceiptValidation_CFArrayAppendValue_02160123 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction009, 291, 89, 19))
#define ReceiptValidation_CFArrayCreateMutable_008C01D7 ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction005, 471, 54, 21))
#define ReceiptValidation_CFBundleGetMainBundle_008C00E9 ((__ReceiptValidation_CFBundleGetMainBundle) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction003, 233, 214, 22))
#define ReceiptValidation_CFBundleUnloadExecutable_008C00A3 ((__ReceiptValidation_CFBundleUnloadExecutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00C, 163, 51, 33))
#define ReceiptValidation_CFDataAppendBytes_00DF01C1 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction004, 449, 239, 18))
#define ReceiptValidation_CFDataCreate_008C002E ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction003, 46, 65, 16))
#define ReceiptValidation_CFDataCreate_00DF002E ((__ReceiptValidation_CFDataCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction003, 46, 65, 16))
#define ReceiptValidation_CFDataCreateMutable_00DF011E ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00C, 286, 67, 20))
#define ReceiptValidation_CFDateFormatterSetProperty_008C01B3 ((__ReceiptValidation_CFDateFormatterSetProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction007, 435, 144, 35))
#define ReceiptValidation_CFDictionaryAddValue_008C01D5 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, 469, 116, 21))
#define ReceiptValidation_CFDictionaryAddValue_021600DE ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction004, 222, 196, 21))
#define ReceiptValidation_CFDictionaryCreateMutable_008C013C ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction006, 316, 238, 34))
#define ReceiptValidation_CFDictionaryGetValue_00DF0165 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction003, 357, 86, 21))
#define ReceiptValidation_CFDictionaryGetValue_00DF020E ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction005, 526, 201, 21))
#define ReceiptValidation_CFDictionarySetValue_008C01AA ((__ReceiptValidation_CFDictionarySetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, 426, 214, 21))
#define ReceiptValidation_CFNumberCreate_00DF01F1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction004, 497, 79, 16))
#define ReceiptValidation_CFReadStreamClose_008C01FA ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, 506, 147, 18))
#define ReceiptValidation_CFReadStreamClose_0216004E ((__ReceiptValidation_CFReadStreamClose) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00A, 78, 123, 18))
#define ReceiptValidation_CFReadStreamRead_00DF0151 ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction006, 337, 42, 17))
#define ReceiptValidation_CFReadStreamRead_0216009D ((__ReceiptValidation_CFReadStreamRead) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction003, 157, 208, 17))
#define ReceiptValidation_CFRelease_008C00F2 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction009, 242, 92, 16))
#define ReceiptValidation_CFRelease_008C01B7 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00C, 439, 60, 16))
#define ReceiptValidation_CFRelease_008C01CA ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00C, 458, 142, 16))
#define ReceiptValidation_CFRelease_00DF00F2 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction009, 242, 92, 16))
#define ReceiptValidation_CFRelease_00DF01B7 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00C, 439, 60, 16))
#define ReceiptValidation_CFRelease_00DF01CA ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00C, 458, 142, 16))
#define ReceiptValidation_CFRelease_021601B7 ((__ReceiptValidation_CFRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00C, 439, 60, 16))
#define ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_008C022C ((__ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction007, 556, 23, 48))
#define ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_00DF018A ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00A, 394, 63, 52))
#define ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_02160224 ((__ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00A, 548, 166, 52))
#define ReceiptValidation_d2i_PKCS7_bio_001B0097 ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction006, 151, 245, 16))
#define ReceiptValidation_d2i_PKCS7_bio_0185016C ((__ReceiptValidation_d2i_PKCS7_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction007, 364, 203, 16))
#define ReceiptValidation_d2i_X509_bio_001B0242 ((__ReceiptValidation_d2i_X509_bio) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction008, 578, 26, 16))
#define ReceiptValidation_EVP_DigestFinal_0185020F ((__ReceiptValidation_EVP_DigestFinal) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction003, 527, 92, 16))
#define ReceiptValidation_EVP_DigestInit_01850057 ((__ReceiptValidation_EVP_DigestInit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction009, 87, 8, 16))
#define ReceiptValidation_EVP_DigestUpdate_001B00F6 ((__ReceiptValidation_EVP_DigestUpdate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction004, 246, 109, 17))
#define ReceiptValidation_EVP_get_digestbyname_018500F4 ((__ReceiptValidation_EVP_get_digestbyname) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction008, 244, 71, 21))
#define ReceiptValidation_EVP_MD_CTX_init_00600019 ((__ReceiptValidation_EVP_MD_CTX_init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction00B, 25, 240, 16))
#define ReceiptValidation_exit_0075004A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction00A, 74, 176, 16))
#define ReceiptValidation_exit_0075016A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction00B, 362, 85, 16))
#define ReceiptValidation_exit_0113004A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction00A, 74, 176, 16))
#define ReceiptValidation_exit_011300AD ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction007, 173, 31, 16))
#define ReceiptValidation_exit_0113016A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction00B, 362, 85, 16))
#define ReceiptValidation_exit_014D004A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction00A, 74, 176, 16))
#define ReceiptValidation_exit_014D00AD ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction007, 173, 31, 16))
#define ReceiptValidation_exit_014D016A ((__ReceiptValidation_exit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction00B, 362, 85, 16))
#define ReceiptValidation_BZKYWAYUGQBA_00750089 ((__ReceiptValidation_CC_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_BZKYWAYUGQBA, 83, 16))
#define ReceiptValidation_BZKYWAYUGQBA_008C00A7 ((__ReceiptValidation_CFDateCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_BZKYWAYUGQBA, 235, 16))
#define ReceiptValidation_BZKYWAYUGQBA_00DF0114 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_BZKYWAYUGQBA, 219, 17))
#define ReceiptValidation_BZKYWAYUGQBA_01260158 ((__ReceiptValidation_SecCertificateCopyData) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_BZKYWAYUGQBA, 183, 23))
#define ReceiptValidation_BZKYWAYUGQBA_02160138 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_BZKYWAYUGQBA, 161, 16))
#define ReceiptValidation_BZKYWAYUGQBA_0216021D ((__ReceiptValidation_CFBundleCopyBundleURL) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_BZKYWAYUGQBA, 231, 22))
#define ReceiptValidation_QZHZSDTCXRVO_008C0068 ((__ReceiptValidation_CFReadStreamOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_QZHZSDTCXRVO, 155, 17))
#define ReceiptValidation_QZHZSDTCXRVO_008C0135 ((__ReceiptValidation_CFDictionaryCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_QZHZSDTCXRVO, 112, 34))
#define ReceiptValidation_QZHZSDTCXRVO_008C01F1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_QZHZSDTCXRVO, 79, 16))
#define ReceiptValidation_QZHZSDTCXRVO_00DF0138 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_QZHZSDTCXRVO, 161, 16))
#define ReceiptValidation_QZHZSDTCXRVO_00DF0241 ((__ReceiptValidation_CFDataGetLength) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_QZHZSDTCXRVO, 201, 16))
#define ReceiptValidation_QZHZSDTCXRVO_01AE00E8 ((__ReceiptValidation_IOIteratorNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 430, 11, 49, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_QZHZSDTCXRVO, 71, 16))
#define ReceiptValidation_QZHZSDTCXRVO_0216012E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_QZHZSDTCXRVO, 140, 16))
#define ReceiptValidation_JGNLWSNFMWVB_008C012E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_JGNLWSNFMWVB, 140, 16))
#define ReceiptValidation_JGNLWSNFMWVB_008C01D5 ((__ReceiptValidation_CFDictionaryAddValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_JGNLWSNFMWVB, 116, 21))
#define ReceiptValidation_JGNLWSNFMWVB_008C01F1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_JGNLWSNFMWVB, 79, 16))
#define ReceiptValidation_JGNLWSNFMWVB_00DF00DC ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_JGNLWSNFMWVB, 10, 20))
#define ReceiptValidation_JGNLWSNFMWVB_00DF0125 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_JGNLWSNFMWVB, 106, 37))
#define ReceiptValidation_JGNLWSNFMWVB_00DF012F ((__ReceiptValidation_CFURLCreateFromFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_JGNLWSNFMWVB, 7, 48))
#define ReceiptValidation_JGNLWSNFMWVB_00DF0167 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_JGNLWSNFMWVB, 46, 16))
#define ReceiptValidation_JGNLWSNFMWVB_00DF020E ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_JGNLWSNFMWVB, 201, 21))
#define ReceiptValidation_JGNLWSNFMWVB_016F01A9 ((__ReceiptValidation_IOMasterPort) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 367, 196, 49, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_JGNLWSNFMWVB, 30, 16))
#define ReceiptValidation_JGNLWSNFMWVB_021601FC ((__ReceiptValidation_CFArrayCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_JGNLWSNFMWVB, 123, 21))
#define ReceiptValidation_YXONPMRORYTN_00DF0114 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_YXONPMRORYTN, 219, 17))
#define ReceiptValidation_YXONPMRORYTN_00DF0123 ((__ReceiptValidation_CFArrayAppendValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_YXONPMRORYTN, 89, 19))
#define ReceiptValidation_YXONPMRORYTN_00DF0125 ((__ReceiptValidation_CFBundleGetValueForInfoDictionaryKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction009, ReceiptValidation_YXONPMRORYTN, 106, 37))
#define ReceiptValidation_YXONPMRORYTN_01260053 ((__ReceiptValidation_SecKeychainSearchCopyNext) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YXONPMRORYTN, 152, 34))
#define ReceiptValidation_YXONPMRORYTN_01CB0052 ((__ReceiptValidation_IOBSDNameMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 459, 6, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_YXONPMRORYTN, 76, 18))
#define ReceiptValidation_YXONPMRORYTN_02160165 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_YXONPMRORYTN, 86, 21))
#define ReceiptValidation_YXONPMRORYTN_02160180 ((__ReceiptValidation_CFURLCreateCopyAppendingPathComponent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_YXONPMRORYTN, 94, 38))
#define ReceiptValidation_THYJXLPRMQMR_008C002A ((__ReceiptValidation_CFDateCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_THYJXLPRMQMR, 52, 16))
#define ReceiptValidation_THYJXLPRMQMR_008C002B ((__ReceiptValidation_CFDateFormatterSetFormat) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_THYJXLPRMQMR, 173, 33))
#define ReceiptValidation_THYJXLPRMQMR_008C0095 ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_THYJXLPRMQMR, 36, 18))
#define ReceiptValidation_THYJXLPRMQMR_008C024D ((__ReceiptValidation_CFBundleGetIdentifier) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_THYJXLPRMQMR, 21, 22))
#define ReceiptValidation_THYJXLPRMQMR_01260016 ((__ReceiptValidation_SecItemCopyMatching) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_THYJXLPRMQMR, 181, 20))
#define ReceiptValidation_THYJXLPRMQMR_014C0137 ((__ReceiptValidation_NSApplicationMain) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction004, 332, 157, 51, ReceiptValidation_ObfuscationFunction00C, ReceiptValidation_THYJXLPRMQMR, 134, 18))
#define ReceiptValidation_THYJXLPRMQMR_01CB0204 ((__ReceiptValidation_IORegistryEntryGetParentEntry) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 459, 6, 49, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_THYJXLPRMQMR, 115, 38))
#define ReceiptValidation_THYJXLPRMQMR_021601F1 ((__ReceiptValidation_CFNumberCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_THYJXLPRMQMR, 79, 16))
#define ReceiptValidation_BECRJHYNZMBT_008C01A2 ((__ReceiptValidation_CFArrayGetCount) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_BECRJHYNZMBT, 193, 16))
#define ReceiptValidation_BECRJHYNZMBT_00DF000C ((__ReceiptValidation_CFDataAppendBytes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_BECRJHYNZMBT, 178, 18))
#define ReceiptValidation_BECRJHYNZMBT_00DF011A ((__ReceiptValidation_CFDataCreateMutable) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction006, ReceiptValidation_BECRJHYNZMBT, 31, 20))
#define ReceiptValidation_BECRJHYNZMBT_01AE00C9 ((__ReceiptValidation_IOServiceGetMatchingServices) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 430, 11, 49, ReceiptValidation_ObfuscationFunction005, ReceiptValidation_BECRJHYNZMBT, 255, 37))
#define ReceiptValidation_BECRJHYNZMBT_021600C5 ((__ReceiptValidation_CFEqual) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_BECRJHYNZMBT, 78, 16))
#define ReceiptValidation_BECRJHYNZMBT_021600E3 ((__ReceiptValidation_CFAbsoluteTimeGetCurrent) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_BECRJHYNZMBT, 152, 33))
#define ReceiptValidation_TLAAETLOQTDB_008C0155 ((__ReceiptValidation_CFDateFormatterCreate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_TLAAETLOQTDB, 216, 22))
#define ReceiptValidation_TLAAETLOQTDB_00DF0091 ((__ReceiptValidation_CFReadStreamCreateWithFile) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_TLAAETLOQTDB, 111, 35))
#define ReceiptValidation_TLAAETLOQTDB_00DF0165 ((__ReceiptValidation_CFDictionaryGetValue) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_TLAAETLOQTDB, 86, 21))
#define ReceiptValidation_TLAAETLOQTDB_014D00CC ((__ReceiptValidation_CC_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_TLAAETLOQTDB, 61, 16))
#define ReceiptValidation_TLAAETLOQTDB_0216024B ((__ReceiptValidation_CFArrayGetValueAtIndex) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction00B, ReceiptValidation_TLAAETLOQTDB, 206, 23))
#define ReceiptValidation_MIICEDDWGAZW_008C0048 ((__ReceiptValidation_CFDataGetBytePtr) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_MIICEDDWGAZW, 83, 17))
#define ReceiptValidation_MIICEDDWGAZW_008C012E ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MIICEDDWGAZW, 140, 16))
#define ReceiptValidation_MIICEDDWGAZW_00980065 ((__ReceiptValidation_SecKeychainOpen) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 152, 88, 55, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_MIICEDDWGAZW, 158, 16))
#define ReceiptValidation_MIICEDDWGAZW_0113023B ((__ReceiptValidation_CC_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction00A, ReceiptValidation_MIICEDDWGAZW, 70, 16))
#define ReceiptValidation_MIICEDDWGAZW_01CB0084 ((__ReceiptValidation_IORegistryEntryCreateCFProperty) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 459, 6, 49, ReceiptValidation_ObfuscationFunction008, ReceiptValidation_MIICEDDWGAZW, 186, 32))
#define ReceiptValidation_MIICEDDWGAZW_02160051 ((__ReceiptValidation_CFDateFormatterCreateDateFromString) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction003, ReceiptValidation_MIICEDDWGAZW, 17, 36))
#define ReceiptValidation_MIICEDDWGAZW_02160121 ((__ReceiptValidation_CFStringCompare) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction004, ReceiptValidation_MIICEDDWGAZW, 75, 16))
#define ReceiptValidation_MIICEDDWGAZW_021601FD ((__ReceiptValidation_CFStringGetFileSystemRepresentation) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction007, ReceiptValidation_MIICEDDWGAZW, 21, 36))
#define ReceiptValidation_IOObjectRelease_016F0220 ((__ReceiptValidation_IOObjectRelease) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 367, 196, 49, ReceiptValidation_ObfuscationFunction00B, 544, 120, 16))
#define ReceiptValidation_kCFBundleIdentifierKey_00DF0152 ((__ReceiptValidation_kCFBundleIdentifierKey) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction006, 338, 184, 23))
#define ReceiptValidation_kCFDateFormatterTimeZone_008C01F5 ((__ReceiptValidation_kCFDateFormatterTimeZone) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction004, 501, 22, 33))
#define ReceiptValidation_kCFTypeArrayCallBacks_008C0104 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction006, 260, 94, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_0216008D ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction009, 141, 127, 22))
#define ReceiptValidation_kCFTypeArrayCallBacks_02160194 ((__ReceiptValidation_kCFTypeArrayCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00A, 534, 121, 67, ReceiptValidation_ObfuscationFunction009, 404, 128, 22))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0036 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction00C, 54, 191, 38))
#define ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0131 ((__ReceiptValidation_kCFTypeDictionaryKeyCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction007, 305, 53, 38))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_008C003A ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 140, 197, 67, ReceiptValidation_ObfuscationFunction008, 58, 191, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00DF003A ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction008, 58, 191, 32))
#define ReceiptValidation_kCFTypeDictionaryValueCallBacks_00DF005C ((__ReceiptValidation_kCFTypeDictionaryValueCallBacks) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 223, 99, 67, ReceiptValidation_ObfuscationFunction008, 92, 89, 32))
#define ReceiptValidation_kSecClass_0098025B ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 152, 88, 55, ReceiptValidation_ObfuscationFunction005, 603, 74, 16))
#define ReceiptValidation_kSecClass_00FB025B ((__ReceiptValidation_kSecClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction005, 603, 74, 16))
#define ReceiptValidation_kSecClassCertificate_00980059 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 152, 88, 55, ReceiptValidation_ObfuscationFunction005, 89, 119, 21))
#define ReceiptValidation_kSecClassCertificate_00FB0236 ((__ReceiptValidation_kSecClassCertificate) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction006, 566, 200, 21))
#define ReceiptValidation_kSecMatchLimit_00FB0031 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction008, 49, 95, 16))
#define ReceiptValidation_kSecMatchLimit_00FB00D9 ((__ReceiptValidation_kSecMatchLimit) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction008, 217, 37, 16))
#define ReceiptValidation_kSecMatchLimitAll_00FB0108 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction006, 264, 180, 18))
#define ReceiptValidation_kSecMatchLimitAll_01260108 ((__ReceiptValidation_kSecMatchLimitAll) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction006, 264, 180, 18))
#define ReceiptValidation_kSecMatchSearchList_0098021A ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 152, 88, 55, ReceiptValidation_ObfuscationFunction007, 538, 49, 20))
#define ReceiptValidation_kSecMatchSearchList_0126021A ((__ReceiptValidation_kSecMatchSearchList) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction007, 538, 49, 20))
#define ReceiptValidation_kSecMatchSubjectContains_009801EE ((__ReceiptValidation_kSecMatchSubjectContains) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 152, 88, 55, ReceiptValidation_ObfuscationFunction005, 494, 23, 33))
#define ReceiptValidation_kSecReturnRef_00FB0062 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction00B, 98, 64, 16))
#define ReceiptValidation_kSecReturnRef_00FB00B6 ((__ReceiptValidation_kSecReturnRef) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction008, 182, 74, 16))
#define ReceiptValidation_longjmp_00750001 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction006, 1, 243, 16))
#define ReceiptValidation_longjmp_00750164 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction003, 356, 39, 16))
#define ReceiptValidation_longjmp_00750252 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 117, 113, 33, ReceiptValidation_ObfuscationFunction00C, 594, 229, 16))
#define ReceiptValidation_longjmp_01130164 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction003, 356, 39, 16))
#define ReceiptValidation_longjmp_01130252 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00B, 275, 125, 33, ReceiptValidation_ObfuscationFunction00C, 594, 229, 16))
#define ReceiptValidation_longjmp_014D0164 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction003, 356, 39, 16))
#define ReceiptValidation_longjmp_014D0252 ((__ReceiptValidation_longjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction00C, 594, 229, 16))
#define ReceiptValidation_OBJ_txt2obj_001B024F ((__ReceiptValidation_OBJ_txt2obj) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction00C, 591, 189, 16))
#define ReceiptValidation_objc_getClass_01460129 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction00B, 297, 116, 16))
#define ReceiptValidation_objc_getClass_01460139 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction008, 313, 131, 16))
#define ReceiptValidation_objc_getClass_022E0139 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction008, 313, 131, 16))
#define ReceiptValidation_objc_getClass_025A0129 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction00B, 297, 116, 16))
#define ReceiptValidation_objc_getClass_025A0139 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction008, 313, 131, 16))
#define ReceiptValidation_objc_getClass_025A0156 ((__ReceiptValidation_objc_getClass) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction00A, 342, 0, 16))
#define ReceiptValidation_objc_msgSend_01460160 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction007, 352, 182, 16))
#define ReceiptValidation_objc_msgSend_014601DD ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction009, 477, 119, 16))
#define ReceiptValidation_objc_msgSend_022E0090 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction007, 144, 186, 16))
#define ReceiptValidation_objc_msgSend_022E0160 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction007, 352, 182, 16))
#define ReceiptValidation_objc_msgSend_022E01DD ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction009, 477, 119, 16))
#define ReceiptValidation_objc_msgSend_025A0090 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction007, 144, 186, 16))
#define ReceiptValidation_objc_msgSend_025A0160 ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction007, 352, 182, 16))
#define ReceiptValidation_objc_msgSend_025A01DD ((__ReceiptValidation_objc_msgSend) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction009, 477, 119, 16))
#define ReceiptValidation_OpenSSL_add_all_digests_0060017B ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction006, 379, 57, 32))
#define ReceiptValidation_OpenSSL_add_all_digests_01850175 ((__ReceiptValidation_OpenSSL_add_all_digests) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction007, 373, 101, 32))
#define ReceiptValidation_PKCS7_free_001B0093 ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction004, 147, 134, 16))
#define ReceiptValidation_PKCS7_free_018501ED ((__ReceiptValidation_PKCS7_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction003, 493, 187, 16))
#define ReceiptValidation_PKCS7_get0_signers_0060015F ((__ReceiptValidation_PKCS7_get0_signers) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction003, 351, 227, 19))
#define ReceiptValidation_PKCS7_verify_018501FF ((__ReceiptValidation_PKCS7_verify) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction007, 511, 253, 16))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_00FB01CF ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 251, 214, 55, ReceiptValidation_ObfuscationFunction005, 463, 80, 38))
#define ReceiptValidation_SecKeychainSearchCreateFromAttributes_012601CF ((__ReceiptValidation_SecKeychainSearchCreateFromAttributes) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 294, 254, 55, ReceiptValidation_ObfuscationFunction005, 463, 80, 38))
#define ReceiptValidation_sel_registerName_014600CF ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction004, 207, 96, 17))
#define ReceiptValidation_sel_registerName_01460101 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction00C, 326, 105, 23, ReceiptValidation_ObfuscationFunction005, 257, 156, 17))
#define ReceiptValidation_sel_registerName_022E0006 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction008, 6, 24, 17))
#define ReceiptValidation_sel_registerName_022E00CF ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction004, 207, 96, 17))
#define ReceiptValidation_sel_registerName_022E0101 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction003, 558, 136, 23, ReceiptValidation_ObfuscationFunction005, 257, 156, 17))
#define ReceiptValidation_sel_registerName_025A0006 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction008, 6, 24, 17))
#define ReceiptValidation_sel_registerName_025A00CF ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction004, 207, 96, 17))
#define ReceiptValidation_sel_registerName_025A0101 ((__ReceiptValidation_sel_registerName) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 602, 34, 23, ReceiptValidation_ObfuscationFunction005, 257, 156, 17))
#define ReceiptValidation_setjmp_014D01BB ((__ReceiptValidation_setjmp) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction005, 333, 55, 33, ReceiptValidation_ObfuscationFunction005, 443, 236, 16))
#define ReceiptValidation_SHA1_00600030 ((__ReceiptValidation_SHA1) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction008, 48, 50, 16))
#define ReceiptValidation_SHA1_Final_001B00EE ((__ReceiptValidation_SHA1_Final) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction004, 238, 103, 16))
#define ReceiptValidation_SHA1_Init_001B01B6 ((__ReceiptValidation_SHA1_Init) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction00C, 438, 153, 16))
#define ReceiptValidation_SHA1_Update_001B00C2 ((__ReceiptValidation_SHA1_Update) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction004, 194, 78, 16))
#define ReceiptValidation_sk_free_001B0070 ((__ReceiptValidation_sk_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction006, 112, 107, 16))
#define ReceiptValidation_sk_num_006001E9 ((__ReceiptValidation_sk_num) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction005, 489, 47, 16))
#define ReceiptValidation_sk_value_001B01C4 ((__ReceiptValidation_sk_value) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction00A, 452, 188, 16))
#define ReceiptValidation_X509_digest_0185001D ((__ReceiptValidation_X509_digest) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction007, 29, 220, 16))
#define ReceiptValidation_X509_free_018500B4 ((__ReceiptValidation_X509_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction009, 389, 94, 16, ReceiptValidation_ObfuscationFunction00A, 180, 166, 16))
#define ReceiptValidation_X509_get_ext_by_OBJ_006001E7 ((__ReceiptValidation_X509_get_ext_by_OBJ) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction004, 487, 136, 20))
#define ReceiptValidation_X509_NAME_get_text_by_NID_001B019E ((__ReceiptValidation_X509_NAME_get_text_by_NID) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction009, 414, 250, 34))
#define ReceiptValidation_X509_STORE_add_cert_00600061 ((__ReceiptValidation_X509_STORE_add_cert) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction00C, 97, 125, 20))
#define ReceiptValidation_X509_STORE_free_001B0154 ((__ReceiptValidation_X509_STORE_free) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 27, 136, 16, ReceiptValidation_ObfuscationFunction00A, 340, 17, 16))
#define ReceiptValidation_X509_STORE_new_00600256 ((__ReceiptValidation_X509_STORE_new) ReceiptValidation_LookupFunction015(ReceiptValidation_ObfuscationFunction008, 96, 179, 16, ReceiptValidation_ObfuscationFunction006, 598, 234, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction003(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction003CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction003(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[495])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void ReceiptValidation_ObfuscationFunction004(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] - ReceiptValidation_p3); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction004CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction004(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[164])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction005(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction005CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction005(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[37])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void ReceiptValidation_ObfuscationFunction006(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = ReceiptValidation_p1[ReceiptValidation_i1] ^ (char) ReceiptValidation_p3; ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction006CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction006(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[107])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction007(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction007CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction007(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[208])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void ReceiptValidation_ObfuscationFunction008(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ ReceiptValidation_p3 ^ ReceiptValidation_p4); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction008CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction008(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[56])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction009(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction009CF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction009(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[495])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void ReceiptValidation_ObfuscationFunction00A(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 + ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00ACF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction00A(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[164])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00B(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00BCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        char *ReceiptValidation_tmp2 = ReceiptValidation_tmp1;
        ReceiptValidation_ObfuscationFunction00B(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        while(*ReceiptValidation_tmp2) { ReceiptValidation_tmp2++; }
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[37])(NULL, (const UInt8 *) ReceiptValidation_tmp1, (CFIndex) (ReceiptValidation_tmp2 - ReceiptValidation_tmp1), kCFStringEncodingUTF8, false);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void ReceiptValidation_ObfuscationFunction00C(const char *ReceiptValidation_p1, char *ReceiptValidation_p2, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        int ReceiptValidation_i1 = 0;
        while(ReceiptValidation_i1 < ReceiptValidation_p4) { ReceiptValidation_p2[ReceiptValidation_i1] = (char) (ReceiptValidation_p1[ReceiptValidation_i1] ^ (ReceiptValidation_p3 * ReceiptValidation_p4)); ReceiptValidation_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef ReceiptValidation_ObfuscationFunction00CCF(const char *ReceiptValidation_p1, int ReceiptValidation_p3, int ReceiptValidation_p4) {
        char ReceiptValidation_tmp1[608];
        ReceiptValidation_ObfuscationFunction00C(ReceiptValidation_p1, ReceiptValidation_tmp1, ReceiptValidation_p3, ReceiptValidation_p4);
        CFStringRef ReceiptValidation_str1 = ((__ReceiptValidation_CFStringCreateWithCString) ReceiptValidation_Pointers[164])(NULL, ReceiptValidation_tmp1, kCFStringEncodingUTF8);
        return ReceiptValidation_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *ReceiptValidation_LookupFunction015(ReceiptValidation_decrypt ReceiptValidation_func1, int ReceiptValidation_index1, int ReceiptValidation_val1, int ReceiptValidation_len1, ReceiptValidation_decrypt ReceiptValidation_func2, int ReceiptValidation_index2, int ReceiptValidation_val2, int ReceiptValidation_len2) {
        char ReceiptValidation_tmp1[608], ReceiptValidation_tmp2[608];
        // Load the library if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index1] == NULL) {
            ReceiptValidation_func1(ReceiptValidation_Strings[ReceiptValidation_index1], ReceiptValidation_tmp1, ReceiptValidation_val1, ReceiptValidation_len1);
            ReceiptValidation_Pointers[ReceiptValidation_index1] = ((__ReceiptValidation_dlopen) ReceiptValidation_Pointers[108])(ReceiptValidation_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (ReceiptValidation_Pointers[ReceiptValidation_index2] == NULL) {
            ReceiptValidation_func2(ReceiptValidation_Strings[ReceiptValidation_index2], ReceiptValidation_tmp2, ReceiptValidation_val2, ReceiptValidation_len2);
            ReceiptValidation_Pointers[ReceiptValidation_index2] = ((__ReceiptValidation_dlsym) ReceiptValidation_Pointers[605])(ReceiptValidation_Pointers[ReceiptValidation_index1], ReceiptValidation_tmp2);
        }
        return ReceiptValidation_Pointers[ReceiptValidation_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void ReceiptValidation_GetMainBundle016(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle");
        // Retrieve the main bundle
        ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_008C00E9();
        if (!ReceiptValidation_ctx->main_bundle) {
            // Dead code
            ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->main_bundle);
            ReceiptValidation_CFBundleUnloadExecutable_008C00A3((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        }
        // Global variables computation
        // Set to 541
        ReceiptValidation_BZKYWAYUGQBA = 541;
        // Set to 104
        ReceiptValidation_QZHZSDTCXRVO = 104;
        // Set to 303
        ReceiptValidation_JGNLWSNFMWVB = 303;
        // Set to 384
        ReceiptValidation_YXONPMRORYTN = 384;
        // Set to 149
        ReceiptValidation_THYJXLPRMQMR = 149;
        // Set to 282
        ReceiptValidation_BECRJHYNZMBT = 282;
        // Set to 145
        ReceiptValidation_TLAAETLOQTDB = 145;
        // Set to 509
        ReceiptValidation_MIICEDDWGAZW = 509;
    }
#else
#define ReceiptValidation_GetMainBundle016(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Retrieving main bundle"); \
ReceiptValidation_ctx->main_bundle = ReceiptValidation_CFBundleGetMainBundle_008C00E9(); \
if (!ReceiptValidation_ctx->main_bundle) { \
ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_CFBundleUnloadExecutable_008C00A3((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
} \
ReceiptValidation_BZKYWAYUGQBA = 541; \
ReceiptValidation_QZHZSDTCXRVO = 104; \
ReceiptValidation_JGNLWSNFMWVB = 303; \
ReceiptValidation_YXONPMRORYTN = 384; \
ReceiptValidation_THYJXLPRMQMR = 149; \
ReceiptValidation_BECRJHYNZMBT = 282; \
ReceiptValidation_TLAAETLOQTDB = 145; \
ReceiptValidation_MIICEDDWGAZW = 509; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifndef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt021(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1, ReceiptValidation_url2;
        CFReadStreamRef ReceiptValidation_stream;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[608];
        volatile int ReceiptValidation_code = 29; ReceiptValidation_code -= 5; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt");
        // Compute the path to the receipt
        ReceiptValidation_url1 = ReceiptValidation_BZKYWAYUGQBA_0216021D((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[599]), 211, 37);
        ReceiptValidation_url2 = ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_02160224(NULL, ReceiptValidation_str1, kCFURLPOSIXPathStyle, false, ReceiptValidation_url1);
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1);
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url1);
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_TLAAETLOQTDB_00DF0091(kCFAllocatorDefault, ReceiptValidation_url2);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_QZHZSDTCXRVO_008C0068(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0113004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_BECRJHYNZMBT_00DF011A(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00DF0151(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_THYJXLPRMQMR_008C0095(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_CFReadStreamClose_0216004E(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 104 to 232
        ReceiptValidation_QZHZSDTCXRVO -= 46; ReceiptValidation_QZHZSDTCXRVO *= 4;
        // From 303 to 425
        ReceiptValidation_JGNLWSNFMWVB -= 162; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;
        // From 384 to 82
        ReceiptValidation_YXONPMRORYTN += 108; ReceiptValidation_YXONPMRORYTN /= 6;
        // From 149 to 516
        ReceiptValidation_THYJXLPRMQMR -= 46; ReceiptValidation_THYJXLPRMQMR *= 5; ReceiptValidation_THYJXLPRMQMR += 1;
        // From 282 to 201
        ReceiptValidation_BECRJHYNZMBT += 120; ReceiptValidation_BECRJHYNZMBT /= 2;
        // From 509 to 132
        ReceiptValidation_MIICEDDWGAZW += 151; ReceiptValidation_MIICEDDWGAZW /= 5;
    ReceiptValidation_LoadReceipt021_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url2);
    }
#else
#define ReceiptValidation_LoadReceipt021(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1, ReceiptValidation_url2; \
CFReadStreamRef ReceiptValidation_stream; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[608]; \
volatile int ReceiptValidation_code = 29; ReceiptValidation_code -= 5; ReceiptValidation_code *= 7; ReceiptValidation_code += 5;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading receipt"); \
ReceiptValidation_url1 = ReceiptValidation_BZKYWAYUGQBA_0216021D((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[599]), 211, 37); \
ReceiptValidation_url2 = ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_02160224(NULL, ReceiptValidation_str1, kCFURLPOSIXPathStyle, false, ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url1); \
ReceiptValidation_stream = ReceiptValidation_TLAAETLOQTDB_00DF0091(kCFAllocatorDefault, ReceiptValidation_url2); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_QZHZSDTCXRVO_008C0068(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0113004A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_BECRJHYNZMBT_00DF011A(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_00DF0151(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_THYJXLPRMQMR_008C0095(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_CFReadStreamClose_0216004E(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_QZHZSDTCXRVO -= 46; ReceiptValidation_QZHZSDTCXRVO *= 4;  \
ReceiptValidation_JGNLWSNFMWVB -= 162; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;  \
ReceiptValidation_YXONPMRORYTN += 108; ReceiptValidation_YXONPMRORYTN /= 6;  \
ReceiptValidation_THYJXLPRMQMR -= 46; ReceiptValidation_THYJXLPRMQMR *= 5; ReceiptValidation_THYJXLPRMQMR += 1;  \
ReceiptValidation_BECRJHYNZMBT += 120; ReceiptValidation_BECRJHYNZMBT /= 2;  \
ReceiptValidation_MIICEDDWGAZW += 151; ReceiptValidation_MIICEDDWGAZW /= 5;  \
ReceiptValidation_LoadReceipt021_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_url2); \
}
#endif
#endif
    
#ifdef RECEIGEN_EXTERNAL_RECEIPT
#ifdef DEBUG
    inline static void ReceiptValidation_LoadReceipt021(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1;
        CFURLRef ReceiptValidation_url1 = NULL;
        CFReadStreamRef ReceiptValidation_stream = NULL;
        CFMutableDataRef ReceiptValidation_data;
        CFIndex ReceiptValidation_count;
        uint8_t ReceiptValidation_buffer[608];
        char ReceiptValidation_path[PATH_MAX];
        int ReceiptValidation_status;
        glob_t ReceiptValidation_glob_buffer;
        char *ReceiptValidation_expanded_path;
        volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[399]), 255, 16);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()));
        // Compute the path to the receipt
        if (!ReceiptValidation_MIICEDDWGAZW_021601FD(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D016A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail;
        }
        ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[253])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer);
        if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) {
            ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[211])(&ReceiptValidation_glob_buffer);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D016A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1);
            goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail;
        }
        // Get the globbed path
        ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0];
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path);
        ReceiptValidation_url1 = ReceiptValidation_JGNLWSNFMWVB_00DF012F(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[21])(ReceiptValidation_expanded_path), false);
        ((__ReceiptValidation_globfree) ReceiptValidation_Pointers[211])(&ReceiptValidation_glob_buffer);
        // Create a stream from the receipt file
        ReceiptValidation_stream = ReceiptValidation_TLAAETLOQTDB_00DF0091(kCFAllocatorDefault, ReceiptValidation_url1);
        if (ReceiptValidation_stream == NULL || !ReceiptValidation_QZHZSDTCXRVO_008C0068(ReceiptValidation_stream)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D016A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
            goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail;
        }
        // Create the data object that will contains receipt data
        ReceiptValidation_data = ReceiptValidation_BECRJHYNZMBT_00DF011A(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0216009D(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608);
            if (ReceiptValidation_count > 0) {
                ReceiptValidation_THYJXLPRMQMR_008C0095(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count);
            }
        } while (ReceiptValidation_count > 0);
        // Close the stream
        ReceiptValidation_CFReadStreamClose_008C01FA(ReceiptValidation_stream);
        if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_ctx->receipt_data);
        ReceiptValidation_ctx->receipt_data = ReceiptValidation_data;
        // Global variables computation
        // From 104 to 232
        ReceiptValidation_QZHZSDTCXRVO -= 46; ReceiptValidation_QZHZSDTCXRVO *= 4;
        // From 303 to 425
        ReceiptValidation_JGNLWSNFMWVB -= 162; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;
        // From 384 to 82
        ReceiptValidation_YXONPMRORYTN += 108; ReceiptValidation_YXONPMRORYTN /= 6;
        // From 149 to 516
        ReceiptValidation_THYJXLPRMQMR -= 46; ReceiptValidation_THYJXLPRMQMR *= 5; ReceiptValidation_THYJXLPRMQMR += 1;
        // From 282 to 201
        ReceiptValidation_BECRJHYNZMBT += 120; ReceiptValidation_BECRJHYNZMBT /= 2;
        // From 509 to 132
        ReceiptValidation_MIICEDDWGAZW += 151; ReceiptValidation_MIICEDDWGAZW /= 5;
    ReceiptValidation_LoadReceipt021_ReceiptValidation_bail:
        if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_stream);
        ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1);
        if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1);
    }
#else
#define ReceiptValidation_LoadReceipt021(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1; \
CFURLRef ReceiptValidation_url1 = NULL; \
CFReadStreamRef ReceiptValidation_stream = NULL; \
CFMutableDataRef ReceiptValidation_data; \
CFIndex ReceiptValidation_count; \
uint8_t ReceiptValidation_buffer[608]; \
char ReceiptValidation_path[PATH_MAX]; \
int ReceiptValidation_status; \
glob_t ReceiptValidation_glob_buffer; \
char *ReceiptValidation_expanded_path; \
volatile int ReceiptValidation_code = 143; ReceiptValidation_code -= 86; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[399]), 255, 16); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading external receipt at '%s'", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding())); \
if (!ReceiptValidation_MIICEDDWGAZW_021601FD(ReceiptValidation_str1, ReceiptValidation_path, PATH_MAX)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cannot convert receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D016A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ((__ReceiptValidation_glob) ReceiptValidation_Pointers[253])(ReceiptValidation_path, GLOB_TILDE | GLOB_ERR, NULL, &ReceiptValidation_glob_buffer); \
if (ReceiptValidation_status != 0 || ReceiptValidation_glob_buffer.gl_pathc != 1) { \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[211])(&ReceiptValidation_glob_buffer); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while globbing receipt path"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D016A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1); \
goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail; \
} \
ReceiptValidation_expanded_path = ReceiptValidation_glob_buffer.gl_pathv[0]; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt path resolved to '%s'", ReceiptValidation_expanded_path); \
ReceiptValidation_url1 = ReceiptValidation_JGNLWSNFMWVB_00DF012F(kCFAllocatorDefault, (const UInt8 *) ReceiptValidation_expanded_path, (CFIndex) ((__ReceiptValidation_strlen) ReceiptValidation_Pointers[21])(ReceiptValidation_expanded_path), false); \
((__ReceiptValidation_globfree) ReceiptValidation_Pointers[211])(&ReceiptValidation_glob_buffer); \
ReceiptValidation_stream = ReceiptValidation_TLAAETLOQTDB_00DF0091(kCFAllocatorDefault, ReceiptValidation_url1); \
if (ReceiptValidation_stream == NULL || !ReceiptValidation_QZHZSDTCXRVO_008C0068(ReceiptValidation_stream)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Error while opening receipt"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D016A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
goto ReceiptValidation_LoadReceipt021_ReceiptValidation_bail; \
} \
ReceiptValidation_data = ReceiptValidation_BECRJHYNZMBT_00DF011A(kCFAllocatorDefault, 0); \
do { \
ReceiptValidation_count = ReceiptValidation_CFReadStreamRead_0216009D(ReceiptValidation_stream, &ReceiptValidation_buffer[0], 608); \
if (ReceiptValidation_count > 0) { \
ReceiptValidation_THYJXLPRMQMR_008C0095(ReceiptValidation_data, ReceiptValidation_buffer, ReceiptValidation_count); \
} \
} while (ReceiptValidation_count > 0); \
ReceiptValidation_CFReadStreamClose_008C01FA(ReceiptValidation_stream); \
if (ReceiptValidation_ctx->receipt_data) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = ReceiptValidation_data; \
ReceiptValidation_QZHZSDTCXRVO -= 46; ReceiptValidation_QZHZSDTCXRVO *= 4;  \
ReceiptValidation_JGNLWSNFMWVB -= 162; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;  \
ReceiptValidation_YXONPMRORYTN += 108; ReceiptValidation_YXONPMRORYTN /= 6;  \
ReceiptValidation_THYJXLPRMQMR -= 46; ReceiptValidation_THYJXLPRMQMR *= 5; ReceiptValidation_THYJXLPRMQMR += 1;  \
ReceiptValidation_BECRJHYNZMBT += 120; ReceiptValidation_BECRJHYNZMBT /= 2;  \
ReceiptValidation_MIICEDDWGAZW += 151; ReceiptValidation_MIICEDDWGAZW /= 5;  \
ReceiptValidation_LoadReceipt021_ReceiptValidation_bail: \
if (ReceiptValidation_stream) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_stream);     \
ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_str1); \
if (ReceiptValidation_url1) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_url1); \
}
#endif
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void ReceiptValidation_GetGUID049(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        kern_return_t ReceiptValidation_kernResult;
        mach_port_t ReceiptValidation_master_port;
        CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL;
        io_iterator_t ReceiptValidation_iterator;
        io_object_t ReceiptValidation_service, ReceiptValidation_parent_service;
        char *ReceiptValidation_str1;
        CFStringRef ReceiptValidation_str2;
        ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[236]), 221, 16);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address");
        // Open a MACH port
        ReceiptValidation_kernResult = ReceiptValidation_JGNLWSNFMWVB_016F01A9(MACH_PORT_NULL, &ReceiptValidation_master_port);
        if (ReceiptValidation_kernResult != KERN_SUCCESS) {
            // Dead code
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2);
            goto ReceiptValidation_GetGUID049_ReceiptValidation_bail;
        }
        // Create a search for primary interface
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[386]), ReceiptValidation_str1_, 125, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_matching_dict = ReceiptValidation_YXONPMRORYTN_01CB0052(ReceiptValidation_master_port, 0, ReceiptValidation_str1);
        if (!ReceiptValidation_matching_dict) {
            // Dead code
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict);
            goto ReceiptValidation_GetGUID049_ReceiptValidation_bail;
        }
        // Perform the search
        ReceiptValidation_kernResult = ReceiptValidation_BECRJHYNZMBT_01AE00C9(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator);
        if (ReceiptValidation_kernResult != KERN_SUCCESS) {
            // Dead code
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict);
            goto ReceiptValidation_GetGUID049_ReceiptValidation_bail;
        }
        // Iterate over the result
        while((ReceiptValidation_service = ReceiptValidation_QZHZSDTCXRVO_01AE00E8(ReceiptValidation_iterator)) != 0) {
            ReceiptValidation_kernResult = ReceiptValidation_THYJXLPRMQMR_01CB0204(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service);
            if (ReceiptValidation_kernResult == KERN_SUCCESS) {
                if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_ctx->guid_data);
                ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_MIICEDDWGAZW_01CB0084(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0);
                ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_parent_service);
            }
            ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_iterator);
            ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_service);
        }
        // Global variables computation
        // From 541 to 344
        ReceiptValidation_BZKYWAYUGQBA += 491; ReceiptValidation_BZKYWAYUGQBA /= 3;
        // From 232 to 309
        ReceiptValidation_QZHZSDTCXRVO -= 129; ReceiptValidation_QZHZSDTCXRVO *= 3;
        // From 425 to 508
        ReceiptValidation_JGNLWSNFMWVB -= 256; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;
        // From 82 to 83
        ReceiptValidation_YXONPMRORYTN -= 55; ReceiptValidation_YXONPMRORYTN *= 3; ReceiptValidation_YXONPMRORYTN += 2;
        // From 516 to 22
        ReceiptValidation_THYJXLPRMQMR += 34; ReceiptValidation_THYJXLPRMQMR /= 25;
        // Set to 418
        ReceiptValidation_BECRJHYNZMBT = 418;
        // From 145 to 587
        ReceiptValidation_TLAAETLOQTDB -= 48; ReceiptValidation_TLAAETLOQTDB *= 6; ReceiptValidation_TLAAETLOQTDB += 5;
        // From 132 to 101
        ReceiptValidation_MIICEDDWGAZW += 70; ReceiptValidation_MIICEDDWGAZW /= 2;
    ReceiptValidation_GetGUID049_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2);
    }
#else
#define ReceiptValidation_GetGUID049(ReceiptValidation_ctx) { \
kern_return_t ReceiptValidation_kernResult; \
mach_port_t ReceiptValidation_master_port; \
CFMutableDictionaryRef ReceiptValidation_matching_dict = NULL; \
io_iterator_t ReceiptValidation_iterator; \
io_object_t ReceiptValidation_service, ReceiptValidation_parent_service; \
char *ReceiptValidation_str1; \
CFStringRef ReceiptValidation_str2; \
ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[236]), 221, 16);  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Getting MAC address"); \
ReceiptValidation_kernResult = ReceiptValidation_JGNLWSNFMWVB_016F01A9(MACH_PORT_NULL, &ReceiptValidation_master_port); \
if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2); \
goto ReceiptValidation_GetGUID049_ReceiptValidation_bail; \
} \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[386]), ReceiptValidation_str1_, 125, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_matching_dict = ReceiptValidation_YXONPMRORYTN_01CB0052(ReceiptValidation_master_port, 0, ReceiptValidation_str1); \
if (!ReceiptValidation_matching_dict) { \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict); \
goto ReceiptValidation_GetGUID049_ReceiptValidation_bail; \
} \
ReceiptValidation_kernResult = ReceiptValidation_BECRJHYNZMBT_01AE00C9(ReceiptValidation_master_port, ReceiptValidation_matching_dict, &ReceiptValidation_iterator); \
if (ReceiptValidation_kernResult != KERN_SUCCESS) { \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_matching_dict); \
goto ReceiptValidation_GetGUID049_ReceiptValidation_bail; \
} \
while((ReceiptValidation_service = ReceiptValidation_QZHZSDTCXRVO_01AE00E8(ReceiptValidation_iterator)) != 0) { \
ReceiptValidation_kernResult = ReceiptValidation_THYJXLPRMQMR_01CB0204(ReceiptValidation_service, kIOServicePlane, &ReceiptValidation_parent_service); \
if (ReceiptValidation_kernResult == KERN_SUCCESS) { \
if (ReceiptValidation_ctx->guid_data) ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_ctx->guid_data); \
ReceiptValidation_ctx->guid_data = (CFDataRef) ReceiptValidation_MIICEDDWGAZW_01CB0084(ReceiptValidation_parent_service, ReceiptValidation_str2, NULL, 0); \
ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_parent_service); \
} \
ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_iterator); \
ReceiptValidation_IOObjectRelease_016F0220(ReceiptValidation_service); \
} \
ReceiptValidation_BZKYWAYUGQBA += 491; ReceiptValidation_BZKYWAYUGQBA /= 3;  \
ReceiptValidation_QZHZSDTCXRVO -= 129; ReceiptValidation_QZHZSDTCXRVO *= 3;  \
ReceiptValidation_JGNLWSNFMWVB -= 256; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;  \
ReceiptValidation_YXONPMRORYTN -= 55; ReceiptValidation_YXONPMRORYTN *= 3; ReceiptValidation_YXONPMRORYTN += 2;  \
ReceiptValidation_THYJXLPRMQMR += 34; ReceiptValidation_THYJXLPRMQMR /= 25;  \
ReceiptValidation_BECRJHYNZMBT = 418; \
ReceiptValidation_TLAAETLOQTDB -= 48; ReceiptValidation_TLAAETLOQTDB *= 6; ReceiptValidation_TLAAETLOQTDB += 5;  \
ReceiptValidation_MIICEDDWGAZW += 70; ReceiptValidation_MIICEDDWGAZW /= 2;  \
ReceiptValidation_GetGUID049_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_str2); \
}
#endif
    
    
    // CodeBlock GetRootCA
#if MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA050(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        CFDictionaryRef ReceiptValidation_searchDict = NULL;
        char *ReceiptValidation_str1;
        CFTypeRef ReceiptValidation_str2 = NULL;
        CFIndex ReceiptValidation_idx;
        CFTypeRef ReceiptValidation_results = NULL;
        SecCertificateRef ReceiptValidation_certificate = NULL;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1;
        const void *ReceiptValidation_searchKeys[5];
        const void *ReceiptValidation_searchValues[5];
        volatile int ReceiptValidation_code = 129; ReceiptValidation_code -= 72; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[14]), ReceiptValidation_str1_, 180, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_MIICEDDWGAZW_00980065(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0113016A(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_02160194);
        // Create the criteria dictionary to find the Apple Root CA certificate
        ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[436]), 187, 16);
        ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0098025B;
        ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00980059;
        ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_0126021A;
        ReceiptValidation_searchValues[1] = ReceiptValidation_searchList;
        ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_009801EE;
        ReceiptValidation_searchValues[2] = ReceiptValidation_str2;
        ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00FB0031;
        ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01260108;
        ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00FB0062;
        ReceiptValidation_searchValues[4] = kCFBooleanTrue;
        ReceiptValidation_searchDict = ReceiptValidation_QZHZSDTCXRVO_008C0135(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0131, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00DF003A);
        while(ReceiptValidation_count2-- > 0) {
            ReceiptValidation_CFDictionaryAddValue_021600DE((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]);
        }
        // Perform the actual search
        ReceiptValidation_status = ReceiptValidation_THYJXLPRMQMR_01260016(ReceiptValidation_searchDict, &ReceiptValidation_results);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0113016A(ReceiptValidation_code);
            // Dead code
            // TODO
            goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_BECRJHYNZMBT_008C01A2((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) {
            ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_TLAAETLOQTDB_0216024B((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx);
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_BZKYWAYUGQBA_01260158(ReceiptValidation_certificate);
        }
        // Global variables computation
        // From 309 to 302
        ReceiptValidation_QZHZSDTCXRVO += 295; ReceiptValidation_QZHZSDTCXRVO /= 2;
        // From 508 to 293
        ReceiptValidation_JGNLWSNFMWVB += 371; ReceiptValidation_JGNLWSNFMWVB /= 3;
        // From 22 to 589
        ReceiptValidation_THYJXLPRMQMR -= 1; ReceiptValidation_THYJXLPRMQMR *= 28; ReceiptValidation_THYJXLPRMQMR += 1;
    ReceiptValidation_GetRootCA050_ReceiptValidation_bail:
        if (ReceiptValidation_str2) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str2);
        if (ReceiptValidation_results) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_results);
        if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_searchDict);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA050(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
CFDictionaryRef ReceiptValidation_searchDict = NULL; \
char *ReceiptValidation_str1; \
CFTypeRef ReceiptValidation_str2 = NULL; \
CFIndex ReceiptValidation_idx; \
CFTypeRef ReceiptValidation_results = NULL; \
SecCertificateRef ReceiptValidation_certificate = NULL; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 2; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 4; ReceiptValidation_count2 += 1;  \
const void *ReceiptValidation_searchKeys[5]; \
const void *ReceiptValidation_searchValues[5]; \
volatile int ReceiptValidation_code = 129; ReceiptValidation_code -= 72; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[14]), ReceiptValidation_str1_, 180, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_MIICEDDWGAZW_00980065(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0113016A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_02160194); \
ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction00BCF((ReceiptValidation_Strings[436]), 187, 16); \
ReceiptValidation_searchKeys[0] = *ReceiptValidation_kSecClass_0098025B; \
ReceiptValidation_searchValues[0] = *ReceiptValidation_kSecClassCertificate_00980059; \
ReceiptValidation_searchKeys[1] = *ReceiptValidation_kSecMatchSearchList_0126021A; \
ReceiptValidation_searchValues[1] = ReceiptValidation_searchList; \
ReceiptValidation_searchKeys[2] = *ReceiptValidation_kSecMatchSubjectContains_009801EE; \
ReceiptValidation_searchValues[2] = ReceiptValidation_str2; \
ReceiptValidation_searchKeys[3] = *ReceiptValidation_kSecMatchLimit_00FB0031; \
ReceiptValidation_searchValues[3] = *ReceiptValidation_kSecMatchLimitAll_01260108; \
ReceiptValidation_searchKeys[4] = *ReceiptValidation_kSecReturnRef_00FB0062; \
ReceiptValidation_searchValues[4] = kCFBooleanTrue; \
ReceiptValidation_searchDict = ReceiptValidation_QZHZSDTCXRVO_008C0135(kCFAllocatorDefault, ReceiptValidation_count2, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0131, ReceiptValidation_kCFTypeDictionaryValueCallBacks_00DF003A); \
while(ReceiptValidation_count2-- > 0) { \
ReceiptValidation_CFDictionaryAddValue_021600DE((CFMutableDictionaryRef) ReceiptValidation_searchDict, ReceiptValidation_searchKeys[ReceiptValidation_count2], ReceiptValidation_searchValues[ReceiptValidation_count2]); \
} \
ReceiptValidation_status = ReceiptValidation_THYJXLPRMQMR_01260016(ReceiptValidation_searchDict, &ReceiptValidation_results); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0113016A(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail; \
} \
for(ReceiptValidation_idx = 0; ReceiptValidation_idx < ReceiptValidation_BECRJHYNZMBT_008C01A2((CFArrayRef) ReceiptValidation_results); ReceiptValidation_idx++) { \
ReceiptValidation_certificate = (SecCertificateRef) ReceiptValidation_TLAAETLOQTDB_0216024B((CFArrayRef) ReceiptValidation_results, ReceiptValidation_idx); \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_BZKYWAYUGQBA_01260158(ReceiptValidation_certificate); \
} \
ReceiptValidation_QZHZSDTCXRVO += 295; ReceiptValidation_QZHZSDTCXRVO /= 2;  \
ReceiptValidation_JGNLWSNFMWVB += 371; ReceiptValidation_JGNLWSNFMWVB /= 3;  \
ReceiptValidation_THYJXLPRMQMR -= 1; ReceiptValidation_THYJXLPRMQMR *= 28; ReceiptValidation_THYJXLPRMQMR += 1;  \
ReceiptValidation_GetRootCA050_ReceiptValidation_bail: \
if (ReceiptValidation_str2) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str2); \
if (ReceiptValidation_results) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_results); \
if (ReceiptValidation_searchDict) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_searchDict); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_keychain); \
}
#endif
#endif
    
#if MAC_OS_X_VERSION_MIN_REQUIRED == MAC_OS_X_VERSION_10_6
#ifdef DEBUG
    inline static void ReceiptValidation_GetRootCA050(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        OSStatus ReceiptValidation_status;
        SecKeychainRef ReceiptValidation_keychain = NULL;
        CFTypeRef ReceiptValidation_searchList = NULL;
        char *ReceiptValidation_str1, *ReceiptValidation_str2;
        SecKeychainAttributeList ReceiptValidation_attributeList;
        SecKeychainAttribute ReceiptValidation_attribute;
        SecKeychainSearchRef ReceiptValidation_searchRef = NULL;
        SecKeychainItemRef ReceiptValidation_itemRef = nil;
        volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;
        volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5;
        volatile CFIndex ReceiptValidation_count3 = 4; ReceiptValidation_count3 -= 2; ReceiptValidation_count3 *= 5; ReceiptValidation_count3 += 3;
        volatile int ReceiptValidation_code = 52; ReceiptValidation_code -= 18; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA");
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[400]), ReceiptValidation_str1_, 224, 66);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        ReceiptValidation_status = ReceiptValidation_MIICEDDWGAZW_00980065(ReceiptValidation_str1, &ReceiptValidation_keychain);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_011300AD(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail;
        }
        // Create a search list within the system Keychain
        ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0216008D);
        // Create the criteria dictionary to find the Apple Root CA certificate
        char ReceiptValidation_str2_[608];
        ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[436]), ReceiptValidation_str2_, 187, 16);
        ReceiptValidation_str2 = ReceiptValidation_str2_;
        ReceiptValidation_attributeList.count = 1;
        ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute;
        ReceiptValidation_attribute.tag = kSecLabelItemAttr;
        ReceiptValidation_attribute.data = ReceiptValidation_str2;
        ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3;
        ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_012601CF(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef);
        if (ReceiptValidation_status != errSecSuccess) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_011300AD(ReceiptValidation_code);
            // Dead code
            goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail;
        }
        // Iterate over the results and copy the certificate data
        while(ReceiptValidation_YXONPMRORYTN_01260053(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) {
            if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = ReceiptValidation_BZKYWAYUGQBA_01260158((SecCertificateRef) ReceiptValidation_itemRef);
        }
        // Global variables computation
        // From 309 to 302
        ReceiptValidation_QZHZSDTCXRVO += 295; ReceiptValidation_QZHZSDTCXRVO /= 2;
        // From 508 to 293
        ReceiptValidation_JGNLWSNFMWVB += 371; ReceiptValidation_JGNLWSNFMWVB /= 3;
        // From 22 to 589
        ReceiptValidation_THYJXLPRMQMR -= 1; ReceiptValidation_THYJXLPRMQMR *= 28; ReceiptValidation_THYJXLPRMQMR += 1;
    ReceiptValidation_GetRootCA050_ReceiptValidation_bail:
        if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_itemRef);
        if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_searchRef);
        if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_searchList);
        if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_keychain);
    }
#else
#define ReceiptValidation_GetRootCA050(ReceiptValidation_ctx) { \
OSStatus ReceiptValidation_status; \
SecKeychainRef ReceiptValidation_keychain = NULL; \
CFTypeRef ReceiptValidation_searchList = NULL; \
char *ReceiptValidation_str1, *ReceiptValidation_str2; \
SecKeychainAttributeList ReceiptValidation_attributeList; \
SecKeychainAttribute ReceiptValidation_attribute; \
SecKeychainSearchRef ReceiptValidation_searchRef = NULL; \
SecKeychainItemRef ReceiptValidation_itemRef = nil; \
volatile CFIndex ReceiptValidation_count1 = 1; ReceiptValidation_count1 /= 1;  \
volatile CFIndex ReceiptValidation_count2 = 1; ReceiptValidation_count2 -= 1; ReceiptValidation_count2 *= 7; ReceiptValidation_count2 += 5;  \
volatile CFIndex ReceiptValidation_count3 = 4; ReceiptValidation_count3 -= 2; ReceiptValidation_count3 *= 5; ReceiptValidation_count3 += 3;  \
volatile int ReceiptValidation_code = 52; ReceiptValidation_code -= 18; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Loading Apple Root CA"); \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction009((ReceiptValidation_Strings[400]), ReceiptValidation_str1_, 224, 66); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
ReceiptValidation_status = ReceiptValidation_MIICEDDWGAZW_00980065(ReceiptValidation_str1, &ReceiptValidation_keychain); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_011300AD(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail; \
} \
ReceiptValidation_searchList = CFArrayCreate(kCFAllocatorDefault, (const void **)&ReceiptValidation_keychain, ReceiptValidation_count1, ReceiptValidation_kCFTypeArrayCallBacks_0216008D); \
char ReceiptValidation_str2_[608]; \
ReceiptValidation_ObfuscationFunction00B((ReceiptValidation_Strings[436]), ReceiptValidation_str2_, 187, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
ReceiptValidation_attributeList.count = 1; \
ReceiptValidation_attributeList.attr  = &ReceiptValidation_attribute; \
ReceiptValidation_attribute.tag = kSecLabelItemAttr; \
ReceiptValidation_attribute.data = ReceiptValidation_str2; \
ReceiptValidation_attribute.length = (UInt32) ReceiptValidation_count3; \
ReceiptValidation_status = ReceiptValidation_SecKeychainSearchCreateFromAttributes_012601CF(ReceiptValidation_searchList, kSecCertificateItemClass, &ReceiptValidation_attributeList, &ReceiptValidation_searchRef); \
if (ReceiptValidation_status != errSecSuccess) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_011300AD(ReceiptValidation_code); \
goto ReceiptValidation_GetRootCA050_ReceiptValidation_bail; \
} \
while(ReceiptValidation_YXONPMRORYTN_01260053(ReceiptValidation_searchRef, &ReceiptValidation_itemRef) == noErr) { \
if (ReceiptValidation_ctx->ca_data) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = ReceiptValidation_BZKYWAYUGQBA_01260158((SecCertificateRef) ReceiptValidation_itemRef); \
} \
ReceiptValidation_QZHZSDTCXRVO += 295; ReceiptValidation_QZHZSDTCXRVO /= 2;  \
ReceiptValidation_JGNLWSNFMWVB += 371; ReceiptValidation_JGNLWSNFMWVB /= 3;  \
ReceiptValidation_THYJXLPRMQMR -= 1; ReceiptValidation_THYJXLPRMQMR *= 28; ReceiptValidation_THYJXLPRMQMR += 1;  \
ReceiptValidation_GetRootCA050_ReceiptValidation_bail: \
if (ReceiptValidation_itemRef) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_itemRef); \
if (ReceiptValidation_searchRef) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_searchRef); \
if (ReceiptValidation_searchList) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_searchList); \
if (ReceiptValidation_keychain) ReceiptValidation_CFRelease_00DF00F2(ReceiptValidation_keychain); \
}
#endif
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[557]), 241, 32);
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier");
        volatile int ReceiptValidation_code = 118; ReceiptValidation_code -= 61; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_THYJXLPRMQMR_008C024D((CFBundleRef) ReceiptValidation_ctx->main_bundle);
        if (ReceiptValidation_QZHZSDTCXRVO_0216012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str2);
        }
        // Global variables computation
        // From 293 to 302
        ReceiptValidation_JGNLWSNFMWVB -= 193; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;
        // From 83 to 293
        ReceiptValidation_YXONPMRORYTN -= 25; ReceiptValidation_YXONPMRORYTN *= 5; ReceiptValidation_YXONPMRORYTN += 3;
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier05B(ReceiptValidation_ctx) { \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[557]), 241, 32); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle identifier"); \
volatile int ReceiptValidation_code = 118; ReceiptValidation_code -= 61; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_THYJXLPRMQMR_008C024D((CFBundleRef) ReceiptValidation_ctx->main_bundle); \
if (ReceiptValidation_QZHZSDTCXRVO_0216012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D004A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str2); \
} \
ReceiptValidation_JGNLWSNFMWVB -= 193; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 2;  \
ReceiptValidation_YXONPMRORYTN -= 25; ReceiptValidation_YXONPMRORYTN *= 5; ReceiptValidation_YXONPMRORYTN += 3;  \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void ReceiptValidation_CheckBundleVersion061(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version");
        volatile int ReceiptValidation_code = 95; ReceiptValidation_code -= 38; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[355]), 115, 16);
        CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[250]), 3, 35);
        CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_00DF0125((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2);
        if (ReceiptValidation_JGNLWSNFMWVB_008C012E(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2);
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2);
        }
        // Global variables computation
        // From 344 to 276
        ReceiptValidation_BZKYWAYUGQBA += 208; ReceiptValidation_BZKYWAYUGQBA /= 2;
        // From 302 to 577
        ReceiptValidation_QZHZSDTCXRVO -= 110; ReceiptValidation_QZHZSDTCXRVO *= 3; ReceiptValidation_QZHZSDTCXRVO += 1;
        // From 302 to 469
        ReceiptValidation_JGNLWSNFMWVB -= 146; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;
        // From 293 to 291
        ReceiptValidation_YXONPMRORYTN += 289; ReceiptValidation_YXONPMRORYTN /= 2;
        // From 589 to 43
        ReceiptValidation_THYJXLPRMQMR += 56; ReceiptValidation_THYJXLPRMQMR /= 15;
        // Set to 12
        ReceiptValidation_BECRJHYNZMBT = 12;
        // From 587 to 341
        ReceiptValidation_TLAAETLOQTDB += 436; ReceiptValidation_TLAAETLOQTDB /= 3;
        // From 101 to 81
        ReceiptValidation_MIICEDDWGAZW += 61; ReceiptValidation_MIICEDDWGAZW /= 2;
        ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2);
        ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion061(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking bundle version"); \
volatile int ReceiptValidation_code = 95; ReceiptValidation_code -= 38; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[355]), 115, 16); \
CFStringRef ReceiptValidation_str2 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[250]), 3, 35); \
CFStringRef ReceiptValidation_str3 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_00DF0125((CFBundleRef) ReceiptValidation_ctx->main_bundle, ReceiptValidation_str2); \
if (ReceiptValidation_JGNLWSNFMWVB_008C012E(ReceiptValidation_str1, ReceiptValidation_str3, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str3, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D004A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2); \
} \
ReceiptValidation_BZKYWAYUGQBA += 208; ReceiptValidation_BZKYWAYUGQBA /= 2;  \
ReceiptValidation_QZHZSDTCXRVO -= 110; ReceiptValidation_QZHZSDTCXRVO *= 3; ReceiptValidation_QZHZSDTCXRVO += 1;  \
ReceiptValidation_JGNLWSNFMWVB -= 146; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;  \
ReceiptValidation_YXONPMRORYTN += 289; ReceiptValidation_YXONPMRORYTN /= 2;  \
ReceiptValidation_THYJXLPRMQMR += 56; ReceiptValidation_THYJXLPRMQMR /= 15;  \
ReceiptValidation_BECRJHYNZMBT = 12; \
ReceiptValidation_TLAAETLOQTDB += 436; ReceiptValidation_TLAAETLOQTDB /= 3;  \
ReceiptValidation_MIICEDDWGAZW += 61; ReceiptValidation_MIICEDDWGAZW /= 2;  \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str2); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void ReceiptValidation_GetReceiptInformation063(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        ReceiptValidation_ParsingContext ReceiptValidation_receipt_context;
        ReceiptValidation_ParsingContext *ReceiptValidation_current_context;
        CFNumberRef ReceiptValidation_key;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2;
        CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2;
        int ReceiptValidation_type;
        int ReceiptValidation_xclass;
        long ReceiptValidation_length;
        CFDateFormatterRef ReceiptValidation_formatter = NULL;
        CFTimeZoneRef ReceiptValidation_tz = NULL;
        BIO *ReceiptValidation_bio_p7;
        PKCS7 *ReceiptValidation_pkcs7;
        ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content;
        ASN1_INTEGER *ReceiptValidation_value;
        const unsigned char *ReceiptValidation_seq_end;
        long ReceiptValidation_attr_type;
        long ReceiptValidation_attr_version;
        int ReceiptValidation_str_type;
        long ReceiptValidation_str_length;
        const unsigned char *ReceiptValidation_str_ptr;
        volatile int ReceiptValidation_code = 76; ReceiptValidation_code -= 33; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;
        ReceiptValidation_ParsingContext ReceiptValidation_inapp_context;
        long ReceiptValidation_number;
        int ReceiptValidation_num_type;
        long ReceiptValidation_num_length;
        const unsigned char *ReceiptValidation_num_ptr;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_001B00A8());
        ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BZKYWAYUGQBA_00DF0114((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_QZHZSDTCXRVO_00DF0241((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0185016C(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_ctx->receipt_data = NULL;
            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        ReceiptValidation_formatter = ReceiptValidation_TLAAETLOQTDB_008C0155(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[301]), 124, 33);
        ReceiptValidation_THYJXLPRMQMR_008C002B(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1);
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1);
        ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_008C022C(NULL, 0.0);
        ReceiptValidation_CFDateFormatterSetProperty_008C01B3(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_008C01F5, ReceiptValidation_tz);
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_tz);
        // Initial context
        ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data;
        ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data;
        ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length;
        ReceiptValidation_receipt_context.parent = NULL;
        ReceiptValidation_receipt_context.dictionary = NULL;
        ReceiptValidation_current_context = &ReceiptValidation_receipt_context;
        while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
            if (!ReceiptValidation_current_context->dictionary) {
                // Create the target dictionary
                ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_008C013C(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0131, ReceiptValidation_kCFTypeDictionaryValueCallBacks_008C003A);
                // Decode payload from ASN.1
                ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SET) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
            }
            // Iterate over attributes
            while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) {
                // Parse attribute sequence
                ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_SEQUENCE) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length;
                ReceiptValidation_attr_type = 0;
                ReceiptValidation_attr_version = 0;
                // Parse the attribute type
                ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value);
                // Parse the attribute version
                ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_INTEGER) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length);
                ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value);
                ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value);
                // Check the attribute value
                ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr);
                if (ReceiptValidation_type != V_ASN1_OCTET_STRING) {
                    __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                    ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                    goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                }
                ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2));
                ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1);
                ReceiptValidation_value1 = NULL;
                ReceiptValidation_value2 = NULL;
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type);
                switch (ReceiptValidation_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[208])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false);
                        ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_008C002E(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_ReceiptAttributeTypeExpirationDate:
                    case ReceiptValidation_InAppAttributeTypeCancellationDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        ReceiptValidation_str_type = 0;
                        ReceiptValidation_str_length = 0;
                        ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr);
                        if (ReceiptValidation_str_type != V_ASN1_IA5STRING) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[208])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false);
                        ReceiptValidation_value1 = ReceiptValidation_MIICEDDWGAZW_02160051(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                    case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId:
                    {
                        ReceiptValidation_num_type = 0;
                        ReceiptValidation_num_length = 0;
                        ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr);
                        if (ReceiptValidation_num_type != V_ASN1_INTEGER) {
                            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                            ReceiptValidation_exit_0075004A(ReceiptValidation_code);
                            goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail;
                        }
                        ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length);
                        ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value);
                        ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value);
                        ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberLongType, &ReceiptValidation_number);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                    {
                        ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_008C002E(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length);
                        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_QZHZSDTCXRVO_00DF0241((CFDataRef) ReceiptValidation_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case ReceiptValidation_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr;
                        ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length;
                        ReceiptValidation_inapp_context.dictionary = NULL;
                        ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context;
                        ReceiptValidation_current_context = &ReceiptValidation_inapp_context;
                        goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key;
                    }
                    default:
                        break;
                }
                if (ReceiptValidation_value1) {
                    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                    ReceiptValidation_JGNLWSNFMWVB_008C01D5((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1);
                }
                if (ReceiptValidation_value2) {
                    ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key2);
                    ReceiptValidation_JGNLWSNFMWVB_008C01D5((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2);
                    ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
                    ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value2);
                }
                // Move past the attribute
                ReceiptValidation_current_context->ptr += ReceiptValidation_length;
            }
        ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key:
            // If the current context is a new one, continue parsing
            if (!ReceiptValidation_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (ReceiptValidation_current_context->parent) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase");
                ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase;
                ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key1);
                ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_00DF0165((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key);
                if (!ReceiptValidation_value1) {
                    ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_008C01D7(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_008C0104);
                    ReceiptValidation_CFDictionarySetValue_008C01AA((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1);
                    ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1);
                }
                ReceiptValidation_YXONPMRORYTN_00DF0123((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_current_context->dictionary);
                ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
                // Switch to parent context
                ReceiptValidation_current_context = ReceiptValidation_current_context->parent;
                // Move past the child context
                ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end;
            }
        }
        if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_ctx->receipt_dict);
        ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary;
        // Global variables computation
        // From 276 to 312
        ReceiptValidation_BZKYWAYUGQBA -= 172; ReceiptValidation_BZKYWAYUGQBA *= 3;
        // Set to 72
        ReceiptValidation_MIICEDDWGAZW = 72;
    ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail:
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_018501ED(ReceiptValidation_pkcs7);
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_018501DE(ReceiptValidation_bio_p7);
        if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_formatter);
    }
#else
#define ReceiptValidation_GetReceiptInformation063(ReceiptValidation_ctx) { \
ReceiptValidation_ParsingContext ReceiptValidation_receipt_context; \
ReceiptValidation_ParsingContext *ReceiptValidation_current_context; \
CFNumberRef ReceiptValidation_key; \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_key1, ReceiptValidation_key2; \
CFTypeRef ReceiptValidation_value1, ReceiptValidation_value2; \
int ReceiptValidation_type; \
int ReceiptValidation_xclass; \
long ReceiptValidation_length; \
CFDateFormatterRef ReceiptValidation_formatter = NULL; \
CFTimeZoneRef ReceiptValidation_tz = NULL; \
BIO *ReceiptValidation_bio_p7; \
PKCS7 *ReceiptValidation_pkcs7; \
ASN1_OCTET_STRING *ReceiptValidation_contentReceiptValidation_content; \
ASN1_INTEGER *ReceiptValidation_value; \
const unsigned char *ReceiptValidation_seq_end; \
long ReceiptValidation_attr_type; \
long ReceiptValidation_attr_version; \
int ReceiptValidation_str_type; \
long ReceiptValidation_str_length; \
const unsigned char *ReceiptValidation_str_ptr; \
volatile int ReceiptValidation_code = 76; ReceiptValidation_code -= 33; ReceiptValidation_code *= 4; ReceiptValidation_code += 1;  \
ReceiptValidation_ParsingContext ReceiptValidation_inapp_context; \
long ReceiptValidation_number; \
int ReceiptValidation_num_type; \
long ReceiptValidation_num_length; \
const unsigned char *ReceiptValidation_num_ptr; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_001B00A8()); \
ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_p7, (void *) ReceiptValidation_BZKYWAYUGQBA_00DF0114((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_QZHZSDTCXRVO_00DF0241((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_0185016C(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_data = NULL; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_formatter = ReceiptValidation_TLAAETLOQTDB_008C0155(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
ReceiptValidation_value1 = ReceiptValidation_ObfuscationFunction005CF((ReceiptValidation_Strings[301]), 124, 33); \
ReceiptValidation_THYJXLPRMQMR_008C002B(ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value1); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1); \
ReceiptValidation_tz = ReceiptValidation_CFTimeZoneCreateWithTimeIntervalFromGMT_008C022C(NULL, 0.0); \
ReceiptValidation_CFDateFormatterSetProperty_008C01B3(ReceiptValidation_formatter, *ReceiptValidation_kCFDateFormatterTimeZone_008C01F5, ReceiptValidation_tz); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_tz); \
ReceiptValidation_contentReceiptValidation_content = ReceiptValidation_pkcs7->d.sign->contents->d.data; \
ReceiptValidation_receipt_context.ptr = ReceiptValidation_contentReceiptValidation_content->data; \
ReceiptValidation_receipt_context.end = ReceiptValidation_receipt_context.ptr + ReceiptValidation_contentReceiptValidation_content->length; \
ReceiptValidation_receipt_context.parent = NULL; \
ReceiptValidation_receipt_context.dictionary = NULL; \
ReceiptValidation_current_context = &ReceiptValidation_receipt_context; \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
if (!ReceiptValidation_current_context->dictionary) { \
ReceiptValidation_current_context->dictionary = ReceiptValidation_CFDictionaryCreateMutable_008C013C(kCFAllocatorDefault, (CFIndex) 608, ReceiptValidation_kCFTypeDictionaryKeyCallBacks_008C0131, ReceiptValidation_kCFTypeDictionaryValueCallBacks_008C003A); \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SET) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
} \
while(ReceiptValidation_current_context->ptr < ReceiptValidation_current_context->end) { \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_SEQUENCE) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_seq_end = ReceiptValidation_current_context->ptr + ReceiptValidation_length; \
ReceiptValidation_attr_type = 0; \
ReceiptValidation_attr_version = 0; \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_type = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_current_context->ptr, ReceiptValidation_length); \
ReceiptValidation_attr_version = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value); \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_current_context->ptr, &ReceiptValidation_length, &ReceiptValidation_type, &ReceiptValidation_xclass, ReceiptValidation_current_context->end - ReceiptValidation_current_context->ptr); \
if (ReceiptValidation_type != V_ASN1_OCTET_STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_key1 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2)); \
ReceiptValidation_key2 = (ReceiptValidation_ReceiptAttributeType) (ReceiptValidation_StoreNone + (ReceiptValidation_attr_type << 2) + 1); \
ReceiptValidation_value1 = NULL; \
ReceiptValidation_value2 = NULL; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Found attribute %s%ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type); \
switch (ReceiptValidation_attr_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_ReceiptAttributeTypeOriginalApplicationVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_UTF8STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value1 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[208])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingUTF8, false); \
ReceiptValidation_value2 = ReceiptValidation_CFDataCreate_008C002E(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value1, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeExpirationDate: \
case ReceiptValidation_InAppAttributeTypeCancellationDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
ReceiptValidation_str_type = 0; \
ReceiptValidation_str_length = 0; \
ReceiptValidation_str_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_str_ptr, &ReceiptValidation_str_length, &ReceiptValidation_str_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_str_ptr); \
if (ReceiptValidation_str_type != V_ASN1_IA5STRING) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value2 = ((__ReceiptValidation_CFStringCreateWithBytes) ReceiptValidation_Pointers[208])(NULL, (const UInt8 *) ReceiptValidation_str_ptr, (CFIndex) ReceiptValidation_str_length, kCFStringEncodingASCII, false); \
ReceiptValidation_value1 = ReceiptValidation_MIICEDDWGAZW_02160051(NULL, ReceiptValidation_formatter, (CFStringRef) ReceiptValidation_value2, NULL); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %s", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, CFStringGetCStringPtr((CFStringRef) ReceiptValidation_value2, CFStringGetSystemEncoding())); \
break; \
} \
case ReceiptValidation_InAppAttributeTypeQuantity: \
case ReceiptValidation_InAppAttributeTypeWebOrderLineItemId: \
{ \
ReceiptValidation_num_type = 0; \
ReceiptValidation_num_length = 0; \
ReceiptValidation_num_ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_ASN1_get_object_001B001A(&ReceiptValidation_num_ptr, &ReceiptValidation_num_length, &ReceiptValidation_num_type, &ReceiptValidation_xclass, ReceiptValidation_seq_end - ReceiptValidation_num_ptr); \
if (ReceiptValidation_num_type != V_ASN1_INTEGER) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075004A(ReceiptValidation_code); \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail; \
} \
ReceiptValidation_value = ReceiptValidation_c2i_ASN1_INTEGER_01850243(NULL, &ReceiptValidation_num_ptr, ReceiptValidation_num_length); \
ReceiptValidation_number = ReceiptValidation_ASN1_INTEGER_get_0185003F(ReceiptValidation_value); \
ReceiptValidation_ASN1_INTEGER_free_01850055(ReceiptValidation_value); \
ReceiptValidation_value1 = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberLongType, &ReceiptValidation_number); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => %ld", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_number); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
{ \
ReceiptValidation_value1 = ReceiptValidation_CFDataCreate_008C002E(NULL, (const UInt8 *) ReceiptValidation_current_context->ptr, (CFIndex) ReceiptValidation_length); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt -       attribute %s%ld => [%lu bytes]", ReceiptValidation_current_context->parent ? "--- " : "- ", ReceiptValidation_attr_type, ReceiptValidation_QZHZSDTCXRVO_00DF0241((CFDataRef) ReceiptValidation_value1)); \
break; \
} \
case ReceiptValidation_ReceiptAttributeTypeInAppPurchase: \
{ \
ReceiptValidation_inapp_context.ptr = ReceiptValidation_current_context->ptr; \
ReceiptValidation_inapp_context.end = ReceiptValidation_inapp_context.ptr + ReceiptValidation_length; \
ReceiptValidation_inapp_context.dictionary = NULL; \
ReceiptValidation_inapp_context.parent = ReceiptValidation_current_context; \
ReceiptValidation_current_context = &ReceiptValidation_inapp_context; \
goto ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key; \
} \
default: \
break; \
} \
if (ReceiptValidation_value1) { \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_JGNLWSNFMWVB_008C01D5((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1); \
} \
if (ReceiptValidation_value2) { \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key2); \
ReceiptValidation_JGNLWSNFMWVB_008C01D5((CFMutableDictionaryRef) ReceiptValidation_current_context->dictionary, ReceiptValidation_key, ReceiptValidation_value2); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value2); \
} \
ReceiptValidation_current_context->ptr += ReceiptValidation_length; \
} \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_key: \
if (!ReceiptValidation_current_context->dictionary) { \
continue; \
} \
if (ReceiptValidation_current_context->parent) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Parsing receipt - Add an InApp purchase"); \
ReceiptValidation_key1 = ReceiptValidation_StoreReceiptAttributeTypeInAppPurchase; \
ReceiptValidation_key = ReceiptValidation_CFNumberCreate_00DF01F1(NULL, kCFNumberIntType, &ReceiptValidation_key1); \
ReceiptValidation_value1 = ReceiptValidation_CFDictionaryGetValue_00DF0165((CFDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key); \
if (!ReceiptValidation_value1) { \
ReceiptValidation_value1 = ReceiptValidation_CFArrayCreateMutable_008C01D7(kCFAllocatorDefault, 0, ReceiptValidation_kCFTypeArrayCallBacks_008C0104); \
ReceiptValidation_CFDictionarySetValue_008C01AA((CFMutableDictionaryRef) ReceiptValidation_current_context->parent->dictionary, ReceiptValidation_key, ReceiptValidation_value1); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_value1); \
} \
ReceiptValidation_YXONPMRORYTN_00DF0123((CFMutableArrayRef) ReceiptValidation_value1, ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_current_context->dictionary); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
ReceiptValidation_current_context = ReceiptValidation_current_context->parent; \
ReceiptValidation_current_context->ptr = ReceiptValidation_inapp_context.end; \
} \
} \
if (ReceiptValidation_ctx->receipt_dict) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = ReceiptValidation_receipt_context.dictionary; \
ReceiptValidation_BZKYWAYUGQBA -= 172; ReceiptValidation_BZKYWAYUGQBA *= 3;  \
ReceiptValidation_MIICEDDWGAZW = 72; \
ReceiptValidation_GetReceiptInformation063_ReceiptValidation_bail: \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_018501ED(ReceiptValidation_pkcs7); \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_018501DE(ReceiptValidation_bio_p7); \
if (ReceiptValidation_formatter) ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature069(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        BIO *ReceiptValidation_bio_p7 = NULL;
        PKCS7 *ReceiptValidation_pkcs7 = NULL;
        STACK_OF(X509) *ReceiptValidation_certificates = NULL;
        X509 *ReceiptValidation_certificate = NULL;
        int ReceiptValidation_count, ReceiptValidation_index1;
        unsigned int ReceiptValidation_index2;
        ASN1_OBJECT *ReceiptValidation_oid = NULL;
        char *ReceiptValidation_str1;
        char *ReceiptValidation_str2;
        char *ReceiptValidation_str3;
        char *ReceiptValidation_str4;
        char *ReceiptValidation_str5;
        int ReceiptValidation_verify, ReceiptValidation_status;
        BIO *ReceiptValidation_bio_apple = NULL;
        X509 *ReceiptValidation_apple = NULL;
        X509_STORE *ReceiptValidation_store = NULL;
        volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature");
        // Put the receipt data into a memory buffer
        ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_0060019C());
        ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MIICEDDWGAZW_008C0048((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_BZKYWAYUGQBA_02160138((CFDataRef) ReceiptValidation_ctx->receipt_data));
        ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_001B0097(ReceiptValidation_bio_p7, NULL);
        if (!ReceiptValidation_pkcs7) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            ReceiptValidation_ctx->receipt_dict = NULL;
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        ReceiptValidation_OpenSSL_add_all_digests_01850175();
        // If the Apple Root CA certificate has been loaded, then check the receipt against it.
        if (ReceiptValidation_ctx->ca_data) {
            ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_0060019C());
            ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_apple, (void *) ReceiptValidation_MIICEDDWGAZW_008C0048((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_BZKYWAYUGQBA_02160138((CFDataRef) ReceiptValidation_ctx->ca_data));
            ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_001B0242(ReceiptValidation_bio_apple, NULL);
            if (!ReceiptValidation_apple) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0075016A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            ReceiptValidation_store = ReceiptValidation_X509_STORE_new_00600256();
            ReceiptValidation_X509_STORE_add_cert_00600061(ReceiptValidation_store, ReceiptValidation_apple);
            // Check that the PKCS7_verify function is not tampered with
            // Check that the PKCS7 content is signed by the Apple Root CA certificate
            ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_018501FF(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2375;
            if (ReceiptValidation_verify != 2375) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0075016A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
        }
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        ReceiptValidation_verify = 0;
        ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert;
        ReceiptValidation_count = ReceiptValidation_sk_num_006001E9((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_001B01C4((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            char ReceiptValidation_common_name[608];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            // Retrieve the common name
            ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_001B019E(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608);
            if (ReceiptValidation_status <= 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0075016A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            volatile unsigned int ReceiptValidation_digest_length = 6; ReceiptValidation_digest_length -= 2; ReceiptValidation_digest_length *= 5;
            char ReceiptValidation_str2_[608];
            ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[39]), ReceiptValidation_str2_, 174, 16);
            ReceiptValidation_str2 = ReceiptValidation_str2_;
            const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_018500F4(ReceiptValidation_str2);
            unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE];
            unsigned int ReceiptValidation_len = 0;
            // Check that the X509_digest function is not tampered with
            ReceiptValidation_status = ReceiptValidation_X509_digest_0185001D(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2375;
            if (ReceiptValidation_status == 2375 || ReceiptValidation_len > 0) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0075016A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            ReceiptValidation_status = ReceiptValidation_X509_digest_0185001D(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2375;
            if (ReceiptValidation_status != 2375 || ReceiptValidation_len != ReceiptValidation_digest_length) {
                __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
                ReceiptValidation_exit_0075016A(ReceiptValidation_code);
                goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
            }
            char ReceiptValidation_fingerprint[608];
            volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;
            for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) {
                snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X", ReceiptValidation_digest[ReceiptValidation_index2]);
            }
            char ReceiptValidation_str3_[608];
            ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[103]), ReceiptValidation_str3_, 25, 49);
            ReceiptValidation_str3 = ReceiptValidation_str3_;
            // Check the common name and the fingerprint
            char ReceiptValidation_str1_[608];
            ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[45]), ReceiptValidation_str1_, 212, 16);
            ReceiptValidation_str1 = ReceiptValidation_str1_;
            volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;
            if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[269])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[269])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) {
                ReceiptValidation_verify = 2375;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2375) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char ReceiptValidation_str4_[608];
        ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[299]), ReceiptValidation_str4_, 76, 34);
        ReceiptValidation_str4 = ReceiptValidation_str4_;
        ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_001B024F(ReceiptValidation_str4, 0);
        ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_006001E7(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
        ReceiptValidation_ASN1_OBJECT_free_006001EB(ReceiptValidation_oid);
        if (ReceiptValidation_verify >= 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char ReceiptValidation_str5_[608];
        ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[572]), ReceiptValidation_str5_, 127, 34);
        ReceiptValidation_str5 = ReceiptValidation_str5_;
        ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_0060015F(ReceiptValidation_pkcs7, NULL, 0);
        ReceiptValidation_count = ReceiptValidation_sk_num_006001E9((const _STACK *) ReceiptValidation_certificates);
        for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) {
            ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_001B01C4((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1);
            ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_001B024F(ReceiptValidation_str5, 0);
            ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_006001E7(ReceiptValidation_certificate, ReceiptValidation_oid, 0);
            ReceiptValidation_ASN1_OBJECT_free_006001EB(ReceiptValidation_oid);
            if (ReceiptValidation_verify == -1) {
                sk_X509_free (ReceiptValidation_certificates);
                ReceiptValidation_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail;
        }
        // Global variables computation
        // From 469 to 359
        ReceiptValidation_JGNLWSNFMWVB += 249; ReceiptValidation_JGNLWSNFMWVB /= 2;
        // From 291 to 357
        ReceiptValidation_YXONPMRORYTN -= 172; ReceiptValidation_YXONPMRORYTN *= 3;
        // From 72 to 289
        ReceiptValidation_MIICEDDWGAZW -= 24; ReceiptValidation_MIICEDDWGAZW *= 6; ReceiptValidation_MIICEDDWGAZW += 1;
    ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail:
        if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_018500A2(ReceiptValidation_bio_p7);
        if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_001B0093(ReceiptValidation_pkcs7);
        if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates);
        if (ReceiptValidation_apple) ReceiptValidation_X509_free_018500B4(ReceiptValidation_apple);
        if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_018500A2(ReceiptValidation_bio_apple);
        if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_001B0154(ReceiptValidation_store);
    }
#else
#define ReceiptValidation_CheckReceiptSignature069(ReceiptValidation_ctx) { \
BIO *ReceiptValidation_bio_p7 = NULL; \
PKCS7 *ReceiptValidation_pkcs7 = NULL; \
STACK_OF(X509) *ReceiptValidation_certificates = NULL; \
X509 *ReceiptValidation_certificate = NULL; \
int ReceiptValidation_count, ReceiptValidation_index1; \
unsigned int ReceiptValidation_index2; \
ASN1_OBJECT *ReceiptValidation_oid = NULL; \
char *ReceiptValidation_str1; \
char *ReceiptValidation_str2; \
char *ReceiptValidation_str3; \
char *ReceiptValidation_str4; \
char *ReceiptValidation_str5; \
int ReceiptValidation_verify, ReceiptValidation_status; \
BIO *ReceiptValidation_bio_apple = NULL; \
X509 *ReceiptValidation_apple = NULL; \
X509_STORE *ReceiptValidation_store = NULL; \
volatile int ReceiptValidation_code = 46; ReceiptValidation_code -= 12; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt signature"); \
ReceiptValidation_bio_p7 = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_0060019C()); \
ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_p7, (void *) ReceiptValidation_MIICEDDWGAZW_008C0048((CFDataRef) ReceiptValidation_ctx->receipt_data), (int) ReceiptValidation_BZKYWAYUGQBA_02160138((CFDataRef) ReceiptValidation_ctx->receipt_data)); \
ReceiptValidation_pkcs7 = ReceiptValidation_d2i_PKCS7_bio_001B0097(ReceiptValidation_bio_p7, NULL); \
if (!ReceiptValidation_pkcs7) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_signed(ReceiptValidation_pkcs7)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
if (!PKCS7_type_is_data(ReceiptValidation_pkcs7->d.sign->contents)) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
ReceiptValidation_ctx->receipt_dict = NULL; \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_OpenSSL_add_all_digests_01850175(); \
if (ReceiptValidation_ctx->ca_data) { \
ReceiptValidation_bio_apple = ReceiptValidation_BIO_new_001B0013(ReceiptValidation_BIO_s_mem_0060019C()); \
ReceiptValidation_BIO_write_001B0178(ReceiptValidation_bio_apple, (void *) ReceiptValidation_MIICEDDWGAZW_008C0048((CFDataRef) ReceiptValidation_ctx->ca_data), (int) ReceiptValidation_BZKYWAYUGQBA_02160138((CFDataRef) ReceiptValidation_ctx->ca_data)); \
ReceiptValidation_apple = ReceiptValidation_d2i_X509_bio_001B0242(ReceiptValidation_bio_apple, NULL); \
if (!ReceiptValidation_apple) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_store = ReceiptValidation_X509_STORE_new_00600256(); \
ReceiptValidation_X509_STORE_add_cert_00600061(ReceiptValidation_store, ReceiptValidation_apple); \
ReceiptValidation_verify = ReceiptValidation_PKCS7_verify_018501FF(ReceiptValidation_pkcs7, NULL, ReceiptValidation_store, NULL, NULL, 0) * 2375; \
if (ReceiptValidation_verify != 2375) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
} \
ReceiptValidation_verify = 0; \
ReceiptValidation_certificates = ReceiptValidation_pkcs7->d.sign->cert; \
ReceiptValidation_count = ReceiptValidation_sk_num_006001E9((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_001B01C4((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
char ReceiptValidation_common_name[608]; \
ReceiptValidation_status = ReceiptValidation_X509_NAME_get_text_by_NID_001B019E(ReceiptValidation_certificate->cert_info->subject, NID_commonName, ReceiptValidation_common_name, 608); \
if (ReceiptValidation_status <= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
volatile unsigned int ReceiptValidation_digest_length = 6; ReceiptValidation_digest_length -= 2; ReceiptValidation_digest_length *= 5;  \
char ReceiptValidation_str2_[608]; \
ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[39]), ReceiptValidation_str2_, 174, 16); \
ReceiptValidation_str2 = ReceiptValidation_str2_; \
const EVP_MD *ReceiptValidation_digester = ReceiptValidation_EVP_get_digestbyname_018500F4(ReceiptValidation_str2); \
unsigned char ReceiptValidation_digest[EVP_MAX_MD_SIZE]; \
unsigned int ReceiptValidation_len = 0; \
ReceiptValidation_status = ReceiptValidation_X509_digest_0185001D(NULL, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2375; \
if (ReceiptValidation_status == 2375 || ReceiptValidation_len > 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_status = ReceiptValidation_X509_digest_0185001D(ReceiptValidation_certificate, ReceiptValidation_digester, ReceiptValidation_digest, &ReceiptValidation_len) * 2375; \
if (ReceiptValidation_status != 2375 || ReceiptValidation_len != ReceiptValidation_digest_length) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_fingerprint[608]; \
volatile unsigned int ReceiptValidation_increment = 1; ReceiptValidation_increment -= 1; ReceiptValidation_increment *= 4; ReceiptValidation_increment += 2;  \
for(ReceiptValidation_index2 = 0; ReceiptValidation_index2 < ReceiptValidation_digest_length; ReceiptValidation_index2++) { \
snprintf(&ReceiptValidation_fingerprint[ReceiptValidation_index2 * ReceiptValidation_increment], ReceiptValidation_increment + 1, "%02X", ReceiptValidation_digest[ReceiptValidation_index2]); \
} \
char ReceiptValidation_str3_[608]; \
ReceiptValidation_ObfuscationFunction008((ReceiptValidation_Strings[103]), ReceiptValidation_str3_, 25, 49); \
ReceiptValidation_str3 = ReceiptValidation_str3_; \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction006((ReceiptValidation_Strings[45]), ReceiptValidation_str1_, 212, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
volatile size_t ReceiptValidation_num = 6; ReceiptValidation_num -= 3; ReceiptValidation_num *= 4; ReceiptValidation_num += 1;  \
if (((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[269])(ReceiptValidation_common_name, ReceiptValidation_str1, ReceiptValidation_num) == 0 && ((__ReceiptValidation_strncmp) ReceiptValidation_Pointers[269])(ReceiptValidation_fingerprint, ReceiptValidation_str3, ReceiptValidation_digest_length * ReceiptValidation_increment - 1) == 0) { \
ReceiptValidation_verify = 2375; \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify != 2375) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_str4_[608]; \
ReceiptValidation_ObfuscationFunction00A((ReceiptValidation_Strings[299]), ReceiptValidation_str4_, 76, 34); \
ReceiptValidation_str4 = ReceiptValidation_str4_; \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_001B024F(ReceiptValidation_str4, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_006001E7(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_006001EB(ReceiptValidation_oid); \
if (ReceiptValidation_verify >= 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
char ReceiptValidation_str5_[608]; \
ReceiptValidation_ObfuscationFunction005((ReceiptValidation_Strings[572]), ReceiptValidation_str5_, 127, 34); \
ReceiptValidation_str5 = ReceiptValidation_str5_; \
ReceiptValidation_certificates = ReceiptValidation_PKCS7_get0_signers_0060015F(ReceiptValidation_pkcs7, NULL, 0); \
ReceiptValidation_count = ReceiptValidation_sk_num_006001E9((const _STACK *) ReceiptValidation_certificates); \
for(ReceiptValidation_index1 = 0; ReceiptValidation_index1 < ReceiptValidation_count; ReceiptValidation_index1++) { \
ReceiptValidation_certificate = (X509 *) ReceiptValidation_sk_value_001B01C4((const _STACK *) ReceiptValidation_certificates, ReceiptValidation_index1); \
ReceiptValidation_oid = ReceiptValidation_OBJ_txt2obj_001B024F(ReceiptValidation_str5, 0); \
ReceiptValidation_verify = ReceiptValidation_X509_get_ext_by_OBJ_006001E7(ReceiptValidation_certificate, ReceiptValidation_oid, 0); \
ReceiptValidation_ASN1_OBJECT_free_006001EB(ReceiptValidation_oid); \
if (ReceiptValidation_verify == -1) { \
sk_X509_free (ReceiptValidation_certificates); \
ReceiptValidation_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (ReceiptValidation_certificate == NULL || ReceiptValidation_verify < 0) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
goto ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail; \
} \
ReceiptValidation_JGNLWSNFMWVB += 249; ReceiptValidation_JGNLWSNFMWVB /= 2;  \
ReceiptValidation_YXONPMRORYTN -= 172; ReceiptValidation_YXONPMRORYTN *= 3;  \
ReceiptValidation_MIICEDDWGAZW -= 24; ReceiptValidation_MIICEDDWGAZW *= 6; ReceiptValidation_MIICEDDWGAZW += 1;  \
ReceiptValidation_CheckReceiptSignature069_ReceiptValidation_bail: \
if (ReceiptValidation_bio_p7) ReceiptValidation_BIO_free_018500A2(ReceiptValidation_bio_p7); \
if (ReceiptValidation_pkcs7) ReceiptValidation_PKCS7_free_001B0093(ReceiptValidation_pkcs7); \
if (ReceiptValidation_certificates) sk_X509_free (ReceiptValidation_certificates); \
if (ReceiptValidation_apple) ReceiptValidation_X509_free_018500B4(ReceiptValidation_apple); \
if (ReceiptValidation_bio_apple) ReceiptValidation_BIO_free_018500A2(ReceiptValidation_bio_apple); \
if (ReceiptValidation_store) ReceiptValidation_X509_STORE_free_001B0154(ReceiptValidation_store); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        volatile int ReceiptValidation_code = 144; ReceiptValidation_code -= 87; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[8]), 191, 32);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_00DF0167(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_02160165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key);
        if (ReceiptValidation_MIICEDDWGAZW_02160121(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0113004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key);
            ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key);
            ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 577 to 497
        ReceiptValidation_QZHZSDTCXRVO += 417; ReceiptValidation_QZHZSDTCXRVO /= 2;
        // From 359 to 526
        ReceiptValidation_JGNLWSNFMWVB -= 184; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;
        // Set to 302
        ReceiptValidation_MIICEDDWGAZW = 302;
        ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
volatile int ReceiptValidation_code = 144; ReceiptValidation_code -= 87; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction009CF((ReceiptValidation_Strings[8]), 191, 32); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_00DF0167(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_02160165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key); \
if (ReceiptValidation_MIICEDDWGAZW_02160121(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0113004A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key); \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_key); \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1); \
} \
ReceiptValidation_QZHZSDTCXRVO += 417; ReceiptValidation_QZHZSDTCXRVO /= 2;  \
ReceiptValidation_JGNLWSNFMWVB -= 184; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;  \
ReceiptValidation_MIICEDDWGAZW = 302; \
ReceiptValidation_CFRelease_021601B7(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[557]), 241, 32);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_00DF0167(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_02160165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_key);
        if (ReceiptValidation_MIICEDDWGAZW_02160121(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 577 to 497
        ReceiptValidation_QZHZSDTCXRVO += 417; ReceiptValidation_QZHZSDTCXRVO /= 2;
        // From 359 to 526
        ReceiptValidation_JGNLWSNFMWVB -= 184; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;
        // Set to 302
        ReceiptValidation_MIICEDDWGAZW = 302;
        ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier07F(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt identifier loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleId; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction004CF((ReceiptValidation_Strings[557]), 241, 32); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_00DF0167(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_YXONPMRORYTN_02160165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_key); \
if (ReceiptValidation_MIICEDDWGAZW_02160121(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_QZHZSDTCXRVO += 417; ReceiptValidation_QZHZSDTCXRVO /= 2;  \
ReceiptValidation_JGNLWSNFMWVB -= 184; ReceiptValidation_JGNLWSNFMWVB *= 3; ReceiptValidation_JGNLWSNFMWVB += 1;  \
ReceiptValidation_MIICEDDWGAZW = 302; \
ReceiptValidation_CFRelease_00DF01B7(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[247]), 59, 16);
        volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2;
        CFNumberRef ReceiptValidation_key = ReceiptValidation_QZHZSDTCXRVO_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JGNLWSNFMWVB_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
        if (ReceiptValidation_MIICEDDWGAZW_008C012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D00AD(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
            ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1);
            ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
            ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1);
        }
        // Global variables computation
        // From 312 to 137
        ReceiptValidation_BZKYWAYUGQBA += 236; ReceiptValidation_BZKYWAYUGQBA /= 4;
        // From 497 to 312
        ReceiptValidation_QZHZSDTCXRVO += 439; ReceiptValidation_QZHZSDTCXRVO /= 3;
        // From 526 to 220
        ReceiptValidation_JGNLWSNFMWVB += 354; ReceiptValidation_JGNLWSNFMWVB /= 4;
        // From 357 to 276
        ReceiptValidation_YXONPMRORYTN += 195; ReceiptValidation_YXONPMRORYTN /= 2;
        // Set to 497
        ReceiptValidation_THYJXLPRMQMR = 497;
        // From 12 to 197
        ReceiptValidation_BECRJHYNZMBT -= 2; ReceiptValidation_BECRJHYNZMBT *= 18; ReceiptValidation_BECRJHYNZMBT += 17;
        // Set to 204
        ReceiptValidation_TLAAETLOQTDB = 204;
        // From 302 to 571
        ReceiptValidation_MIICEDDWGAZW -= 112; ReceiptValidation_MIICEDDWGAZW *= 3; ReceiptValidation_MIICEDDWGAZW += 1;
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction006CF((ReceiptValidation_Strings[247]), 59, 16); \
volatile int ReceiptValidation_code = 10; ReceiptValidation_code -= 1; ReceiptValidation_code *= 19; ReceiptValidation_code += 2;  \
CFNumberRef ReceiptValidation_key = ReceiptValidation_QZHZSDTCXRVO_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JGNLWSNFMWVB_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
if (ReceiptValidation_MIICEDDWGAZW_008C012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D00AD(ReceiptValidation_code); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1); \
} \
ReceiptValidation_BZKYWAYUGQBA += 236; ReceiptValidation_BZKYWAYUGQBA /= 4;  \
ReceiptValidation_QZHZSDTCXRVO += 439; ReceiptValidation_QZHZSDTCXRVO /= 3;  \
ReceiptValidation_JGNLWSNFMWVB += 354; ReceiptValidation_JGNLWSNFMWVB /= 4;  \
ReceiptValidation_YXONPMRORYTN += 195; ReceiptValidation_YXONPMRORYTN /= 2;  \
ReceiptValidation_THYJXLPRMQMR = 497; \
ReceiptValidation_BECRJHYNZMBT -= 2; ReceiptValidation_BECRJHYNZMBT *= 18; ReceiptValidation_BECRJHYNZMBT += 17;  \
ReceiptValidation_TLAAETLOQTDB = 204; \
ReceiptValidation_MIICEDDWGAZW -= 112; ReceiptValidation_MIICEDDWGAZW *= 3; ReceiptValidation_MIICEDDWGAZW += 1;  \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[543]), 58, 16);
        CFNumberRef ReceiptValidation_key = ReceiptValidation_QZHZSDTCXRVO_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JGNLWSNFMWVB_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key);
        if (ReceiptValidation_MIICEDDWGAZW_008C012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 312 to 137
        ReceiptValidation_BZKYWAYUGQBA += 236; ReceiptValidation_BZKYWAYUGQBA /= 4;
        // From 497 to 312
        ReceiptValidation_QZHZSDTCXRVO += 439; ReceiptValidation_QZHZSDTCXRVO /= 3;
        // From 526 to 220
        ReceiptValidation_JGNLWSNFMWVB += 354; ReceiptValidation_JGNLWSNFMWVB /= 4;
        // From 357 to 276
        ReceiptValidation_YXONPMRORYTN += 195; ReceiptValidation_YXONPMRORYTN /= 2;
        // Set to 497
        ReceiptValidation_THYJXLPRMQMR = 497;
        // From 12 to 197
        ReceiptValidation_BECRJHYNZMBT -= 2; ReceiptValidation_BECRJHYNZMBT *= 18; ReceiptValidation_BECRJHYNZMBT += 17;
        // Set to 204
        ReceiptValidation_TLAAETLOQTDB = 204;
        // From 302 to 571
        ReceiptValidation_MIICEDDWGAZW -= 112; ReceiptValidation_MIICEDDWGAZW *= 3; ReceiptValidation_MIICEDDWGAZW += 1;
        ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion080(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt version loosely"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef ReceiptValidation_str1 = ReceiptValidation_ObfuscationFunction008CF((ReceiptValidation_Strings[543]), 58, 16); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_QZHZSDTCXRVO_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFStringRef ReceiptValidation_str2 = (CFStringRef) ReceiptValidation_JGNLWSNFMWVB_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_key); \
if (ReceiptValidation_MIICEDDWGAZW_008C012E(ReceiptValidation_str1, ReceiptValidation_str2, 0) != kCFCompareEqualTo) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(ReceiptValidation_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(ReceiptValidation_str2, CFStringGetSystemEncoding())); \
} \
ReceiptValidation_BZKYWAYUGQBA += 236; ReceiptValidation_BZKYWAYUGQBA /= 4;  \
ReceiptValidation_QZHZSDTCXRVO += 439; ReceiptValidation_QZHZSDTCXRVO /= 3;  \
ReceiptValidation_JGNLWSNFMWVB += 354; ReceiptValidation_JGNLWSNFMWVB /= 4;  \
ReceiptValidation_YXONPMRORYTN += 195; ReceiptValidation_YXONPMRORYTN /= 2;  \
ReceiptValidation_THYJXLPRMQMR = 497; \
ReceiptValidation_BECRJHYNZMBT -= 2; ReceiptValidation_BECRJHYNZMBT *= 18; ReceiptValidation_BECRJHYNZMBT += 17;  \
ReceiptValidation_TLAAETLOQTDB = 204; \
ReceiptValidation_MIICEDDWGAZW -= 112; ReceiptValidation_MIICEDDWGAZW *= 3; ReceiptValidation_MIICEDDWGAZW += 1;  \
ReceiptValidation_CFRelease_008C00F2(ReceiptValidation_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptHash099(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3;
        CFMutableDataRef ReceiptValidation_data4;
        unsigned char ReceiptValidation_digest[608];
        volatile int ReceiptValidation_counter = 11; ReceiptValidation_counter -= 5; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value;
        CFNumberRef ReceiptValidation_key;
        char *ReceiptValidation_str1;
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash");
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue;
        ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData;
        ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key);
        ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash;
        ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key);
        ReceiptValidation_data4 = ReceiptValidation_JGNLWSNFMWVB_00DF00DC(NULL, ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1) + ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2));
        ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data1), ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1));
        ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data2), ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2));
        ReceiptValidation_MIICEDDWGAZW_0113023B(ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data4), ReceiptValidation_digest);
        ReceiptValidation_OpenSSL_add_all_digests_0060017B();
        EVP_MD_CTX ReceiptValidation_hashctx2;
        ReceiptValidation_EVP_MD_CTX_init_00600019(&ReceiptValidation_hashctx2);
        char ReceiptValidation_str1_[608];
        ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[39]), ReceiptValidation_str1_, 174, 16);
        ReceiptValidation_str1 = ReceiptValidation_str1_;
        const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1);
        ReceiptValidation_EVP_DigestInit_01850057(&ReceiptValidation_hashctx2, ReceiptValidation_digester);
        ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data));
        ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data1), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1));
        ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data2), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2));
        ReceiptValidation_EVP_DigestFinal_0185020F(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL);
        CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_00DF002E(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter);
        if (!ReceiptValidation_BECRJHYNZMBT_021600C5(ReceiptValidation_data3, ReceiptValidation_data5)) {
            volatile int ReceiptValidation_code = 146; ReceiptValidation_code -= 89; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid");
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5);
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_014D004A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data1);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data2);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data4);
            ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5);
            goto ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail;
        }
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5);
        // Global variables computation
        // From 137 to 167
        ReceiptValidation_BZKYWAYUGQBA -= 82; ReceiptValidation_BZKYWAYUGQBA *= 3; ReceiptValidation_BZKYWAYUGQBA += 2;
        // Set to 497
        ReceiptValidation_JGNLWSNFMWVB = 497;
        // From 497 to 42
        ReceiptValidation_THYJXLPRMQMR += 49; ReceiptValidation_THYJXLPRMQMR /= 13;
        // From 197 to 227
        ReceiptValidation_BECRJHYNZMBT -= 122; ReceiptValidation_BECRJHYNZMBT *= 3; ReceiptValidation_BECRJHYNZMBT += 2;
        // From 204 to 357
        ReceiptValidation_TLAAETLOQTDB -= 85; ReceiptValidation_TLAAETLOQTDB *= 3;
    ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail:
        ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash099(ReceiptValidation_ctx) { \
CFDataRef ReceiptValidation_data1, ReceiptValidation_data2, ReceiptValidation_data3; \
CFMutableDataRef ReceiptValidation_data4; \
unsigned char ReceiptValidation_digest[608]; \
volatile int ReceiptValidation_counter = 11; ReceiptValidation_counter -= 5; ReceiptValidation_counter *= 3; ReceiptValidation_counter += 2;  \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value; \
CFNumberRef ReceiptValidation_key; \
char *ReceiptValidation_str1; \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt hash"); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeOpaqueValue; \
ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeBundleIdData; \
ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key); \
ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeHash; \
ReceiptValidation_key = ReceiptValidation_THYJXLPRMQMR_021601F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
ReceiptValidation_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_00DF020E((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_key); \
ReceiptValidation_data4 = ReceiptValidation_JGNLWSNFMWVB_00DF00DC(NULL, ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data) + ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1) + ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2)); \
ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114((CFDataRef) ReceiptValidation_ctx->guid_data), ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data1), ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1)); \
ReceiptValidation_CFDataAppendBytes_00DF01C1(ReceiptValidation_data4, ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data2), ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2)); \
ReceiptValidation_MIICEDDWGAZW_0113023B(ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data4), (CC_LONG) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data4), ReceiptValidation_digest); \
ReceiptValidation_OpenSSL_add_all_digests_0060017B(); \
EVP_MD_CTX ReceiptValidation_hashctx2; \
ReceiptValidation_EVP_MD_CTX_init_00600019(&ReceiptValidation_hashctx2); \
char ReceiptValidation_str1_[608]; \
ReceiptValidation_ObfuscationFunction003((ReceiptValidation_Strings[39]), ReceiptValidation_str1_, 174, 16); \
ReceiptValidation_str1 = ReceiptValidation_str1_; \
const EVP_MD *ReceiptValidation_digester = EVP_get_digestbyname(ReceiptValidation_str1); \
ReceiptValidation_EVP_DigestInit_01850057(&ReceiptValidation_hashctx2, ReceiptValidation_digester); \
ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114((CFDataRef) ReceiptValidation_ctx->guid_data), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138((CFDataRef) ReceiptValidation_ctx->guid_data)); \
ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data1), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data1)); \
ReceiptValidation_EVP_DigestUpdate_001B00F6(&ReceiptValidation_hashctx2, (const void *) ReceiptValidation_YXONPMRORYTN_00DF0114(ReceiptValidation_data2), (size_t) ReceiptValidation_QZHZSDTCXRVO_00DF0138(ReceiptValidation_data2)); \
ReceiptValidation_EVP_DigestFinal_0185020F(&ReceiptValidation_hashctx2, ReceiptValidation_digest, NULL); \
CFDataRef ReceiptValidation_data5 = ReceiptValidation_CFDataCreate_00DF002E(NULL, (const UInt8 *) ReceiptValidation_digest, ReceiptValidation_counter); \
if (!ReceiptValidation_BECRJHYNZMBT_021600C5(ReceiptValidation_data3, ReceiptValidation_data5)) { \
volatile int ReceiptValidation_code = 146; ReceiptValidation_code -= 89; ReceiptValidation_code *= 3; ReceiptValidation_code += 2;  \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt hash is invalid"); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_014D004A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data1); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data2); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data4); \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5); \
goto ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail; \
} \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data5); \
ReceiptValidation_BZKYWAYUGQBA -= 82; ReceiptValidation_BZKYWAYUGQBA *= 3; ReceiptValidation_BZKYWAYUGQBA += 2;  \
ReceiptValidation_JGNLWSNFMWVB = 497; \
ReceiptValidation_THYJXLPRMQMR += 49; ReceiptValidation_THYJXLPRMQMR /= 13;  \
ReceiptValidation_BECRJHYNZMBT -= 122; ReceiptValidation_BECRJHYNZMBT *= 3; ReceiptValidation_BECRJHYNZMBT += 2;  \
ReceiptValidation_TLAAETLOQTDB -= 85; ReceiptValidation_TLAAETLOQTDB *= 3;  \
ReceiptValidation_CheckReceiptHash099_ReceiptValidation_bail: \
ReceiptValidation_CFRelease_008C01CA(ReceiptValidation_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date");
        ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate;
        volatile int ReceiptValidation_code = 51; ReceiptValidation_code -= 17; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;
        CFDateRef ReceiptValidation_date1 = ReceiptValidation_THYJXLPRMQMR_008C002A(NULL, ReceiptValidation_BECRJHYNZMBT_021600E3());
        CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value);
        CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_TLAAETLOQTDB_00DF0165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key);
        ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key);
        if (ReceiptValidation_date2 && ReceiptValidation_BZKYWAYUGQBA_008C00A7(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) {
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired");
            __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173...");
            ReceiptValidation_exit_0075016A(ReceiptValidation_code);
            // Dead code
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key);
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1);
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key);
            ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1);
        }
        // Global variables computation
        // Set to 311
        ReceiptValidation_THYJXLPRMQMR = 311;
        ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1);
    }
#else
#define ReceiptValidation_CheckReceiptExpirationDate0A7(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Checking receipt expiration date"); \
ReceiptValidation_ReceiptAttributeType ReceiptValidation_value = ReceiptValidation_StoreReceiptAttributeTypeExpirationDate; \
volatile int ReceiptValidation_code = 51; ReceiptValidation_code -= 17; ReceiptValidation_code *= 5; ReceiptValidation_code += 3;  \
CFDateRef ReceiptValidation_date1 = ReceiptValidation_THYJXLPRMQMR_008C002A(NULL, ReceiptValidation_BECRJHYNZMBT_021600E3()); \
CFNumberRef ReceiptValidation_key = ReceiptValidation_JGNLWSNFMWVB_008C01F1(NULL, kCFNumberIntType, &ReceiptValidation_value); \
CFDateRef ReceiptValidation_date2 = (CFDateRef) ReceiptValidation_TLAAETLOQTDB_00DF0165((CFDictionaryRef) ReceiptValidation_ctx->receipt_dict, ReceiptValidation_key); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key); \
if (ReceiptValidation_date2 && ReceiptValidation_BZKYWAYUGQBA_008C00A7(ReceiptValidation_date1, ReceiptValidation_date2, 0) == kCFCompareGreaterThan) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Receipt has expired"); \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Exiting with code 173..."); \
ReceiptValidation_exit_0075016A(ReceiptValidation_code); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_key); \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1); \
} \
ReceiptValidation_THYJXLPRMQMR = 311; \
ReceiptValidation_CFRelease_00DF01CA(ReceiptValidation_date1); \
}
#endif
    
    
    // CodeBlock AppRunner
#ifdef RUNNER
#define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static uintptr_t RUNNER_ = ((uintptr_t)RUNNER - 311);
#endif
    
    inline static void ReceiptValidation_AppRunner0A8(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Running applicaition");
#ifdef RUNNER
        ((_RUNNER_)(RUNNER_ + (uintptr_t)ReceiptValidation_THYJXLPRMQMR))((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#else
        ReceiptValidation_THYJXLPRMQMR_014C0137((int) ReceiptValidation_ctx->argc, ReceiptValidation_ctx->argv);
#endif
    }
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void ReceiptValidation_CleanUp0AB(ReceiptValidation_CheckingContext *ReceiptValidation_ctx) {
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up");
        if (ReceiptValidation_ctx->receipt_data) {
            ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->receipt_data);
            ReceiptValidation_ctx->receipt_data = NULL;
        }
        if (ReceiptValidation_ctx->guid_data) {
            ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->guid_data);
            ReceiptValidation_ctx->guid_data = NULL;
        }
        if (ReceiptValidation_ctx->receipt_dict) {
            ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->receipt_dict);
            ReceiptValidation_ctx->receipt_dict = NULL;
        }
        if (ReceiptValidation_ctx->ca_data) {
            ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->ca_data);
            ReceiptValidation_ctx->ca_data = NULL;
        }
    }
#else
#define ReceiptValidation_CleanUp0AB(ReceiptValidation_ctx) { \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Cleaning up"); \
if (ReceiptValidation_ctx->receipt_data) { \
ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->receipt_data); \
ReceiptValidation_ctx->receipt_data = NULL; \
} \
if (ReceiptValidation_ctx->guid_data) { \
ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->guid_data); \
ReceiptValidation_ctx->guid_data = NULL; \
} \
if (ReceiptValidation_ctx->receipt_dict) { \
ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->receipt_dict); \
ReceiptValidation_ctx->receipt_dict = NULL; \
} \
if (ReceiptValidation_ctx->ca_data) { \
ReceiptValidation_CFRelease_008C01B7(ReceiptValidation_ctx->ca_data); \
ReceiptValidation_ctx->ca_data = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static int CheckReceiptAndRun(int _argc, const char *_argv[]) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point");
        // Create contexts
        ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL };
        // Arguments for running the application
        ReceiptValidation_ctx1.argc = _argc;
        ReceiptValidation_ctx1.argv = (const char **) _argv;
        // Call each step
        ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1));
        ReceiptValidation_LoadReceipt021((&ReceiptValidation_ctx1));
        ReceiptValidation_GetGUID049((&ReceiptValidation_ctx1));
        ReceiptValidation_GetRootCA050((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1));
        ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptSignature069((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptHash099((&ReceiptValidation_ctx1));
        ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1));
        ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1));
        ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1));
        return 0;
        _Pragma("clang diagnostic pop")
    }
#else
#define CheckReceiptAndRun(_argc, _argv) ({ \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__ReceiptValidation_RECEIPT_LOG("ReceiptValidation - Entry point"); \
ReceiptValidation_CheckingContext ReceiptValidation_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL }; \
ReceiptValidation_ctx1.argc = _argc; \
ReceiptValidation_ctx1.argv = (const char **) _argv; \
ReceiptValidation_GetMainBundle016((&ReceiptValidation_ctx1)); \
ReceiptValidation_LoadReceipt021((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetGUID049((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetRootCA050((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckBundleIdentifier05B((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckBundleVersion061((&ReceiptValidation_ctx1)); \
ReceiptValidation_GetReceiptInformation063((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptSignature069((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptIdentifier07F((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptVersion080((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptHash099((&ReceiptValidation_ctx1)); \
ReceiptValidation_CheckReceiptExpirationDate0A7((&ReceiptValidation_ctx1)); \
ReceiptValidation_AppRunner0A8((&ReceiptValidation_ctx1)); \
ReceiptValidation_CleanUp0AB((&ReceiptValidation_ctx1)); \
0; \
_Pragma("clang diagnostic pop") \
})
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif



#endif /* ReceiptValidation_h */
